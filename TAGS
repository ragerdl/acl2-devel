
acl2.lisp,2596
(defvar *acl2-compiler-enabled*)74,3524
(defconstant acl2::*the-live-state* 422,18716
(defvar acl2::*compiling-certified-file* 457,21076
(defmacro acl2::defconst 459,21123
(defvar acl2::*copy-of-common-lisp-symbols-from-main-lisp-package*)533,23981
(defvar acl2::*copy-of-common-lisp-specials-and-constants*)534,24049
(defvar acl2::*copy-of-acl2-version*)535,24109
(defconstant acl2::*acl2-files*537,24148
(defmacro initialize-state-globals 642,27527
(defconstant *suppress-compile-build-time*677,29272
(defparameter *global-package-prefix* 689,29660
(defparameter *1*-package-prefix* 691,29715
(defun make-global-package 693,29763
(defun make-*1*-package 701,30016
(defparameter acl2::*initial-lisp-symbol-mark*738,31316
(defconstant *acl2-package* 744,31544
(defmacro with-warnings-suppressed 774,32705
(defmacro with-suppression 829,35130
(defconstant acl2::*acl2-status-file*844,35760
(defun acl2::check-suitability-for-acl2 848,35867
(defun note-compile-ok 864,36389
(defvar *lisp-extension* 895,37927
(defparameter *compiled-file-extension*897,37961
(defmacro our-with-compilation-unit 930,39251
(defconstant *acl2-read-character-terminators*959,40573
(defparameter *acl2-readtable*990,41747
(defun define-sharp-dot 996,41958
(defun define-sharp-comma 1002,42054
(defun define-sharp-atsign 1008,42154
(defun define-sharp-bang 1014,42256
(defun modify-acl2-readtable 1020,42354
(defvar *reckless-acl2-readtable*1089,44414
(defvar *load-compiled-verbose* 1102,44859
(defun load-compiled 1104,44897
(defun compile-acl2 1359,54617
(defun no-object-file-or-out-of-date-object-file 1460,58707
(defun quick-compile-acl2 1468,59040
(defvar user::*fast-acl2-gcl-build* 1528,61231
(defun load-acl2 1530,61273
(defun load-acl2-execution-environment 1602,64043
(defparameter *acl2-panic-exit-status* 1625,64942
(defun exit-lisp 1627,64987
(defconstant *slashable-array*1700,68226
(defconstant *suspiciously-first-numeric-array*1713,68673
(defconstant *suspiciously-first-hex-array*1724,69009
(defconstant *base-10-array*1738,69430
(defconstant *hex-array*1749,69708
(defconstant *letter-array*1762,70057
(defmacro suspiciously-first-numeric-array 1776,70536
(defmacro numeric-array 1781,70701
(defconstant *char-code-backslash* 1786,70809
(defconstant *char-code-slash* 1788,70862
(defconstant *char-code-double-gritch* 1790,70911
(defconstant *big-n-special-object* 1796,71173
(defconstant *number-of-return-values*1798,71224
(defconstant *boole-array*1804,71326
(defvar *debug-prompt-suffix* 1857,73401
(defun break-level-for-acl2 1859,73515

acl2-fns.lisp,2392
(defmacro qfuncall 29,1205
(defun acl2-realp 52,2141
(defun gcl-version-> 68,2863
(defun gcl-version->=93,3956
(defvar *do-proclaims*149,6938
(defmacro defun-one-output 153,6985
(defun macroexpand-till 161,7228
(defun get-type-from-dcls 178,7938
(defun arg-declarations 186,8194
(defun collect-types 191,8379
(defun convert-type-to-integer-pair 202,8718
(defparameter *lisp-fns-with-mv-output-type*216,9152
(defvar *acl2-output-type-abort* 240,10063
(defun min-integer-* 242,10102
(defun max-integer-* 247,10208
(defun max-output-type-for-declare-form 252,10314
(defun max-output-type-for-declare-form-lst 332,13270
(defun output-type-for-declare-form-rec 367,14684
(defun output-type-for-declare-form-rec-list 480,19466
(defun output-type-for-declare-form 491,19960
(defun make-defun-declare-form 536,21609
(defun make-defconst-declare-form 569,23012
(defun make-defstobj-declare-form 587,23646
(defmacro eval-or-print 616,24914
(defun proclaim-form 623,25075
(defun proclaim-file 657,26324
(defparameter *comma* 710,28832
(defparameter *comma-atsign* 714,28998
(defparameter *backquote-counter* 718,29192
(defun backquote 725,29524
(defun backquote-lst 768,31702
(defun rev1@ 791,32499
(defun acl2-read-character-string 801,32706
(defun acl2-character-reader 873,35789
(defvar *inside-sharp-dot-read* 882,36107
(defvar *inhibit-sharp-comma-warning* 884,36145
(defun sharp-comma-read 886,36189
(defun sharp-dot-read 897,36720
(defun sharp-bang-read 927,38057
(defmacro sharp-atsign-read-er 951,39110
(defun sharp-atsign-read 957,39365
(defvar *sharp-reader-array-size*1004,41339
(defvar *sharp-reader-array*1011,41527
(defvar *sharp-reader-array-size-multiplier*1014,41599
(defconstant *sharp-reader-max-array-size*1021,41779
(defvar *sharp-reader-max-index*1029,42031
(defun update-sharp-reader-max-index 1042,42698
(defun reckless-sharp-sharp-read 1071,43883
(defun reckless-sharp-equal-read 1077,44043
(defmacro with-reckless-read 1085,44375
(defconstant *main-lisp-package*1107,45257
(defun symbol-package-name 1110,45323
(defmacro gv 1137,46541
(defun getenv$-raw 1164,47704
(defun get-os 1186,48433
(defun our-pwd 1195,48647
(defun cancel-dot-dots 1206,49001
(defun unix-full-pathname 1214,49319
(defun our-user-homedir-pathname 1247,50555
(defmacro special-form-or-op-p 1267,51445
(defvar *startup-package-name* 1290,52302

acl2-init.lisp,1534
(defun system-call 107,4212
(defun copy-acl2 179,6601
(defun our-probe-file 196,7116
(defun copy-distribution 217,7858
(defun make-tags 385,15501
(defvar *saved-build-date-lst*)425,17508
(defvar *saved-mode*)426,17540
(defvar *saved-string*428,17563
(defun maybe-load-acl2-init 450,18477
(defun chmod-executable 464,18911
(defun saved-build-dates 467,18999
(defmacro write-exec-file 484,19601
(defun save-acl2-in-akcl-aux 513,20819
(defun save-acl2-in-akcl 555,22636
(defun save-exec-raw 783,32075
(defvar *acl2-default-restart-complete* 788,32285
(defun acl2-default-restart 790,32331
(defun cmulisp-restart 838,33872
(defun sbcl-restart 844,33970
(defun save-acl2-in-lucid 850,34104
(defun save-acl2-in-lispworks 856,34300
(defun save-exec-raw 894,35915
(defun save-acl2-in-cmulisp-aux 902,36254
(defun save-acl2-in-cmulisp 945,37994
(defun save-exec-raw 954,38311
(defun save-acl2-in-sbcl-aux 959,38453
(defun save-acl2-in-sbcl 1013,40571
(defun save-exec-raw 1029,41209
(defun save-acl2-in-allegro-aux 1035,41382
(defun save-acl2-in-allegro 1087,43629
(defun save-exec-raw 1101,44101
(defun rc-filename 1105,44236
(defun write-acl2rc 1108,44301
(defun save-acl2-in-clisp-aux 1127,45015
(defun save-acl2-in-clisp 1170,46824
(defun save-exec-raw 1179,47136
(defun save-acl2-in-ccl-aux 1184,47275
(defun save-acl2-in-ccl 1243,49822
(defun save-exec-raw 1255,50289
(defun save-acl2 1262,50573
(defun proclaim-files 1324,52833
(defun generate-acl2-proclaims 1347,53692
(defun acl2 1367,54497

akcl-acl2-trace.lisp,340
(defmacro trace 42,1754
(defmacro untrace 98,3810
(defun trace-ppr-gcl 106,3954
(defun trace-fix-entry-raw 138,5296
(defun trace-fix-entry 154,5926
(defun trace-values 169,6465
(defun trace-values 179,6754
(defun make-nths 184,6839
(defun trace-fix-exit-raw 190,6961
(defun trace-fix-exit 205,7528
(defun trace-fix-cond 226,8500

allegro-acl2-trace.lisp,341
(defvar *trace-arglist*)58,2420
(defvar *trace-values*)60,2446
(defconst *trace-sublis* 62,2471
(defun trace-pre-process 107,4701
(defun trace-entry 135,5698
(defun trace-values 164,6809
(defun trace-values 174,7098
(defun make-nths 179,7183
(defun trace-exit 185,7305
(defun traced-fns-lst 221,8780
(defun trace-process 224,8845

openmcl-acl2-trace.lisp,320
(defvar *trace-arglist*)62,2518
(defvar *trace-values*)64,2544
(defparameter *trace-sublis* 66,2569
(defun trace-pre-process 72,2846
(defun trace-entry 107,4199
(defun trace-values 132,5303
(defun trace-exit 141,5617
(defun traced-fns-lst 170,6912
(defun trace-process 173,6977
(defun acl2-traced-fns 193,7839

axioms.lisp,57283
(acl2::defconst acl2::*common-lisp-symbols-from-main-lisp-package*87,4618
(defconst *common-lisp-specials-and-constants*599,35224
(defconst *stobj-inline-declare*677,39544
(defmacro make-package-entry 923,50599
(defmacro find-package-entry 964,52546
(defmacro package-entry-name 967,52648
(defmacro package-entry-imports 970,52719
(defmacro package-entry-hidden-p 973,52794
(defmacro package-entry-book-path 976,52871
(defmacro package-entry-defpkg-event-form 979,52950
(defmacro package-entry-tterm 982,53043
(defmacro find-non-hidden-package-entry 985,53124
(defmacro remove-package-entry 990,53317
(defmacro change-package-entry-hidden-p 993,53428
(defmacro getprop 1003,53798
(defvar *user-stobj-alist* 1021,54509
(defparameter *wormholep* 1050,56301
(defun-one-output replace-bad-lisp-object 1057,56612
(defun-one-output replace-bad-lisp-object-list 1068,56891
(defun-one-output wormhole-er 1074,57064
(defparameter *wormhole-cleanup-form* 1087,57590
(defstruct (cloaking-device1128,60395
(defun-one-output cloaked-set-w! 1135,60609
(defun-one-output assoc-eq-butlast-2 1143,60885
(defun-one-output assoc-eq-equal-butlast-2 1154,61307
(defun-one-output push-wormhole-undo-formi 1167,61814
(defconstant *open-input-channel-key*1291,68578
(defconstant *open-input-channel-type-key*1297,68793
(defconstant *open-output-channel-key*1300,68887
(defconstant *open-output-channel-type-key*1303,68973
(defconstant *non-existent-stream*1306,69069
(defmacro live-state-p 1309,69149
(defun interface-er 1315,69325
(defun-one-output acl2-numberp 1348,70609
(defun-one-output binary-+ 1351,70660
(defun-one-output binary-* 1353,70703
(defun-one-output unary-- 1355,70746
(defun-one-output unary-/ 1357,70784
(defparameter *in-recover-world-flg* 1363,70999
(defparameter *ever-known-package-alist*1368,71186
(defparameter *package-alist* 1394,72402
(defun-one-output find-package-fast 1396,72438
(defvar **1*-symbol-key* 1402,72638
(defvar *global-symbol-key* 1404,72698
(defun global-symbol 1406,72764
(defun *1*-symbol 1415,73103
(defun *1*-symbol? 1425,73467
(defun our-import 1437,73948
(defvar *defpkg-virgins* 1456,74966
(defun-one-output defpkg-raw1 1458,74997
(defun package-has-no-imports 1561,79597
(defmacro maybe-introduce-empty-pkg-1 1568,79821
(defmacro maybe-introduce-empty-pkg-2 1582,80267
(defmacro defpkg-raw 1588,80522
(defmacro defpkg 1616,81715
(defmacro defuns 1623,81985
(defmacro defun-std 1628,82115
(defmacro defuns-std 1636,82341
(defmacro defthm 1639,82396
(defmacro defthmd 1643,82460
(defmacro defthm-std 1648,82550
(defmacro defaxiom 1652,82618
(defmacro skip-proofs 1656,82684
(defmacro deflabel 1659,82720
(defmacro defdoc 1663,82786
(defmacro deftheory 1667,82850
(defun-one-output stobj-initial-statep-arr 1671,82917
(defun-one-output stobj-initial-statep-entry 1676,83090
(defun-one-output stobj-initial-statep1 1706,84010
(defun-one-output stobj-initial-statep 1714,84401
(defun remove-stobj-inline-declare 1728,84984
(defmacro defstobj 1739,85381
(defmacro value-triple 1841,89690
(defmacro verify-termination-boot-strap 1845,89760
(defmacro verify-guards 1849,89847
(defmacro in-theory 1853,89918
(defmacro in-arithmetic-theory 1857,89985
(defmacro push-untouchable 1861,90063
(defmacro remove-untouchable 1865,90137
(defmacro set-body 1869,90213
(defmacro table 1873,90279
(defmacro encapsulate 1884,90656
(defparameter *inside-include-book-fn*1924,92333
(defmacro include-book 1935,92783
(defmacro certify-book 1949,93350
(defmacro local 1960,93851
(defmacro defchoose 1964,93902
(defmacro mutual-recursion 1974,94317
(defmacro make-event 1977,94378
(deflabel programming1997,95346
(deflabel miscellaneous2015,95893
(defconst *standard-co* 2025,96162
(defconst *standard-oi* 2064,98302
(defconst *standard-ci* 2078,98944
(defconst nil 2115,99999
(defconst t 2123,100167
(defun iff 2129,100320
(defun xor 2142,100652
(defun booleanp 2154,100943
(defthm iff-is-an-equivalence2174,101479
(defun implies 2182,101694
(defthm iff-implies-equal-implies-12194,102006
(defthm iff-implies-equal-implies-22199,102155
(defun not 2205,102321
(defthm iff-implies-equal-not2220,102677
(defun hide 2225,102808
(defun rewrite-equiv 2331,107453
(defmacro real/rationalp 2345,107939
(defmacro complex/complex-rationalp 2363,108575
(defun eq 2387,109417
(defun true-listp 2414,110532
(defun list-macro 2428,110862
(defmacro list 2437,111063
(defun and-macro 2452,111464
(defmacro and 2463,111696
(defun or-macro 2479,112136
(defmacro or 2491,112390
(defmacro - 2534,113486
(defthm booleanp-compound-recognizer2579,115347
(defun integer-abs 2593,115842
(defun xxxjoin 2599,115951
(defmacro + 2618,116472
(defun-one-output len2 2629,116731
(defun len1 2634,116841
(defun len 2664,118260
(defun length 2691,118992
(defun-one-output complex-rationalp 2713,119576
(defun acl2-count 2716,119633
(defthm acl2-count-consp2765,121574
(defun cond-clausesp 2773,121769
(defun cond-macro 2782,122025
(defmacro cond 2809,123022
(defun eqlablep 2831,123744
(defthm eqlablep-recog2853,124562
(defun eqlable-listp 2862,124763
(defun atom 2878,125173
(defun make-character-list 2895,125576
(defun eqlable-alistp 2915,126099
(defun alistp 2931,126589
(defthm alistp-forward-to-true-listp2945,126922
(defthm eqlable-alistp-forward-to-alistp2950,127044
(defun acons 2956,127191
(defun endp 2973,127704
(defmacro must-be-equal 2995,128363
(defun must-be-equal 3004,128585
(defmacro mbe 3029,129489
(defmacro mbt 3182,135852
(defun member-equal 3285,140029
(defun union-equal 3308,140840
(defun subsetp-equal 3333,141877
(defun symbol-listp 3357,142743
(defthm symbol-listp-forward-to-true-listp3371,143101
(defun null 3377,143252
(defun member-eq 3393,143704
(defun subsetp-eq 3420,144730
(defun symbol-alistp 3433,145176
(defthm symbol-alistp-forward-to-eqlable-alistp3448,145617
(defun assoc-eq 3453,145761
(defun assoc-equal 3480,146854
(defun assoc-eq-equal-alistp 3504,147794
(defun assoc-eq-equal 3512,148049
(defun no-duplicatesp-equal 3528,148736
(defvar test-lst3565,150029
(defun-one-output strip-cars1 3661,152858
(defun strip-cars 3670,153139
(defun eql 3696,153830
(defmacro <=3722,154588
(defun = =3737,154917
(defun /=3762,155568
(defmacro > 3786,156268
(defmacro >=3801,156569
(deflabel zero-test-idioms3815,156884
(defmacro int=3984,165297
(defun zp 4006,166039
(defun-one-output zp 4046,167286
(defthm zp-compound-recognizer4050,167355
(defthm zp-open4065,167837
(defun zip 4091,168682
(defun-one-output zip 4131,169855
(defthm zip-compound-recognizer4133,169891
(defthm zip-open4142,170086
(defun nth 4151,170294
(defun char 4176,170987
(defun proper-consp 4198,171659
(defun improper-consp 4211,171992
(defmacro * 4226,172391
(defun conjugate 4255,173053
(defun prog2$ 4275,173561
(defmacro prog2$ 4355,176463
(deflabel Other4364,176772
(deflabel acl2-help4374,177074
(defun ec-call 4387,177501
(defmacro ec-call 4545,183823
(defmacro / 4560,184306
(defaxiom closure4598,185200
(defaxiom Associativity-of-+4605,185357
(defaxiom Commutativity-of-+4608,185426
(defun fix 4611,185483
(defaxiom Unicity-of-04629,185925
(defaxiom Inverse-of-+4633,185985
(defaxiom Associativity-of-*4636,186034
(defaxiom Commutativity-of-*4639,186103
(defaxiom Unicity-of-14642,186160
(defaxiom Inverse-of-*4646,186220
(defaxiom Distributivity4651,186347
(defaxiom <-on-others4655,186427
(defaxiom Zero4660,186516
(defaxiom Trichotomy4664,186569
(defaxiom Positive4676,186839
(defaxiom Rational-implies14686,187120
(defaxiom Rational-implies24693,187319
(defaxiom integer-implies-rational4701,187552
(defaxiom rational-implies-real4706,187673
(defaxiom complex-implies14712,187822
(defaxiom complex-definition4719,188006
(defaxiom nonzero-imagpart4730,188343
(defaxiom realpart-imagpart-elim4735,188474
(defaxiom realpart-complex4744,188761
(defaxiom imagpart-complex4752,188991
(defthm complex-equal4760,189215
(defun force 4779,189923
(defconst *force-xnume*4907,196976
(defun immediate-force-modep 4914,197097
(defconst *immediate-force-modep-xnume*4963,199002
(defun case-split 4966,199066
(defmacro disable-forcing 5020,201149
(defmacro enable-forcing 5042,201821
(defmacro disable-immediate-force-modep 5065,202543
(defmacro enable-immediate-force-modep 5089,203388
(defun synp 5113,204220
(defmacro syntaxp 5149,205866
(deflabel syntaxp-examples5298,213253
(defmacro bind-free 5501,219735
(deflabel bind-free-examples5723,229537
(defun extra-info 5905,236273
(defconst *extra-info-fn*5912,236435
(defaxiom nonnegative-product5929,237131
(defaxiom Integer-05961,238108
(defaxiom Integer-15965,238165
(defaxiom Integer-step5969,238222
(defaxiom Lowest-Terms5975,238364
(defaxiom +-guard6006,239305
(defaxiom car-cdr-elim6013,239467
(defaxiom car-cons 6018,239580
(defaxiom cdr-cons 6020,239628
(defaxiom cons-equal6022,239676
(defaxiom booleanp-characterp6037,240075
(defaxiom characterp-page6041,240155
(defaxiom characterp-tab6045,240225
(defaxiom characterp-rubout6049,240293
(defun member 6054,240384
(defun no-duplicatesp 6089,241744
(defun assoc 6108,242280
(defun r-eqlable-alistp 6139,243621
(defun rassoc 6150,243874
(defun rassoc-equal 6175,244824
(defun r-symbol-alistp 6194,245473
(defun rassoc-eq 6204,245709
(defconst *standard-chars*6229,246655
(defun standard-char-p 6239,247124
(defun standard-char-listp 6263,247848
(defun character-listp 6283,248390
(defthm character-listp-forward-to-eqlable-listp6297,248751
(defthm standard-char-listp-forward-to-character-listp6302,248897
(defaxiom coerce-inverse-16307,249055
(defaxiom coerce-inverse-26318,249349
(defaxiom coerce-inverse-26336,250049
(defaxiom standard-char-listp-coerce6343,250230
(defaxiom character-listp-coerce6348,250350
(defthm standard-char-listp-coerce-forward-chaining6367,251154
(defun string 6382,251764
(defun alpha-char-p 6418,252989
(defun upper-case-p 6444,253883
(defun lower-case-p 6471,254863
(defun char-upcase 6498,255842
(defun char-downcase 6551,257738
(defthm lower-case-p-char-downcase6603,259685
(defthm upper-case-p-char-upcase6608,259832
(defthm lower-case-p-forward-to-alpha-char-p6613,259975
(defthm upper-case-p-forward-to-alpha-char-p6619,260150
(defthm alpha-char-p-forward-to-characterp6625,260325
(defthm characterp-char-downcase6630,260459
(defthm characterp-char-upcase6634,260562
(defun string-downcase1 6643,260887
(defthm character-listp-string-downcase-16652,261166
(defun string-downcase 6656,261268
(defun string-upcase1 6681,262188
(defthm character-listp-string-upcase1-16690,262461
(defun string-upcase 6694,262560
(defun our-digit-char-p 6713,263215
(defmacro digit-char-p 6786,265466
(defun char-equal 6809,266363
(defun atom-listp 6831,267095
(defthm atom-listp-forward-to-true-listp6845,267465
(defthm eqlable-listp-forward-to-atom-listp6850,267595
(defthm characterp-nth6855,267731
(defun ifix 6862,267912
(defun rfix 6879,268365
(defun realfix 6906,269359
(defun nfix 6923,269826
(defun string-equal1 6942,270330
(defun string-equal 6967,271253
(defun standard-string-alistp 6992,272177
(defthm standard-string-alistp-forward-to-alistp7011,272833
(defun assoc-string-equal 7016,272979
(defmacro caar 7042,273818
(defmacro cadr 7051,274005
(defmacro cdar 7060,274192
(defmacro cddr 7069,274379
(defmacro caaar 7078,274566
(defmacro caadr 7087,274756
(defmacro cadar 7096,274946
(defmacro caddr 7105,275136
(defmacro cdaar 7114,275326
(defmacro cdadr 7123,275516
(defmacro cddar 7132,275706
(defmacro cdddr 7141,275896
(defmacro caaaar 7150,276086
(defmacro caaadr 7159,276279
(defmacro caadar 7168,276472
(defmacro caaddr 7177,276665
(defmacro cadaar 7186,276858
(defmacro cadadr 7195,277051
(defmacro caddar 7204,277244
(defmacro cadddr 7213,277437
(defmacro cdaaar 7222,277630
(defmacro cdaadr 7231,277823
(defmacro cdadar 7240,278016
(defmacro cdaddr 7249,278209
(defmacro cddaar 7258,278402
(defmacro cddadr 7267,278595
(defmacro cdddar 7276,278788
(defmacro cddddr 7285,278981
(defdoc e0-ordinalp7302,279601
(defdoc e0-ord-<7319,280375
(defun natp 7336,281163
(defthm natp-compound-recognizer7353,281731
(defun posp 7359,281873
(defthm posp-compound-recognizer7374,282376
(defun o-finp 7380,282517
(defmacro o-infp 7393,282948
(defun o-first-expt 7403,283164
(defun o-first-coeff 7421,283791
(defun o-rst 7439,284439
(defun o<g 7454,285039
(defun o< 7466,285305
(defmacro o> 7539,289038
(defmacro o<=7548,289231
(defmacro o>=7557,289445
(defun o-p 7566,289662
(defthm o-p-implies-o<g7749,296687
(defun make-ord 7755,296773
(defun list*-macro 7792,298094
(defmacro list* 7802,298371
(defmacro throw-without-attach 7821,298841
(defvar *aokp*7827,298992
(defmacro aokp 7834,299164
(defvar *attached-fn-called*)7837,299194
(defmacro throw-or-attach 7839,299225
(defun null-body-er 7865,300053
(defconst *main-lisp-package-name* 7887,301185
(defconst *initial-known-package-alist*7900,301813
(defaxiom stringp-symbol-package-name7912,302362
(defaxiom symbolp-intern-in-package-of-symbol7916,302473
(defaxiom symbolp-pkg-witness7920,302602
(defparameter *ld-level*7925,302714
(defvar *hard-error-returns-nilp* 7951,303943
(defun-one-output throw-raw-ev-fncall 7954,304000
(defun hard-error 7972,304646
(defun illegal 8082,309592
(defmacro intern 8152,312374
(defmacro intern$ 8219,315369
(defun keywordp 8240,316069
(defthm keywordp-forward-to-symbolp8267,316811
(defaxiom intern-in-package-of-symbol-symbol-name8272,316931
(defthm symbol-package-name-of-symbol-is-not-empty-string8285,317591
(defconst *pkg-witness-name* 8301,318371
(defaxiom symbol-name-pkg-witness8303,318421
(defaxiom symbol-package-name-pkg-witness-name8307,318532
(defun member-symbol-name 8321,319011
(defthm symbol-equality8327,319206
(defaxiom symbol-name-intern-in-package-of-symbol8347,319877
(defaxiom acl2-input-channel-package8358,320323
(defaxiom acl2-output-channel-package8366,320626
(defaxiom acl2-package8374,320932
(defaxiom keyword-package8385,321327
(defaxiom string-is-not-circular8400,321913
(defaxiom nil-is-not-circular8408,322242
(defun-one-output intern-in-package-of-symbol 8443,323890
(defdoc pkg-witness8471,325103
(defun-one-output pkg-witness 8488,325840
(defun binary-append 8506,326536
(defmacro append 8523,326956
(defthm true-listp-append8541,327576
(defthm standard-char-listp-append8571,328439
(defthm character-listp-append8578,328712
(defthm append-to-nil8584,328909
(defmacro concatenate 8590,329031
(defun string-append 8645,331358
(defun string-listp 8679,332511
(defun string-append-lst 8696,332852
(defmacro 1+ 8709,333214
(defmacro 1- 8723,333473
(defun remove 8737,333732
(defun remove-eq 8765,334684
(defun remove-equal 8792,335616
(defun remove1 8815,336360
(defun remove1-eq 8838,337096
(defun remove1-equal 8862,337906
(deflabel pairlis8882,338521
(defun pairlis$ 8892,338758
(defun remove-duplicates-eql 8916,339681
(defthm character-listp-remove-duplicates-eql8923,339904
(defun remove-duplicates 8928,340056
(defun remove-duplicates-equal 8960,341250
(deflabel events8986,342192
(deflabel documentation9014,343620
(deflabel history9207,351865
(defmacro first 9234,353039
(defmacro second 9243,353213
(defmacro third 9252,353390
(defmacro fourth 9261,353566
(defmacro fifth 9270,353745
(defmacro sixth 9279,353934
(defmacro seventh 9288,354124
(defmacro eighth 9297,354319
(defmacro ninth 9306,354513
(defmacro tenth 9315,354717
(defmacro rest 9324,354922
(defun identity 9338,355206
(defun revappend 9352,355502
(defthm character-listp-revappend9384,356398
(defun reverse 9395,356742
(defdoc switches-parameters-and-modes9416,357329
(defconst *valid-output-names*9425,357658
(defun set-difference-eq 9429,357796
(defun listp 9450,358575
(defconst *summary-types*9468,359008
(defun with-output-fn 9471,359079
(defun last 9632,366286
(defun first-n-ac 9659,366913
(defun take 9667,367168
(defun butlast 9709,368476
(defmacro with-output 9747,369646
(defmacro with-output 9751,369720
(defun-one-output strip-cdrs1 9930,377311
(defun strip-cdrs 9939,377592
(defun mutual-recursion-guardp 9962,378256
(defun collect-cadrs-when-car-eq 9971,378625
(defmacro value 9979,378936
(defun value-triple-fn 9982,378979
(defmacro value-triple 10009,380076
(defmacro assert-event 10051,381920
(defun xd-name 10096,383948
(defun defund-name-list 10107,384295
(defun throw-nonexec-error 10120,384741
(defun defun-nx-fn 10145,385829
(defmacro defun-nx 10159,386349
(defmacro defund-nx 10218,388887
(defun update-mutual-recursion-for-defun-nx-1 10224,389089
(defun update-mutual-recursion-for-defun-nx 10239,389678
(defmacro mutual-recursion 10248,389997
(defun pseudo-termp 10383,395408
(defun pseudo-term-listp 10466,399595
(defthm pseudo-term-listp-forward-to-true-listp10474,399787
(defun pseudo-term-list-listp 10485,400087
(defun add-to-set-eq 10494,400308
(defun add-to-set-eql 10513,400970
(defmacro variablep 10532,401647
(defmacro nvariablep 10534,401688
(defmacro fquotep 10536,401731
(defun quotep 10538,401788
(defun kwote 10543,401882
(defun kwote-lst 10556,402204
(defmacro unquote 10569,402599
(defmacro ffn-symb 10571,402638
(defun fn-symb 10573,402677
(defmacro fargs 10580,402806
(defun all-vars1 10584,402861
(defun all-vars1-lst 10593,403162
(defun all-vars 10607,403662
(defmacro translate-and-test 10652,406008
(defun intersectp-eq 10718,409505
(defun intersectp 10735,409969
(defun intersectp-equal 10752,410477
(defun make-fmt-bindings 10772,411165
(defmacro msg 10781,411540
(defmacro check-vars-not-free 10797,412251
(defun er-progn-fn 10812,412743
(defmacro er-progn 10833,413703
(defun legal-case-clausesp 10865,414815
(defun case-test 10881,415333
(defun case-list 10886,415490
(defun case-list-check 10898,415913
(defmacro case 10915,416622
(defun position-equal-ac 10980,418224
(defun position-ac 10989,418481
(defun position-equal 11000,418829
(defun position-eq-ac 11024,419789
(defun position-eq 11035,420140
(defun position 11072,421887
(defun nonnegative-integer-quotient 11105,423402
(defun true-list-listp 11138,424546
(defthm true-list-listp-forward-to-true-listp11153,425011
(defun legal-let*-p 11158,425151
(defun well-formed-type-decls-p 11197,427177
(defun symbol-list-listp 11209,427584
(defun get-type-decls 11215,427760
(defun let*-macro 11226,428272
(defun collect-cdrs-when-car-eq 11269,430664
(defun append-lst 11278,431017
(defun restrict-alist 11283,431172
(defmacro let* 11299,431593
(defmacro progn 11383,435355
(defdoc real11444,437775
(defun floor 11483,439537
(defun ceiling 11540,441449
(defun truncate 11596,443313
(defun round 11657,445367
(defun mod 11727,447397
(defun rem 11759,448145
(defun evenp 11791,448907
(defun oddp 11809,449403
(defun zerop 11826,449824
(defun plusp 11853,450705
(defun minusp 11873,451184
(defun min 11893,451667
(defun max 11915,452192
(defun abs 11939,452841
(defun signum 11962,453522
(defun lognot 11997,454668
(defthm standard-char-p-nth12022,455410
(deflabel proof-of-well-foundedness12035,455909
(defun expt 12216,463239
(defun logcount 12246,464276
(defun nthcdr 12271,464889
(defun logbitp 12304,465778
(defun ash 12326,466444
(defthm expt-type-prescription-non-zero-base12352,467266
(defthm realp-expt-type-prescription12361,467549
(defthm rationalp-expt-type-prescription12366,467675
(deflabel characters12375,467891
(defaxiom char-code-linear12443,470652
(defaxiom code-char-type12452,470890
(defaxiom code-char-char-code-is-identity12456,470981
(defaxiom char-code-code-char-is-identity12460,471107
(defun char< 12467,471321
(defun char> 12485,471834
(defun char<=12503,472353
(defun char>=12521,472892
(defun string<-l 12538,473420
(defun string< 12552,473847
(defun string> 12587,474827
(defun string<=12606,475394
(defun string>=12630,476199
(defun symbol-< 12653,476987
(defthm string<-l-irreflexive12677,477876
(defthm string<-irreflexive12680,477934
(defun substitute-ac 12683,477986
(defun substitute 12697,478432
(defun subsetp 12731,479716
(defun sublis 12760,480708
(defun subst 12788,481688
(defmacro pprogn 12811,482453
(defparameter *acl2-unwind-protect-stack* 12996,491906
(defvar *lp-ever-entered-p* 12999,491971
(defmacro push-car 13002,492022
(defmacro acl2-unwind-protect 13020,492842
(defun-one-output acl2-unwind 13126,497749
(defmacro when-logic 13302,507478
(defmacro in-package 13326,508359
(defmacro defpkg 13355,509208
(defdoc managing-acl2-packages13467,514594
(deflabel hidden-defpkg13476,514869
(deflabel hidden-death-package13484,515001
(defmacro defun 13546,517627
(defmacro defund 13791,529560
(defmacro defund 13837,531012
(defmacro defun-std 13841,531109
(defmacro defuns 13857,531472
(defmacro defuns-std 13900,532735
(defmacro verify-termination 13915,533109
(defmacro verify-termination-boot-strap 14067,540155
(defmacro verify-guards 14077,540436
(defdoc defpun14309,551019
(defmacro defmacro 14344,552368
(defmacro defconst 14437,556256
(defmacro defthm 14492,558167
(defmacro defthmd 14573,561210
(defmacro defthm-std 14617,562519
(defmacro defaxiom 14645,563261
(defmacro deflabel 14692,564957
(deflabel theories14734,566484
(defmacro deftheory 14881,573892
(defmacro defstobj 14939,575845
(defmacro in-theory 15311,593182
(defmacro in-arithmetic-theory 15371,595682
(defmacro push-untouchable 15426,598098
(defmacro remove-untouchable 15483,600473
(defmacro set-body 15579,604930
(defmacro table 15620,606542
(defmacro encapsulate 15837,617984
(defconst *load-compiled-file-values*16033,627028
(defmacro include-book 16037,627117
(defmacro make-event 16232,637402
(defdoc make-event-details16572,654019
(defdoc using-tables-efficiently16788,665432
(defmacro record-expansion 16869,668616
(defthm bad 17056,678455
(defmacro skip-proofs 17076,678890
(defmacro local 17174,684115
(defmacro defchoose 17234,686581
(deflabel conservativity-of-defchoose17395,692781
(defmacro defattach 17805,712792
(deflabel worldp)18246,733661
(defun plist-worldp 18248,733718
(defthm plist-worldp-forward-to-assoc-eq-equal-alistp18261,734129
(defdoc getprop18266,734285
(defun putprop 18280,734646
(defparameter meter-maid-cnt 18342,736840
(defun meter-maid 18345,736890
(defconst *acl2-property-unbound* 18363,737706
(defun getprop-default 18365,737765
(defun-one-output sgetprop1 18381,738274
(defvar fgetprop-stats 18414,739624
(defvar analyzed-fgetprop-stats 18416,739653
(defvar *current-acl2-world-key* 18496,742732
(defun fgetprop 18498,742808
(defun sgetprop 18559,745484
(defun ordered-symbol-alistp 18597,747097
(defthm ordered-symbol-alistp-forward-to-symbol-alistp18615,747648
(defun add-pair 18620,747806
(defun remove-first-pair 18632,748205
(defun getprops1 18641,748518
(defun getprops 18656,749139
(defthm equal-char-code18701,750930
(defun has-propsp1 18715,751331
(defun has-propsp 18736,752278
(defun extend-world 18768,753644
(defun retract-world 18788,754311
(defun global-val 18808,754980
(defun function-symbolp 18825,755649
(defun translate-declaration-to-guard/integer 18846,756713
(defun weak-satisfies-type-spec-p 18892,758611
(defun translate-declaration-to-guard1 18906,759122
(defun translate-declaration-to-guard 19093,766728
(defun translate-declaration-to-guard-lst 19169,770372
(deflabel declare19196,771333
(deflabel type-spec19252,773523
(defun the-error 19329,776889
(defun the-fn 19339,777173
(defmacro the 19388,779500
(defun set-difference-equal 19421,780604
(defconst *maximum-positive-32-bit-integer*19523,786052
(defconst *our-array-total-size-limit*19527,786134
(defun-one-output chk-make-array$ 19539,786566
(defmacro make-array$ 19572,788038
(defun bounded-integer-alistp 19623,790779
(defthm bounded-integer-alistp-forward-to-eqlable-alistp19639,791352
(defun keyword-value-listp 19644,791516
(defthm keyword-value-listp-forward-to-true-listp19660,791999
(defun assoc-keyword 19665,792147
(defthm keyword-value-listp-assoc-keyword19685,792810
(defthm consp-assoc-eq19691,793040
(defmacro f-get-global 19697,793210
(defun-one-output slow-array-warning 19724,794208
(deflabel arrays19741,794898
(deflabel arrays-example20156,817342
(deflabel slow-array-warning20235,820167
(defun array1p 20339,825597
(defthm array1p-forward20390,827901
(defthm array1p-linear20410,829062
(defun bounded-integer-alistp2 20419,829566
(defun assoc2 20438,830396
(defun array2p 20450,830701
(defthm array2p-forward20493,832423
(defthm array2p-linear20518,833988
(defun header 20533,834723
(defun dimensions 20565,835705
(defun maximum-length 20592,836795
(defun default 20616,837688
(defthm consp-assoc20641,838613
(defun aref1 20647,838774
(defun compress11 20695,840440
(defconstant *invisible-array-mark* 20710,841031
(defun array-order 20712,841112
(defun compress1 20725,841505
(defthm array1p-cons20990,854269
(defun aset1 21000,854627
(defun aref2 21121,860609
(defun compress211 21168,862295
(defun compress21 21184,862933
(defun compress2 21197,863419
(defthm array2p-cons21376,871392
(defun aset2 21387,871770
(defun flush-compress 21500,876636
(defparameter *return-values*21661,882970
(defmacro declare-return-values 21668,883159
(defun declare-return-values1 21671,883237
(defun in-akcl-with-mv-set-and-ref 21682,883459
(defconstant *akcl-mv-ref-and-set-inclusive-upper-bound* 21685,883534
(defmacro special-location 21687,883595
(defmacro set-mv 21697,884004
(defmacro mv-ref 21710,884470
(defun mv-refs-fn 21722,884902
(defmacro mv-refs 21730,885036
(defun cdrn 21747,885459
(defun mv-nth 21753,885625
(defun make-mv-nths 21784,886539
(defun mv-bindings 21792,886851
(defun mv-set-mvs 21802,887175
(defmacro mv 21807,887340
(defmacro mv-let 21910,890966
(defun mv-list 22064,897573
(defmacro mv-list 22111,899442
(defmacro mv-list 22116,899592
(deflabel state22119,899669
(defun update-nth 22285,908572
(defun update-nth-array 22326,909832
(defmacro maximum-positive-32-bit-integer 22337,910262
(defmacro maximum-positive-32-bit-integer-minus-1 22340,910345
(defun 32-bit-integerp 22343,910447
(defthm 32-bit-integerp-forward-to-integerp22349,910630
(defun rational-listp 22354,910766
(defthm rational-listp-forward-to-true-listp22369,911136
(defun real-listp 22377,911355
(defdoc real-listp22384,911519
(defthm real-listp-forward-to-true-listp22396,911868
(defun integer-listp 22401,911998
(defthm integer-listp-forward-to-rational-listp22416,912351
(defthm rational-listp-forward-to-real-listp22424,912588
(defun 32-bit-integer-listp 22429,912726
(defthm 32-bit-integer-listp-forward-to-integer-listp22435,912914
(defun open-input-channels 22444,913265
(defun update-open-input-channels 22448,913355
(defun open-output-channels 22452,913463
(defun update-open-output-channels 22456,913554
(defun global-table 22460,913663
(defun update-global-table 22464,913746
(defun t-stack 22468,913847
(defun update-t-stack 22472,913925
(defun 32-bit-integer-stack 22476,914021
(defun update-32-bit-integer-stack 22480,914112
(defun big-clock-entry 22484,914221
(defun update-big-clock-entry 22488,914307
(defun idates 22492,914411
(defun update-idates 22496,914488
(defun acl2-oracle 22500,914583
(defun update-acl2-oracle 22504,914665
(defun file-clock 22508,914765
(defun update-file-clock 22512,914846
(defun readable-files 22516,914945
(defun written-files 22520,915030
(defun update-written-files 22524,915115
(defun read-files 22528,915218
(defun update-read-files 22532,915300
(defun writeable-files 22536,915400
(defun list-all-package-names-lst 22540,915487
(defun update-list-all-package-names-lst 22544,915585
(defun user-stobj-alist1 22552,915913
(defun update-user-stobj-alist1 22556,916002
(defconst *initial-raw-arity-alist*22565,916257
(defconst *initial-checkpoint-processors*22590,916958
(defconst *primitive-program-fns-with-raw-code*22609,917696
(defconst *primitive-logic-fns-with-raw-code*22710,921469
(defconst *primitive-macros-with-raw-code*22815,925781
(defmacro with-live-state 22886,928432
(defun init-iprint-ar 22933,929952
(defconst *iprint-soft-bound-default* 22965,931345
(defconst *iprint-hard-bound-default* 22966,931389
(defconst *initial-global-table*22968,931435
(defun all-boundp 23234,943140
(defun known-package-alistp 23242,943411
(defthm known-package-alistp-forward-to-true-list-listp-and-alistp23253,943792
(defun timer-alistp 23259,943996
(defthm timer-alistp-forward-to-true-list-listp-and-symbol-alistp23271,944308
(defun typed-io-listp 23277,944510
(defthm typed-io-listp-forward-to-true-listp23289,944961
(defconst *file-types* 23294,945103
(defun open-channel1 23296,945156
(defthm open-channel1-forward-to-true-listp-and-consp23310,945571
(defun open-channel-listp 23316,945749
(defun open-channels-p 23329,946106
(defthm open-channels-p-forward23334,946228
(defun file-clock-p 23340,946407
(defthm file-clock-p-forward-to-integerp23344,946473
(defun readable-file 23349,946599
(defthm readable-file-forward-to-true-listp-and-consp23361,946961
(defun readable-files-listp 23367,947139
(defthm readable-files-listp-forward-to-true-list-listp-and-alistp23373,947325
(defun readable-files-p 23379,947529
(defthm readable-files-p-forward-to-readable-files-listp23383,947615
(defun written-file 23388,947777
(defthm written-file-forward-to-true-listp-and-consp23401,948176
(defun written-file-listp 23407,948352
(defthm written-file-listp-forward-to-true-list-listp-and-alistp23413,948533
(defun written-files-p 23419,948733
(defthm written-files-p-forward-to-written-file-listp23423,948816
(defun read-file-listp1 23428,948972
(defthm read-file-listp1-forward-to-true-listp-and-consp23437,949202
(defun read-file-listp 23443,949386
(defthm read-file-listp-forward-to-true-list-listp23449,949565
(defun read-files-p 23454,949715
(defthm read-files-p-forward-to-read-file-listp23458,949792
(defun writable-file-listp1 23463,949936
(defthm writable-file-listp1-forward-to-true-listp-and-consp23471,950141
(defun writable-file-listp 23477,950333
(defthm writable-file-listp-forward-to-true-list-listp23483,950524
(defun writeable-files-p 23488,950682
(defthm writeable-files-p-forward-to-writable-file-listp23492,950768
(defun state-p1 23497,950930
(defthm state-p1-forward23532,952360
(defun state-p 23575,954256
(defthm state-p-implies-and-forward-to-state-p123585,954513
(defmacro build-state23678,959835
(defconst *default-state*23702,960768
(defun build-state1 23707,960902
(defun coerce-state-to-object 23735,962162
(defun coerce-object-to-state 23739,962231
(defun-one-output strip-numeric-postfix 23747,962358
(defun global-table-cars1 23755,962598
(defun global-table-cars 23780,963742
(defun boundp-global1 23787,963946
(defun boundp-global 23796,964272
(defmacro f-boundp-global 23804,964520
(defun delete-pair 23820,965052
(defun makunbound-global 23828,965291
(defun get-global 23856,966329
(defun put-global 23869,966806
(defmacro f-put-global 23890,967626
(defun symbol-doublet-listp 23926,969033
(defconst *initial-ld-special-bindings*23939,969440
(defun always-boundp-global 23963,970299
(defun state-global-let*-bindings-p 23970,970496
(defun state-global-let*-get-globals 23987,971127
(defun state-global-let*-put-globals 24016,972677
(defun state-global-let*-cleanup 24049,974404
(defmacro state-global-let* 24099,977255
(defun integer-range-p 24159,980341
(defun signed-byte-p 24185,981360
(defun unsigned-byte-p 24193,981580
(defthm integer-range-p-forward24204,981885
(defthm signed-byte-p-forward-to-integerp24212,982135
(defthm unsigned-byte-p-forward-to-nonnegative-integerp24217,982269
(defmacro the-fixnum 24225,982532
(defun-one-output zpf 24229,982610
(defun zpf 24233,982719
(defmacro logand 24483,990919
(defmacro logeqv 24506,991648
(defmacro logior 24529,992389
(defmacro logxor 24552,993130
(defun integer-length 24575,993871
(defun binary-logand 24602,994791
(defun lognand 24616,995258
(defun binary-logior 24633,995774
(defun logorc1 24639,995951
(defun logorc2 24658,996575
(defun logandc1 24677,997200
(defun logandc2 24696,997814
(defun binary-logeqv 24714,998412
(defun binary-logxor 24720,998579
(defun lognor 24726,998738
(defun logtest 24745,999294
(defconst *BOOLE-1* 24767,999974
(defconst *BOOLE-2* 24768,1000002
(defconst *BOOLE-AND* 24769,1000030
(defconst *BOOLE-ANDC1* 24770,1000058
(defconst *BOOLE-ANDC2* 24771,1000086
(defconst *BOOLE-C1* 24772,1000114
(defconst *BOOLE-C2* 24773,1000142
(defconst *BOOLE-CLR* 24774,1000170
(defconst *BOOLE-EQV* 24775,1000198
(defconst *BOOLE-IOR* 24776,1000226
(defconst *BOOLE-NAND* 24777,1000254
(defconst *BOOLE-NOR* 24778,1000282
(defconst *BOOLE-ORC1* 24779,1000310
(defconst *BOOLE-ORC2* 24780,1000338
(defconst *BOOLE-SET* 24781,1000366
(defconst *BOOLE-XOR* 24782,1000394
(defun boole$ 24784,1000423
(deflabel io24852,1002983
(defdoc print-control24982,1008991
(defun set-forms-from-bindings 25079,1014119
(defconst *print-control-defaults*25091,1014579
(defun alist-difference-eq 25116,1015873
(defmacro with-print-defaults 25129,1016279
(defmacro reset-print-control 25135,1016536
(defun digit-to-char 25139,1016647
(defun print-base-p 25178,1017601
(defun explode-nonnegative-integer 25185,1017754
(defun explode-atom 25258,1020163
(defthm true-list-listp-forward-to-true-listp-assoc-eq25318,1022516
(defthm true-listp-cadr-assoc-eq-for-open-channels-p25323,1022681
(defun open-input-channel-p1 25333,1023042
(defun open-output-channel-p1 25348,1023705
(defun open-input-channel-p 25362,1024347
(defun open-output-channel-p 25368,1024616
(defun open-output-channel-any-p1 25374,1024887
(defun open-output-channel-any-p 25381,1025228
(defun open-input-channel-any-p1 25386,1025440
(defun open-input-channel-any-p 25393,1025777
(defmacro print-case 25398,1025987
(defmacro acl2-print-case 25402,1026053
(defmacro acl2-print-case 25408,1026249
(defun set-print-case 25411,1026321
(defmacro set-acl2-print-case 25451,1028307
(defmacro print-base 25457,1028504
(defmacro acl2-print-base 25461,1028589
(defmacro acl2-print-base 25467,1028785
(defmacro print-radix 25470,1028857
(defmacro acl2-print-radix 25474,1028959
(defmacro acl2-print-radix 25480,1029159
(defun check-print-base 25483,1029233
(defun set-print-base 25540,1032067
(defmacro set-acl2-print-base 25567,1033048
(defun set-print-circle 25573,1033245
(defun set-print-escape 25577,1033363
(defun set-print-pretty 25581,1033481
(defun set-print-radix 25585,1033599
(defun set-print-readably 25589,1033715
(defun check-null-or-natp 25593,1033837
(defun set-print-length 25604,1034185
(defun set-print-level 25610,1034422
(defun set-print-lines 25616,1034656
(defun set-print-right-margin 25622,1034890
(defmacro get-input-stream-from-channel 25629,1035162
(defmacro get-output-stream-from-channel 25636,1035352
(defmacro with-print-controls 25643,1035544
(defun princ$ 25700,1038435
(defun write-byte$ 25844,1044516
(defvar *print-circle-stream* 25873,1045684
(defun print-object$ 25875,1045720
(defparameter *file-clock* 25941,1048606
(defun make-input-channel 25944,1048650
(defun make-output-channel 25958,1049160
(defun-one-output setup-standard-io 25977,1049920
(defun-one-output lisp-book-syntaxp1 26017,1051412
(defun-one-output lisp-book-syntaxp 26098,1054535
(defparameter *parser* 26123,1055666
(defun-one-output parse-infix-file 26136,1056136
(defun open-input-channel 26166,1057378
(defthm nth-update-nth26272,1062126
(defthm true-listp-update-nth26279,1062312
(defthm nth-update-nth-array26292,1062662
(defun close-input-channel 26298,1062843
(defun open-output-channel 26343,1064733
(defun open-output-channel! 26419,1068421
(defun close-output-channel 26550,1073147
(defmacro legal-acl2-character-p 26620,1076298
(defun read-char$ 26636,1076846
(defun peek-char$ 26671,1078321
(defun read-byte$ 26697,1079371
(defun-one-output parse-infix-from-terminal 26726,1080520
(defun read-object 26750,1081558
(defconst *suspiciously-first-numeric-chars*26848,1085830
(defconst *suspiciously-first-hex-chars*26855,1086030
(defconst *base-10-chars*26865,1086282
(defconst *hex-chars*26872,1086424
(defconst *letter-chars*26881,1086614
(defconst *slashable-chars*26891,1086934
(defun some-slashable 26899,1087219
(defun prin1-with-slashes1 26907,1087424
(defun prin1-with-slashes 26926,1088163
(defmacro suspiciously-first-numeric-chars 26952,1089250
(defmacro numeric-chars 26957,1089415
(defun may-need-slashes1 26962,1089523
(defmacro potential-numberp 26986,1090555
(defun may-need-slashes-fn 27048,1092981
(defmacro may-need-slashes 27300,1103820
(defun needs-slashes 27309,1104199
(defparameter *t-stack* 27325,1104727
(defparameter *t-stack-length* 27327,1104769
(defun t-stack-length1 27332,1104808
(defun t-stack-length 27343,1105143
(defun make-list-ac 27350,1105341
(defmacro make-list 27357,1105549
(defun extend-t-stack 27374,1106178
(defun subseq-list 27409,1107699
(defun subseq 27420,1108066
(defconst *directory-separator*27498,1110918
(defconst *directory-separator-string*27501,1110958
(defmacro os-er 27504,1111032
(defun os 27512,1111300
(defthm all-boundp-preserves-assoc27516,1111404
(defun w 27538,1112122
(defun pathname-os-to-unix 27542,1112227
(defun ccl-at-least-1-3-p 27584,1113792
(defun pathname-unix-to-os 27591,1114103
(defun shrink-t-stack 27645,1116502
(defun aref-t-stack 27670,1117359
(defun aset-t-stack 27685,1117873
(defparameter *32-bit-integer-stack*27713,1118664
(defparameter *32-bit-integer-stack-length* 27716,1118753
(defun 32-bit-integer-stack-length1 27720,1118804
(defun 32-bit-integer-stack-length 27728,1119113
(defun extend-32-bit-integer-stack 27735,1119337
(defun shrink-32-bit-integer-stack 27783,1121655
(defun aref-32-bit-integer-stack 27814,1122785
(defun aset-32-bit-integer-stack 27837,1123555
(defmacro f-big-clock-negative-p 27866,1124584
(defmacro f-decrement-big-clock 27875,1124822
(defun big-clock-negative-p 27894,1125406
(defun decrement-big-clock 27914,1126288
(defun list-all-package-names 27939,1127242
(defun user-stobj-alist 27955,1127842
(defun update-user-stobj-alist 27965,1128162
(defun power-eval 27977,1128596
(defun-one-output idate 27985,1128806
(defun read-idate 27997,1129118
(defun read-run-time 28016,1129775
(defparameter *next-acl2-oracle-value* 28041,1130700
(defun read-acl2-oracle 28043,1130745
(defun getenv$ 28060,1131358
(defun setenv$ 28087,1132311
(defun random$ 28137,1134044
(defthm natp-random$28175,1135447
(defthm random$-linear28179,1135538
(defthm update-acl2-oracle-preserves-state-p128270,1139917
(defthm read-run-time-preserves-state-p128283,1140280
(defthm read-acl2-oracle-preserves-state-p128291,1140569
(defthm nth-0-read-run-time-type-prescription28307,1141052
(defun main-timer 28325,1141619
(defun put-assoc-eq 28336,1142109
(defun put-assoc-eql 28364,1143251
(defun put-assoc-equal 28392,1144408
(defun set-timer 28425,1145523
(defun get-timer 28434,1145807
(defun push-timer 28445,1146184
(defthm rationalp-+28454,1146568
(defthm rational-listp-implies-rationalp-car28476,1147477
(defthm rational-listp-implies-rationalp-car28525,1149631
(defthm timer-alistp-implies-rational-listp-assoc-eq28534,1149962
(defthm rational-listp-cdr28540,1150181
(defthm rationalp-*28553,1150678
(defthm rationalp-unary--28558,1150793
(defthm rationalp-unary-/28562,1150876
(defthm realp-+28571,1151212
(defthm realp-*28577,1151336
(defthm realp-unary--28583,1151460
(defthm realp-unary-/28588,1151556
(defthm rationalp-implies-acl2-numberp28594,1151702
(defun pop-timer 28597,1151786
(defun add-timers 28615,1152411
(defthm nth-0-cons28629,1152974
(defthm nth-add128639,1153176
(defthm main-timer-type-prescription28646,1153376
(defthm ordered-symbol-alistp-add-pair-forward28652,1153571
(defthm assoc-add-pair28661,1153840
(defthm add-pair-preserves-all-boundp28669,1154120
(defthm state-p1-update-main-timer28676,1154379
(defun increment-timer 28707,1155770
(defun print-rational-as-decimal 28719,1156212
(defun print-timer 28740,1156982
(defun prin1$ 28751,1157348
(defun current-package 28931,1166193
(defun known-package-alist 28985,1169040
(defthm state-p1-update-nth-2-world28998,1169423
(defthm true-list-listp-forward-to-true-listp-assoc-equal29036,1170782
(defconst *initial-untouchable-fns*29041,1170953
(defconst *initial-untouchable-vars*29116,1173351
(defun union-eq 29241,1176371
(defun ld-skip-proofsp 29274,1177838
(defun-one-output bad-lisp-objectp 29384,1183626
(defun-one-output chk-bad-lisp-object 29563,1192201
(defmacro assign 29574,1192568
(defmacro @ 29610,1193938
(defun make-var-lst1 29641,1195081
(defun make-var-lst 29668,1195987
(defun subst-for-nth-arg 29674,1196207
(defmacro the-mv 29684,1196509
(defmacro the-mv 29735,1198290
(defmacro the2s 29746,1198834
(deflabel bibliography29749,1198883
(defun non-free-var-runes 29770,1199685
(defun free-var-runes 29785,1200403
(defthm natp-position-ac 29793,1200622
(defun absolute-pathname-string-p 29801,1200958
(defun include-book-dir-alistp 29843,1202927
(defun legal-ruler-extenders-p 29852,1203242
(deflabel acl2-defaults-table29987,1207942
(defun table-alist 30280,1220194
(defmacro set-enforce-redundancy 30289,1220441
(defmacro set-enforce-redundancy 30362,1224174
(defmacro set-ignore-doc-string-error 30367,1224259
(defmacro set-ignore-doc-string-error 30412,1226108
(defmacro default-verify-guards-eagerness-from-table 30416,1226181
(defun default-verify-guards-eagerness 30420,1226310
(defmacro set-verify-guards-eagerness 30428,1226649
(defmacro set-verify-guards-eagerness 30483,1229365
(defun default-compile-fns 30487,1229438
(defmacro set-compile-fns 30493,1229695
(defmacro set-compile-fns 30551,1232221
(defun set-compiler-enabled 30555,1232282
(defun default-measure-function 30580,1233366
(defmacro set-measure-function 30587,1233656
(defmacro set-measure-function 30627,1235268
(defun default-well-founded-relation 30631,1235340
(defmacro set-well-founded-relation 30638,1235632
(defmacro set-well-founded-relation 30677,1237370
(defmacro default-defun-mode-from-table 30683,1237483
(defun default-defun-mode 30693,1237782
(defun default-defun-mode-from-state 30735,1240154
(defmacro logic 30740,1240294
(defmacro logic 30779,1241710
(defmacro program 30782,1241752
(defmacro program 30837,1243510
(defun invisible-fns-table 30839,1243537
(defmacro set-invisible-fns-table 30886,1245576
(defun unary-function-symbol-listp 30958,1248282
(defun invisible-fns-entryp 30976,1249081
(defmacro add-invisible-fns 30988,1249400
(defun delete-assoc-eq 31026,1250953
(defun delete-assoc-equal 31034,1251266
(defmacro remove-invisible-fns 31044,1251635
(defmacro set-invisible-fns-alist 31085,1253237
(defmacro invisible-fns-alist 31092,1253543
(defmacro set-bogus-defun-hints-ok 31099,1253778
(defmacro set-bogus-defun-hints-ok 31122,1254599
(defmacro set-bogus-mutual-recursion-ok 31127,1254686
(defmacro set-bogus-mutual-recursion-ok 31177,1256831
(defdoc ruler-extenders31181,1256906
(defmacro set-ruler-extenders 31583,1273106
(defmacro set-ruler-extenders 31606,1274019
(defmacro set-irrelevant-formals-ok 31611,1274101
(defmacro set-irrelevant-formals-ok 31646,1275334
(defmacro set-ignore-ok 31651,1275422
(defmacro set-ignore-ok 31695,1277092
(defmacro set-inhibit-warnings 31700,1277168
(defmacro set-inhibit-warnings 31705,1277257
(defmacro set-inhibit-output-lst 31747,1278852
(defmacro set-inhibited-summary-types 31846,1283716
(defmacro set-state-ok 31895,1285653
(defmacro set-state-ok 31968,1288815
(defmacro set-let*-abstractionp 31977,1289051
(defmacro set-let*-abstractionp 32024,1290950
(defmacro set-let*-abstraction 32028,1291017
(defun let*-abstractionp 32036,1291251
(defconst *initial-backchain-limit* 32050,1291747
(defconst *initial-default-backchain-limit* 32052,1291796
(defmacro set-backchain-limit 32055,1291870
(defmacro set-backchain-limit 32106,1294103
(defun backchain-limit 32110,1294176
(defmacro set-default-backchain-limit 32269,1301031
(defmacro set-default-backchain-limit 32335,1304381
(defun default-backchain-limit 32339,1304462
(defparameter *rewrite-depth-max* 32382,1306194
(defparameter *rewrite-depth-alist* 32383,1306265
(defun collect-rstats-1 32395,1306565
(defun collect-rstats-2 32409,1307035
(defun collect-rstats 32419,1307339
(defconst *default-rewrite-stack-limit*32435,1308042
(defmacro set-rewrite-stack-limit 32449,1308671
(defmacro set-rewrite-stack-limit 32489,1310306
(defun rewrite-stack-limit 32493,1310383
(defmacro set-nu-rewriter-mode 32539,1312227
(defmacro set-nu-rewriter-mode 32593,1314568
(defun nu-rewriter-mode 32597,1314634
(defun case-split-limitations 32617,1315599
(defmacro sr-limit 32646,1316842
(defmacro case-limit 32649,1316910
(defmacro set-case-split-limitations 32653,1316998
(defmacro set-case-split-limitations 32802,1324285
(defconst *initial-acl2-defaults-table*32813,1324757
(defun binop-table 32818,1324905
(defmacro add-binop 32854,1325803
(defmacro remove-binop 32892,1327589
(defun match-free-default 32925,1328907
(defmacro set-match-free-default 32933,1329238
(defmacro set-match-free-default 32990,1331966
(defmacro set-match-free-error 32994,1332034
(defun match-free-override 33038,1334074
(defmacro add-match-free-override 33056,1334833
(defmacro add-match-free-override 33242,1344003
(defmacro add-include-book-dir 33246,1344094
(defmacro delete-include-book-dir 33294,1346545
(defconst *non-linear-rounds-value* 33326,1347824
(defun non-linearp 33328,1347864
(defmacro set-non-linearp 33339,1348200
(defmacro set-non-linearp 33363,1348917
(defmacro set-non-linear 33367,1348988
(defmacro defttag 33376,1349231
(defmacro defttag 33628,1361790
(defdoc complex-rationalp33635,1361952
(deflabel let33649,1362397
(defdoc flet33774,1367965
(defun-one-output what-is-the-global-state 33890,1372317
(deflabel macro-aliases-table33957,1375472
(defun macro-aliases 34040,1378615
(defmacro add-macro-alias 34044,1378734
(defmacro remove-macro-alias 34070,1379619
(deflabel nth-aliases-table34103,1380985
(defun nth-aliases 34143,1382413
(defmacro add-nth-alias 34147,1382528
(defmacro remove-nth-alias 34168,1383178
(deflabel default-hints-table34204,1384805
(defun default-hints 34225,1385571
(defmacro set-default-hints 34250,1386533
(defmacro set-default-hints! 34309,1388943
(defmacro set-default-hints! 34327,1389635
(defmacro add-default-hints 34331,1389703
(defmacro add-default-hints! 34380,1391844
(defmacro add-default-hints! 34400,1392690
(defmacro remove-default-hints 34404,1392758
(defmacro remove-default-hints! 34444,1394301
(defmacro remove-default-hints! 34462,1395075
(defmacro set-override-hints-macro 34467,1395163
(defmacro set-override-hints-macro 34473,1395385
(defmacro add-override-hints! 34477,1395467
(defmacro add-override-hints 34491,1395969
(defmacro set-override-hints! 34521,1397241
(defmacro set-override-hints 34534,1397682
(defmacro remove-override-hints! 34558,1398539
(defmacro remove-override-hints 34571,1399040
(defun fix-true-list 34597,1400103
(defthm pairlis$-fix-true-list34613,1400503
(defun boolean-listp 34617,1400601
(defthm boolean-listp-cons34628,1400919
(defthm boolean-listp-forward34637,1401172
(defthm boolean-listp-forward-to-symbol-listp34647,1401435
(defaxiom completion-of-+34665,1402213
(defthm default-+-134676,1402452
(defthm default-+-234681,1402585
(defaxiom completion-of-*34686,1402718
(defthm default-*-134695,1402905
(defthm default-*-234699,1402991
(defaxiom completion-of-unary-minus34703,1403077
(defthm default-unary-minus34710,1403214
(defaxiom completion-of-unary-/34714,1403306
(defthm default-unary-/34722,1403481
(defaxiom completion-of-<34729,1403661
(defthm default-<-134741,1404085
(defthm default-<-234750,1404318
(defaxiom completion-of-car34759,1404551
(defthm default-car34767,1404694
(defaxiom completion-of-cdr34771,1404775
(defthm default-cdr34779,1404918
(defthm cons-car-cdr34783,1404999
(defaxiom completion-of-char-code34789,1405120
(defthm default-char-code34796,1405269
(defaxiom completion-of-code-char34801,1405414
(defthm default-code-char34811,1405694
(defaxiom completion-of-complex34822,1405997
(defthm default-complex-134830,1406224
(defthm default-complex-234838,1406457
(defthm complex-034847,1406779
(defthm add-def-complex34855,1406994
(defthm realpart-+34870,1407669
(defthm imagpart-+34875,1407799
(defaxiom completion-of-coerce34880,1407929
(defthm default-coerce-134891,1408192
(defthm make-character-list-make-character-list34897,1408375
(defthm default-coerce-234901,1408514
(defthm default-coerce-334915,1409072
(defaxiom completion-of-denominator34921,1409256
(defthm default-denominator34928,1409410
(defaxiom completion-of-floor134939,1409792
(defthm default-floor134950,1410042
(defaxiom floor1-integer-x34958,1410248
(defaxiom floor1-x-<=34965,1410431
(defaxiom x-<-add1-floor1-x34973,1410625
(defthm floor1-value34983,1410944
(defaxiom completion-of-imagpart34991,1411134
(defthm default-imagpart34998,1411282
(defaxiom completion-of-intern-in-package-of-symbol35003,1411396
(defthm default-intern-in-package-of-symbol35016,1411847
(defaxiom completion-of-numerator35024,1412107
(defthm default-numerator35031,1412255
(defaxiom completion-of-realpart35036,1412368
(defthm default-realpart35043,1412516
(defaxiom completion-of-symbol-name35048,1412630
(defthm default-symbol-name35055,1412783
(defaxiom completion-of-symbol-package-name35061,1412950
(defthm default-symbol-package-name35068,1413127
(defdoc i-small35077,1413407
(defdoc i-close35086,1413656
(defdoc i-large35094,1413911
(defdoc i-limited35103,1414174
(defdoc standardp35112,1414422
(defdoc standard-part35133,1415452
(defun i-small 35145,1415807
(defun i-close 35149,1415888
(defun i-large 35154,1415985
(defmacro i-limited 35159,1416079
(defaxiom i-large-integer-is-large35166,1416294
(defaxiom standardp-plus35174,1416581
(defaxiom standardp-uminus35179,1416701
(defaxiom standardp-times35183,1416787
(defaxiom standardp-udivide35188,1416908
(defaxiom standardp-complex35192,1416995
(defaxiom standardp-one35200,1417313
(defaxiom standard-part-of-standardp35206,1417437
(defaxiom standardp-standard-part35211,1417581
(defaxiom standard-part-of-reals-is-idempotent35215,1417684
(defaxiom standard-part-of-complex35220,1417844
(defaxiom standard-part-of-plus35226,1418022
(defaxiom standard-part-of-uminus35231,1418163
(defaxiom standard-part-of-times35235,1418268
(defaxiom standard-part-of-udivide35240,1418450
(defaxiom standard-part-<=35246,1418634
(defaxiom small-are-limited35252,1418794
(defaxiom standards-are-limited35259,1418970
(defthm standard-constants-are-limited35265,1419139
(defaxiom limited-integers-are-standard35273,1419388
(defaxiom standard+small->i-limited35280,1419624
(defdoc acl2-numberp35288,1419808
(defdoc +35296,1420011
(defdoc binary-+35312,1420317
(defdoc binary-*35338,1420902
(defdoc -35362,1421441
(defdoc unary--35391,1421929
(defdoc unary-/35413,1422398
(defdoc <35437,1422931
(defdoc car35467,1423817
(defdoc cdr35486,1424202
(defdoc char-code35505,1424589
(defdoc characterp35523,1424939
(defdoc code-char35531,1425104
(defdoc complex35554,1425626
(defdoc cons35602,1427411
(defdoc consp35611,1427691
(defdoc coerce35618,1427849
(defdoc denominator35670,1429462
(defdoc equal35688,1429769
(defdoc if35699,1430047
(defdoc imagpart35715,1430456
(defdoc integerp35733,1430757
(defdoc intern-in-package-of-symbol35740,1430913
(defdoc numerator35796,1433077
(defdoc rationalp35814,1433377
(defdoc realpart35822,1433570
(defdoc stringp35840,1433866
(defdoc symbol-name35847,1434012
(defdoc symbol-package-name35865,1434315
(defdoc symbolp35888,1435054
(defun double-rewrite 35895,1435200
(defparameter *acl2-time-limit* 36128,1446165
(defparameter *acl2-time-limit-boundp* 36130,1446203
(defun with-prover-time-limit 36135,1446268
(defmacro with-prover-time-limit 36237,1451254
(defparameter *time-limit-tags* 36255,1451964
(defmacro catch-time-limit4 36257,1452002
(defun time-limit4-reached-p 36275,1452806
(defconst *guard-checking-values*36317,1454763
(defun tilde-@-guard-checking-phrase 36320,1454829
(defun with-guard-checking 36327,1455095
(defmacro with-guard-checking 36359,1456184
(defun abort! 36365,1456342
(defmacro a! 36379,1456645
(defun p! 36403,1457513
(defun fmt-to-comment-window 36445,1459185
(defun fmt-to-comment-window! 36489,1460803
(defun pairlis2 36503,1461165
(defmacro cw 36511,1461449
(defmacro cw! 36632,1465935
(defparameter *wormhole-status-alist* 36652,1466600
(defparameter *inhibit-wormhole-activityp* 36655,1466661
(defun wormhole1 36657,1466710
(defun wormhole-p 36753,1470717
(defun duplicates 36769,1471142
(defun add-to-set-equal 36776,1471375
(defun intersection-eq 36800,1472182
(defun intersection-equal 36810,1472496
(defun evens 36820,1472818
(defun odds 36826,1472964
(defun set-equalp-equal 36830,1473042
(defparameter *metafunction-context* 36956,1479445
(DEFMACRO |Access 37062,1483468
(defmacro er 37076,1483949
(defun record-error 37176,1488801
(defun record-accessor-function-name 37182,1488971
(defmacro access 37194,1489356
(defun mfc-clause 37203,1489696
(defun mfc-rdepth 37237,1491094
(defun type-alist-entryp 37247,1491389
(defun type-alistp 37263,1491877
(defun mfc-type-alist 37270,1492036
(defun mfc-ancestors 37286,1492479
(defthm pseudo-term-listp-mfc-clause37305,1492998
(defthm type-alistp-mfc-type-alist37308,1493076
(defun bad-atom 37343,1495068
(defthm bad-atom-compound-recognizer37351,1495242
(defun-one-output bad-atom<=37363,1495536
(defaxiom booleanp-bad-atom<=37372,1495890
(defaxiom bad-atom<=37377,1496026
(defaxiom bad-atom<=37385,1496232
(defaxiom bad-atom<=37394,1496495
(defun alphorder 37404,1496765
(defun lexorder 37478,1499308
(defthm alphorder-reflexive37541,1501300
(defthm alphorder-transitive37558,1501817
(defthm alphorder-anti-symmetric37569,1502151
(defthm alphorder-total37593,1503166
(defthm lexorder-reflexive37608,1503703
(defthm lexorder-anti-symmetric37611,1503749
(defthm lexorder-transitive37616,1503888
(defthm lexorder-total37621,1504038
(defun merge-lexorder 37637,1504569
(defthm true-listp-merge-sort-lexorder37663,1505317
(defun merge-sort-lexorder 37669,1505510
(defdoc bdd37684,1506136
(defun if* 37718,1507586
(defun resize-list 37902,1514740
(deflabel theory-functions37918,1515250
(defun e/d-fn 37953,1516873
(defmacro e/d 37964,1517394
(defconst *ld-special-error*38004,1518856
(defun chk-ld-skip-proofsp 38008,1518970
(defun set-ld-skip-proofsp 38022,1519445
(defmacro set-ld-skip-proofs 38030,1519664
(defun mod-expt 38076,1521280
(defconst *t* 38118,1522983
(defconst *nil* 38120,1523017
(defmacro assert$ 38122,1523055
(defmacro fcons-term* 38143,1523625
(defun conjoin2 38162,1524285
(defun conjoin 38176,1524783
(defun disjoin2 38182,1524952
(defun disjoin 38194,1525310
(defun disjoin-lst 38200,1525495
(defun conjoin-clauses 38206,1525717
(defconst *true-clause* 38210,1525851
(defconst *false-clause* 38212,1525888
(defun clauses-result 38214,1525919
(defdoc sharp-dot-reader38219,1526067
(defdoc sharp-comma-reader38251,1527068
(defdoc sharp-bang-reader38259,1527273
(defdoc evisc-table38291,1528071
(defconst *top-hint-keywords*38535,1536604
(defconst *hint-keywords*38545,1537012
(defmacro add-custom-keyword-hint 38585,1538226
(defmacro add-custom-keyword-hint 38674,1542038
(defmacro remove-custom-keyword-hint 38678,1542119
(defmacro show-custom-keyword-hint-expansion 38711,1543253
(defun splice-keyword-alist 38738,1544084
(deflabel custom-keyword-hints38751,1544626
(defun search-fn-guard 38763,1544987
(defun search-from-start 38811,1547135
(defun search-from-end 38834,1547995
(defmacro search 39015,1553651
(defthm eqlablep-nth39079,1556691
(defun count-stringp 39084,1556820
(defun count-listp 39099,1557353
(defmacro count 39134,1558485
(defun make-sharp-atsign 39174,1560074
(defun sharp-atsign-alist 39181,1560290
(defmacro time-in-raw-lisp 39216,1562181
(defun ev 39219,1562248
(defun f 39240,1562998
(defun g 39245,1563190
(defun h 39290,1565207
(defmacro time$ 39309,1565863
(defun time$-logic 39495,1572647
(defmacro our-multiple-value-prog1 39503,1572836
(defconst *mv-vars*39519,1573324
(defconst *mv-var-values*39526,1573469
(defconst *mv-extra-var* 39530,1573563
(defun protect-mv 39532,1573599
(defmacro our-time 39580,1575363
(defun-one-output gc$-fn 39717,1581283
(defun gc$-fn 39738,1582006
(defmacro gc$ 39743,1582089
(defun get-wormhole-status 39767,1582875
(defun attachment-symbol 39805,1584109
(defun set-attachment-symbol-form 39812,1584286
(defmacro defattach 39815,1584379
(defun too-many-ifs-post-rewrite-prelim 39851,1585659
(defattach too-many-ifs-post-rewrite-wrapper 39858,1585885

memoize.lisp,546
(defmacro defn 38,1594
(defdoc hons-and-memoization47,1797
(defun hons-enabledp 378,17643
(defn clear-memoize-table 384,17859
(defn clear-memoize-tables 395,18087
(defmacro memoize-let 419,18997
(defconst *hons-primitive-fns*434,19592
(defconst *hons-primitives*461,20145
(defconst *mht-default-size* 472,20422
(defun memoize-form 474,20456
(defmacro memoize 591,25805
(defmacro unmemoize 850,39456
(defn memoize-on 895,40841
(defn memoize-off 907,41224
(defmacro memoizedp 918,41572
(defconst *untroublesome-characters*950,42448

hons.lisp,1076
(defdoc normed42,1901
(defn hons-copy 106,4637
(defn hons-copy-persistent 141,5986
(defn hons 161,6717
(defn hons-equal 190,7743
(defn hons-equal-lite 214,8736
(defn hons-clear 237,9694
(defn hons-wash 268,10939
(defn hons-summary 299,12303
(defmacro hons-resize 319,13048
(defn hons-resize-fn 395,15981
(defdoc fast-alists404,16325
(defn hons-assoc-equal 448,18507
(defdoc slow-alist-warning470,19340
(defmacro set-slow-alist-action 496,20377
(defn get-slow-alist-action 502,20607
(defn hons-get 510,20876
(defn hons-acons 529,21649
(defn hons-acons! 591,24367
(defn hons-shrink-alist 652,26873
(defn hons-shrink-alist! 699,28755
(defn fast-alist-len 717,29488
(defn fast-alist-free 734,30166
(defn fast-alist-summary 759,31120
(defn cons-subtrees 775,31663
(defn number-subtrees 791,32059
(defn clear-hash-tables 807,32573
(defn flush-hons-get-hash-table-link 816,32842
(deftheory definition-minimal-theory862,34747
(deftheory executable-counterpart-minimal-theory868,34857
(deftheory minimal-theory874,34984
(deftheory ground-zero 915,36506

basis.lisp,16372
(defun enforce-redundancy-er-args 45,2070
(defmacro enforce-redundancy 54,2533
(defvar *last-sys-call-status* 80,3627
(defun sys-call 82,3662
(defun sys-call-status 175,7291
(defdoc gcl213,8792
(defun wormhole-statusp 449,19800
(defun wormhole-entry-code 468,20315
(defun wormhole-data 487,20875
(defun set-wormhole-entry-code 503,21306
(defun set-wormhole-data 530,22332
(defun make-wormhole-status 554,23193
(defthm wormhole-status-guarantees578,24042
(defun wormhole-eval 619,25790
(defmacro wormhole-eval 715,30511
(defmacro wormhole 768,32905
(deflabel wormhole-implementation1272,57061
(defun global-set 1355,61552
(defun defabbrev1 1360,61723
(defun legal-variable-or-constant-namep 1366,61925
(defun legal-constantp1 1432,64842
(defun tilde-@-illegal-variable-or-constant-name-phrase 1447,65339
(defun legal-constantp 1478,67018
(defun defined-constant 1488,67332
(defun legal-variablep 1505,68071
(defun lambda-keywordp 1513,68356
(defun arglistp1 1517,68451
(defun arglistp 1525,68640
(defun find-first-bad-arg 1529,68716
(defun process-defabbrev-declares 1557,70085
(defmacro defabbrev 1580,71167
(defconst *primitive-formals-and-guards*1717,77432
(defconst *0* 1790,80169
(defconst *1* 1792,80203
(defconst *-1* 1794,80237
(defconst *cons-term1-alist*1800,80468
(defmacro cons-term2-body 1905,84637
(defun cons-term2 1912,84810
(defmacro cons-term1 1915,84860
(defun quote-listp 1931,85496
(defun cons-term 1937,85658
(defmacro cons-term* 1942,85774
(defmacro mcons-term 1945,85846
(defmacro mcons-term* 1952,86023
(defmacro fcons-term 1959,86214
(defun fargn1 1978,86857
(defmacro fargn 1984,87041
(defun cdr-nest 1987,87092
(defun all-but-last 1991,87166
(defun equal-x-constant 1996,87295
(defun match-tests-and-bindings 2012,87762
(defun match-clause 2086,91086
(defun match-clause-list 2094,91334
(defmacro case-match 2102,91645
(defconst *evisceration-mark* 2215,96732
(defconst *evisceration-hash-mark* 2225,97233
(defconst *evisceration-ellipsis-mark* 2226,97300
(defconst *evisceration-world-mark*2227,97373
(defconst *evisceration-state-mark*2229,97449
(defconst *evisceration-error-triple-marks*2231,97525
(defconst *evisceration-hiding-mark*2233,97613
(defconst *anti-evisceration-mark*2236,97692
(defmacro evisceratedp 2239,97779
(defconst *sharp-atsign-ar* 2325,102852
(defun get-sharp-atsign 2334,103227
(defun update-iprint-alist 2344,103566
(defun eviscerate1 2364,104349
(defun eviscerate1-lst 2396,105860
(defun eviscerate1p 2430,107236
(defun eviscerate1p-lst 2446,107909
(defun eviscerate 2458,108387
(defun eviscerate-simple 2518,111004
(defun aset1-lst 2530,111492
(defun iprint-hard-bound 2540,111807
(defun iprint-soft-bound 2543,111884
(defun iprint-last-index* 2546,111961
(defun iprint-last-index 2553,112171
(defun iprint-ar-illegal-index 2556,112261
(defun iprint-enabledp 2565,112604
(defun iprint-ar-aref1 2568,112699
(defun collect-posp-indices-to-header 2591,113474
(defun rollover-iprint-ar 2607,114067
(defun update-iprint-ar 2680,117534
(defun eviscerate-top 2703,118513
(defun world-evisceration-alist 2720,119335
(defun stobj-print-name 2724,119449
(defun evisceration-stobj-mark 2731,119613
(defun evisceration-stobj-marks1 2743,119925
(defconst *error-triple-sig*2755,120333
(defun evisceration-stobj-marks 2758,120383
(defun eviscerate-stobjs1 2766,120693
(defun eviscerate-stobjs 2787,121757
(defun eviscerate-stobjs-top 2836,123811
(defmacro mv-letc 2915,127815
(defmacro fixnum-bound 2920,127942
(defmacro er-hard-val 2923,128042
(defmacro the-fixnum! 2933,128386
(defmacro the-half-fixnum! 2951,128960
(defmacro the-unsigned-byte! 2969,129591
(defmacro the-string! 2978,129896
(defun xxxjoin-fixnum 2985,130060
(defmacro +f 3000,130464
(defmacro -f 3003,130521
(defmacro 1-f 3009,130695
(defmacro 1+f 3013,130776
(defmacro charf 3017,130857
(defmacro *f 3021,130931
(defmacro ppr-flat-right-margin 3316,142910
(defun set-ppr-flat-right-margin 3319,142994
(defun keyword-param-valuep 3332,143560
(defun cons-ppr1 3352,144519
(defun flsz-integer 3494,150510
(defun flsz-atom 3504,150888
(defun flsz1 3582,154183
(defun output-in-infixp 3610,155289
(defun-one-output flatsize-infix 3615,155428
(defun flsz 3631,156134
(defun max-width 3641,156497
(defun ppr1 3649,156708
(defun ppr1-lst 3744,160955
(defun newline 3787,162784
(defun fmt-hard-right-margin 3790,162852
(defun fmt-soft-right-margin 3794,162953
(defun set-fmt-hard-right-margin 3798,163054
(defun set-fmt-soft-right-margin 3827,164272
(defun write-for-read 3849,164928
(defun spaces1 3853,165052
(defun make-spaces-array-rec 3870,165773
(defun make-spaces-array 3880,166000
(defconst *acl2-built-in-spaces-array*3889,166306
(defun spaces 3895,166429
(defun flpr1 3917,167184
(defun flpr11 3930,167647
(defun-one-output print-flat-infix 3947,168150
(defun flpr 3961,168658
(defun ppr2-flat 3973,169061
(defun ppr2-column 3993,169713
(defun ppr2 4010,170414
(defconst *fmt-ppr-indentation* 4057,172373
(defun ppr 4059,172409
(defun scan-past-whitespace 4084,173425
(defun zero-one-or-more 4094,173752
(defun find-alternative-skip 4102,173921
(defun find-alternative-start1 4140,175398
(defun fmt-char 4183,177358
(defun find-alternative-start 4205,178210
(defun find-alternative-stop 4237,179680
(defun punctp 4273,181195
(defun fmt-tilde-s1 4278,181284
(defun fmt-var 4333,183703
(defun splat-atom 4345,184269
(defun splat 4363,184976
(defun splat1 4374,185446
(defun number-of-digits 4409,187171
(defun left-pad-with-blanks 4420,187592
(defmacro maybe-newline 4440,188350
(defun evisc-tuple 4467,189595
(defun standard-evisc-tuplep 4531,192476
(defun abbrev-evisc-tuple 4542,192783
(defun default-evisc-tuple 4558,193479
(defun term-evisc-tuple 4566,193894
(defun ld-evisc-tuple 4595,195145
(deflabel eviscerate-hide-terms4621,196429
(defun-one-output print-infix 4639,197028
(defun fmt-ppr 4679,198922
(defun fmt0* 4696,199435
(defun fmt0&v 4735,201227
(defun spell-number 4781,203213
(defun fmt-tilde-s 4851,206717
(defun fmt0 4901,208579
(defun tilde-*-&v-strings 5349,232334
(defun fmt1 5394,234273
(defun fmt 5436,235729
(defun fms 5857,254741
(defun fmt1! 5875,255216
(defun fmt! 5898,256050
(defun fms! 5921,256860
(defmacro fmx 5943,257634
(defun fmt-doc-example1 5950,257899
(defun fmt-doc-example 5958,258209
(defun fmt-abbrev1 5979,259300
(defun fmt-abbrev 5997,260100
(defconst *fmt-ctx-spacers*6003,260296
(defun fmt-ctx 6031,260800
(defun fmt-in-ctx 6067,262334
(defun error-fms-channel 6083,262875
(defun error-fms 6106,263830
(defun push-warning-frame 6116,264154
(defun absorb-frame 6121,264321
(defun pop-warning-frame 6127,264443
(defun push-warning 6147,265273
(defun member-string-equal 6170,266208
(defabbrev flambda-applicationp 6176,266363
(defabbrev lambda-applicationp 6182,266463
(defabbrev flambdap 6186,266559
(defabbrev lambda-formals 6192,266649
(defabbrev lambda-body 6194,266690
(defabbrev make-lambda 6196,266729
(defabbrev make-let 6199,266793
(defun doubleton-list-p 6202,266859
(defmacro er-let* 6208,267046
(defmacro match 6233,268023
(defmacro match! 6236,268085
(defconst *non-standard-primitives*6244,268338
(defun def-basic-type-sets1 6249,268429
(defmacro def-basic-type-sets 6256,268722
(defun list-of-the-type-set 6270,269190
(defmacro ts=6276,269352
(defmacro ts-complement0 6282,269560
(defmacro ts-complementp 6285,269652
(defun ts-union0-fn 6288,269702
(defmacro ts-union0 6295,269915
(defmacro ts-intersection0 6299,270008
(defmacro ts-intersectp 6303,270118
(defun ts-builder-case-listp 6310,270442
(defun ts-builder-macro1 6343,271815
(defun ts-builder-macro 6363,272790
(defmacro ts-builder 6369,272999
(defun standard-guard 6377,273236
(defun standard-guard-lst 6399,274156
(defmacro std 6406,274371
(defabbrev strip-not 6417,274785
(defun record-maker-function-name 6640,283181
(defun record-changer-function-name 6650,283480
(defmacro make 6659,283717
(defmacro change 6669,284074
(defun make-record-car-cdrs1 6677,284407
(defun make-record-car-cdrs 6681,284541
(defun make-record-accessors 6690,285000
(defun symbol-name-tree-occur 6714,286157
(defun some-symbol-name-tree-occur 6730,286745
(defun make-record-changer-cons 6735,286944
(defun make-record-changer-let-bindings 6754,287690
(defun make-record-changer-let 6776,288728
(defun make-record-changer 6802,289924
(defun make-record-maker-cons 6813,290238
(defun make-record-maker-let 6840,291432
(defun make-record-maker 6853,291908
(defun make-record-field-lst 6863,292184
(defun record-macros 6870,292468
(defmacro defrec 6888,293361
(defabbrev equalityp 6891,293442
(defabbrev inequalityp 6902,293806
(defabbrev consityp 6913,294168
(defun power-rep 6922,294392
(defun decode-idate 6928,294504
(defun pcd2 6951,295279
(defun print-idate 6958,295495
(defun print-current-idate 6986,296431
(defconst *window-descriptions*7041,299488
(defun io?-nil-output 7059,300084
(defmacro check-exact-free-vars 7066,300376
(defun formal-bindings 7093,301505
(defrec io-record7105,301852
(defmacro io-record-forms 7116,302141
(defun push-io-record 7123,302298
(defun saved-output-token-p 7131,302601
(defun io?-wormhole-bindings 7136,302831
(defmacro io? 7144,303136
(defmacro gag-mode 7274,309399
(defmacro io?-prove 7288,309703
(defmacro io?-gag 7293,309846
(defun output-ignored-p 7298,309987
(defun error1 7303,310160
(defun error1-safe 7343,311585
(defconst *uninhibited-warning-summaries*7354,311856
(defun warning-off-p 7368,312245
(defun warning1-body 7388,313073
(defun warning1 7404,313583
(defmacro warning$ 7432,314488
(defmacro warning-disabled-p 7460,315624
(defun observation1 7472,316007
(defmacro observation 7500,317249
(defun skip-when-logic 7520,317821
(defconst *check-sum-exclusive-maximum* 7545,319000
(defconst *check-length-exclusive-maximum* 7549,319151
(defconst *-check-sum-exclusive-maximum* 7557,319423
(defconst *1-check-length-exclusive-maximum*7559,319500
(defun ascii-code! 7562,319587
(defun check-sum1 7571,319733
(defun check-sum 7597,321087
(defun check-sum-inc 7663,324638
(defun check-sum-natural 7694,326115
(defun check-sum-string1 7701,326407
(defun check-sum-string2 7719,327161
(defun check-sum-string 7741,328050
(defun check-sum-obj1 7747,328299
(defun old-check-sum-obj 7788,330198
(defun plus-mod-m31 7859,334043
(defun double-mod-m31 7893,335564
(defun times-expt-2-16-mod-m31 7908,336066
(defun times-mod-m31 7956,338103
(defun fchecksum-natural-aux 8026,341110
(defun fchecksum-natural 8077,343089
(defun fchecksum-string1 8082,343219
(defun fchecksum-string2 8140,345655
(defun fchecksum-string 8184,347415
(defun fchecksum-atom 8208,348367
(defun fchecksum-obj 8271,351153
(defun check-sum-obj 8306,352684
(defun check-sum-obj 8313,352898
(defund primitive-root-p 8374,354530
(defun analyze-fchecksum-natural 8408,355837
(defun read-file-iterate 8445,357116
(defun read-file 8452,357338
(defun formals 8462,357704
(defun arity 8473,358116
(defun stobjs-in 8479,358340
(defun stobjs-out 8492,358651
(deflabel user-defined-functions-table8503,358946
(defun all-nils 8581,362240
(defconst *user-defined-functions-table-keys*8587,362406
(defrec def-body8598,362804
(defun latest-body 8612,363143
(defun def-body 8618,363284
(defun body 8621,363374
(defun symbol-class 8646,364665
(defmacro fdefun-mode 8697,367458
(defmacro programp 8705,367624
(defmacro logicalp 8708,367697
(defun program-termp 8713,367795
(defun program-term-listp 8722,368140
(defdoc common-lisp8728,368306
(deflabel defun-mode-caveat8765,370278
(deflabel generalized-booleans8863,374906
(defun defun-mode 8969,378745
(defun get-stobj-recognizer 9119,385837
(defun stobj-recognizer-terms 9130,386260
(defun mcons-term-smart 9140,386686
(defun optimize-stobj-recognizers1 9153,387014
(defun optimize-stobj-recognizers1-lst 9197,388915
(defun optimize-stobj-recognizers 9205,389267
(defun collect-non-x 9225,390078
(defun guard 9244,390908
(defdoc extra-info9304,393411
(defdoc guard-debug9312,393655
(deflabel guard-quick-reference9367,396525
(deflabel guard-introduction9441,399183
(deflabel guards-and-evaluation9487,401433
(deflabel guards-for-specification9859,418144
(deflabel guard-miscellany9916,420507
(deflabel guard-evaluation-examples-script9997,424774
(deflabel guard-evaluation-examples-log10160,430256
(deflabel guard-evaluation-table10887,450048
(defun guard-lst 11001,456076
(defmacro equivalence-relationp 11006,456242
(defun >=11031,457239
(defun all->=11039,457407
(defun strip-cadrs 11046,457596
(defun strip-cddrs 11053,457796
(defun global-set-lst 11058,457940
(defun sublis-var 11067,458216
(defun sublis-var-lst 11096,459329
(defun subcor-var1 11106,459578
(defun subcor-var 11117,459970
(defun subcor-var-lst 11129,460422
(defun car-cdr-nest1 11139,460722
(defun car-cdr-nest 11153,461230
(defun collect-non-trivial-bindings 11176,461935
(defun untranslate-and 11183,462229
(defun untranslate-or 11199,462669
(defun case-length 11209,462932
(defun cond-length 11243,464277
(defconst *untranslate-boolean-primitives*11251,464511
(defun right-associated-args 11254,464567
(defun dumb-negate-lit 11268,465079
(defun term-stobjs-out-alist 11287,465663
(defun term-stobjs-out 11296,465960
(defun accessor-root 11333,467326
(defvar *load-compiled-stack* 11370,469171
(defun observe-raw-mode-setting 11373,469224
(defmacro progn! 11454,473335
(defmacro progn! 11583,479393
(defun ld-redefinition-action 11623,481413
(deflabel redefining-programs11792,491047
(defun chk-ld-redefinition-action 11921,497740
(defun set-ld-redefinition-action 11929,498081
(defmacro redef 11936,498293
(defmacro redef! 11955,498876
(defmacro redef+ 11974,499460
(defmacro redef- 12022,501185
(defun chk-current-package 12055,502151
(defun set-current-package 12060,502358
(defun standard-oi 12071,502633
(defun read-standard-oi 12097,503849
(defun chk-standard-oi 12110,504337
(defun set-standard-oi 12123,504711
(defun standard-co 12129,504903
(defun chk-standard-co 12151,505846
(defun set-standard-co 12158,506048
(defun proofs-co 12165,506216
(defun chk-proofs-co 12183,506840
(defun set-proofs-co 12190,507038
(deflabel prompt12197,507198
(defun ld-prompt 12218,508087
(defun chk-ld-prompt 12261,510165
(defun set-ld-prompt 12272,510581
(defun ld-keyword-aliases 12279,510741
(defun ld-keyword-aliasesp 12328,513096
(defun chk-ld-keyword-aliases 12355,514096
(defun set-ld-keyword-aliases 12360,514281
(defun ld-pre-eval-filter 12367,514477
(defun new-namep 12397,515919
(defun chk-ld-pre-eval-filter 12480,519307
(defun set-ld-pre-eval-filter 12490,519721
(defun ld-pre-eval-print 12497,519917
(defun chk-ld-pre-eval-print 12533,521786
(defun set-ld-pre-eval-print 12538,521965
(defun ld-post-eval-print 12545,522157
(defun chk-ld-post-eval-print 12606,525708
(defun set-ld-post-eval-print 12611,525903
(defun ld-error-triples 12618,526099
(defun chk-ld-error-triples 12643,527245
(defun set-ld-error-triples 12648,527415
(defun ld-error-action 12655,527603
(defun chk-ld-error-action 12771,533940
(defun set-ld-error-action 12776,534136
(defun ld-query-control-alist 12783,534320
(defun ld-query-control-alistp 12841,537563
(defun cdr-assoc-query-id 12855,538053
(defun chk-ld-query-control-alist 12860,538214
(defun set-ld-query-control-alist 12866,538394
(defun ld-verbose 12873,538606
(defun chk-ld-verbose 12904,540045
(defun set-ld-verbose 12913,540322
(defconst *nqthm-to-acl2-primitives*12920,540486
(defconst *nqthm-to-acl2-commands*12988,542454
(defun nqthm-to-acl2-fn 13080,546154
(defun print-nqthm-to-acl2-doc1 13147,548660
(defun print-nqthm-to-acl2-doc 13181,549840
(defmacro nqthm-to-acl2 13201,550592
(defun allocate-fixnum-range 13409,558650
(defmacro allegro-allocate-slowly 13468,561433
(defun allegro-allocate-slowly-fn 13477,561992
(defmacro clear-pstk 13514,563609
(defconst *pstk-vars*13521,563789
(defun pstk-bindings-and-args 13533,563964
(defmacro pstk 13565,565111
(defun pstack-fn 13613,566955
(defmacro pstack 13636,567814
(defun verbose-pstack 13705,570253
(defun pop-inhibit-output-lst-stack 13738,571502
(defun push-inhibit-output-lst-stack 13748,571933

parallel.lisp,924
(defdoc parallelism55,2234
(defdoc parallel87,3885
(defdoc parallelism-build97,4037
(defun set-parallel-evaluation-fn 127,4981
(defmacro set-parallel-evaluation 162,6687
(defdoc parallelism-at-the-top-level222,9191
(defdoc parallelism-tutorial265,11041
(defdoc granularity545,22183
(defdoc parallelism-performance650,26476
(defdoc early-termination684,28101
(defun caar-is-declarep 731,30153
(defun declare-granularity-p 740,30364
(defun check-and-parse-for-granularity-form 753,30742
(defmacro pargs 790,32430
(defmacro plet 842,34707
(defun binary-pand 889,36448
(defmacro pand 897,36596
(defun binary-por 988,40245
(defmacro por 996,40401
(defun or-list 1062,42926
(defun and-list 1077,43374
(defun cpu-core-count 1090,43777
(defun rewrite-args-par-big-enough-rec 1158,46376
(defun rewrite-args-par-big-enough 1189,47477
(defun rewrite-args-par 1210,48259
(defun rewrite-args-par-rec 1219,48673

translate.lisp,6413
(deflabel syntax29,1205
(deflabel term47,1675
(defun termp 234,11390
(defun term-listp 260,12259
(defun computed-hint-tuple-listp 267,12389
(defun macro-args 287,12944
(defconst *macro-expansion-ctx* 366,15287
(defun chk-length-and-keys 368,15339
(defun remove-keyword 389,16169
(defun bind-macro-args-keys1 395,16362
(defun bind-macro-args-keys 450,19035
(defun bind-macro-args-after-rest 467,19837
(defun bind-macro-args-optional 477,20199
(defun bind-macro-args1 512,21648
(defun bind-macro-args 537,22690
(defun ev-fncall-null-body-er 545,23010
(defconst *safe-mode-guard-er-addendum*550,23144
(defun error-trace-suggestion 555,23378
(defun find-first-non-nil 566,23729
(defun latch-stobjs1 573,23927
(defun latch-stobjs 620,26248
(defvar *raw-guard-warningp*)645,27477
(defun raw-ev-fncall 648,27525
(defun translated-acl2-unwind-protectp4 725,31175
(defun translated-acl2-unwind-protectp 800,34802
(defun stobjp 811,35206
(defun acl2-system-namep 1162,50552
(defparameter *ev-shortcut-okp*1237,52791
(defun w-of-any-state 1252,53455
(defun untranslate-preprocess-fn 1265,54018
(defmacro untranslate* 1271,54283
(defmacro raw-guard-warningp-binding 1287,54934
(defun untouchable-fn-p 1315,56455
(defun save-ev-fncall-guard-er 1319,56622
(defrec attachment1328,56930
(defrec attachment-component1335,57048
(defun attachment-record-pairs 1342,57165
(defun all-attachments 1350,57401
(defun ev-fncall-rec-logical 1364,58033
(defun ev-fncall-rec 1610,67438
(defun ev-rec 1643,68829
(defun ev-rec-lst 1896,80692
(defun ev-rec-acl2-unwind-protect 1929,82111
(defun ev-fncall 2148,92019
(defun ev 2162,92658
(defun ev-lst 2197,94013
(defun ev-fncall-w 2215,94789
(defun ev-fncall-guard-er-msg 2289,97450
(defun ev-fncall-guard-er 2349,99863
(defun ev-fncall-msg 2357,100168
(defun untranslate1 2452,104482
(defun untranslate-cons1 2654,114800
(defun untranslate-cons 2674,115790
(defun untranslate-if 2685,116231
(defun untranslate-into-case-clauses 2704,117182
(defun untranslate-into-cond-clauses 2746,119485
(defun untranslate1-lst 2761,120216
(defun untranslate 2772,120643
(defun untranslate-lst 2798,121677
(defun ev-w 2835,123187
(defun ev-w-lst 2900,125624
(defun macroexpand1 3008,130465
(defun chk-declare 3072,133291
(defun collect-dcls 3092,134236
(defun acceptable-dcls-alist 3103,134623
(defconst *documentation-strings-permitted*3127,135561
(defconst *dcl-explanation-alist*3133,135712
(defun tilde-*-conjunction-phrase1 3143,136234
(defun tilde-*-conjunction-phrase 3154,136712
(defun collect-non-legal-variableps 3171,137365
(defun optimize-alistp 3177,137593
(defun chk-dcl-lst 3190,138014
(defun number-of-strings 3361,146746
(defun remove-strings 3367,146909
(defun get-string 3373,147075
(defun collect-declarations 3378,147199
(defun listify 3419,149158
(defun translate-declaration-to-guard-var-lst 3423,149256
(defun translate-dcl-lst 3437,149919
(defun dcl-guardian 3451,150515
(defun ignore-vars 3484,152052
(defun ignorable-vars 3490,152235
(defun mv-nth-list 3496,152430
(defabbrev translate-bind 3501,152607
(defun translate-deref 3507,152742
(defun translate-unbound 3523,153308
(defun packn1 3531,153512
(defun packn 3536,153647
(defun packn-pos 3543,153843
(defun pack2 3547,153977
(defun listlis 3550,154023
(defun genvar1 3558,154211
(defun genvar 3594,155987
(defun find-first-var 3638,158190
(defun find-first-var-lst 3646,158428
(defun find-first-fnsymb 3654,158600
(defun find-first-fnsymb-lst 3662,158874
(defun find-pkg-witness 3668,159035
(defmacro trans-er 3687,159751
(defmacro trans-er+ 3694,160001
(defmacro trans-er+? 3706,160419
(defmacro trans-value 3722,161090
(defmacro trans-er-let* 3726,161212
(defun hide-ignored-actuals 3749,162115
(defun augment-ignore-vars 3775,163084
(defun compute-stobj-flags 3864,167643
(defun compute-inclp-lst1 3877,168136
(defun compute-inclp-lst 3885,168459
(defun prettyify-stobj-flags 3902,169277
(defun unprettyify-stobj-flags 3911,169563
(defun prettyify-stobjs-out 3916,169737
(defun defstobj-supporterp 3925,170033
(defun stobj-creatorp 3940,170662
(defun defstobj-fnname 3952,171080
(defun parse-with-local-stobj 4009,173623
(defun ffnnamep 4029,174130
(defun ffnnamep-lst 4043,174583
(defconst *synp-trans-err-string*4053,174804
(defconst *ttag-fns-and-macros*4059,175152
(defun ttag 4081,175831
(defun unknown-binding-msg 4090,176118
(defconst *oneify-primitives*4108,177260
(defconst *macros-for-nonexpansion-in-raw-lisp*4143,178426
(defun chk-no-duplicate-defuns 4213,181189
(defun chk-state-ok-msg 4223,181550
(defun chk-state-ok 4238,182176
(defun chk-arglist-msg 4243,182322
(defun chk-arglist 4260,183056
(defun logical-name-type 4265,183230
(defun chk-all-but-new-name 4290,184229
(defun chk-defuns-tuples 4320,185446
(defun silent-error 4363,187169
(defun non-trivial-encapsulate-ee-entries 4366,187218
(defconst *ec-call-bad-ops*4375,187626
(defun name-dropper 4387,188155
(defun translate11-flet-alist 4405,188897
(defun translate11-flet-alist1 4419,189531
(defun translate11-flet 4627,199578
(defun translate11-mv-let 4663,200994
(defun translate11-wormhole-eval 4879,211723
(defun translate11-call 4974,216106
(defun translate11 5056,220141
(defun translate11-lst 6120,272975
(defun translate1 6250,279457
(defun collect-programs 6293,281618
(defun all-fnnames 6309,282240
(defun all-fnnames-lst 6319,282590
(defun all-fnnames1 6326,282749
(defmacro all-fnnames 6345,283445
(defmacro all-fnnames-lst 6348,283508
(defun translate 6351,283571
(defun replaced-stobj 6404,286194
(defun replace-stobjs1 6410,286363
(defun replace-stobjs 6418,286659
(defun build-alist 6446,287861
(defun non-stobjps 6463,288523
(defun user-stobjsp 6470,288774
(defun put-assoc-eq-alist 6477,288978
(defun-one-output chk-user-stobj-alist 6514,290690
(defun user-stobj-alist-safe 6539,291768
(defun ev-for-trans-eval 6548,292042
(defun trans-eval 6601,294295
(defun simple-translate-and-eval 6647,296179
(defun tilde-*-alist-phrase1 6735,300616
(defun tilde-*-alist-phrase 6740,300860
(defun set-temp-touchable-fns 6752,301155
(defun set-temp-touchable-vars 6769,301850
(defun clear-temp-touchable-fns 6786,302548
(defun clear-temp-touchable-vars 6789,302637
(defun mapcar$ 6805,303402
(defun mapdo 6827,304306
(defun always 6840,304765
(defun thereis 6854,305182

type-set-a.lisp,1859
(defconst *ts-non-negative-integer* 130,6225
(defconst *ts-non-positive-integer* 133,6354
(defconst *ts-integer* 136,6483
(defconst *ts-rational* 140,6642
(defconst *ts-real* 147,6894
(defconst *ts-complex* 157,7264
(defconst *ts-acl2-number*166,7680
(defconst *ts-rational-acl2-number* 172,7850
(defconst *ts-non-rational-acl2-number* 176,8008
(defconst *ts-negative-rational* 180,8238
(defconst *ts-positive-rational* 183,8371
(defconst *ts-non-positive-rational* 186,8504
(defconst *ts-non-negative-rational* 189,8636
(defconst *ts-ratio* 192,8768
(defconst *ts-non-ratio* 203,9097
(defconst *ts-negative-real* 206,9220
(defconst *ts-positive-real* 210,9409
(defconst *ts-non-positive-real* 214,9598
(defconst *ts-non-negative-real* 217,9718
(defconst *ts-cons* 221,9840
(defconst *ts-boolean* 224,9941
(defconst *ts-true-list* 226,9994
(defconst *ts-non-nil* 228,10059
(defconst *ts-symbol* 230,10110
(defconst *ts-true-list-or-string* 234,10254
(defconst *ts-empty* 236,10330
(defconst *ts-unknown* 238,10355
(defun one-bit-type-setp 246,10717
(defconst *code-type-set-alist*284,12371
(defun logior-lst 368,16017
(defun logand-lst 374,16147
(defun ts-complement-fn 382,16296
(defun ts-union-fn 388,16443
(defun ts-intersection-fn 398,16751
(defun eval-type-set 408,17070
(defun eval-type-set-lst 429,17886
(defmacro ts-complement 442,18204
(defmacro ts-intersection 445,18278
(defmacro ts-union 448,18362
(defmacro ts-subsetp 451,18432
(defun type-set-binary-+-alist-entry 466,18880
(defun type-set-binary-+-alist1 598,25544
(defun type-set-binary-+-alist 607,25950
(defun type-set-binary-*-alist-entry 615,26215
(defun type-set-binary-*-alist1 748,33303
(defun type-set-binary-*-alist 758,33762
(defun type-set-<-alist-entry 766,34027
(defun type-set-<-alist1 850,38068
(defun type-set-<-alist 860,38447

linear-a.lisp,5535
(defabbrev ts-acl2-numberp 41,1662
(defabbrev ts-rationalp 44,1731
(defabbrev ts-real/rationalp 47,1794
(defabbrev ts-integerp 53,1942
(defun all-quoteps 56,2003
(defun dumb-occur 63,2150
(defun dumb-occur-lst 74,2467
(defrec history-entry90,2999
(defun pt-occur 199,9424
(defun pt-intersectp 207,9622
(deflabel ttree289,13202
(defun tag-tree-occur 347,15747
(defun add-to-tag-tree 362,16292
(defconst *fake-rune-for-anonymous-enabled-rule*380,17017
(defun push-lemma 383,17115
(defun push-lemmas 396,17659
(defun scons-tag-trees1 411,18395
(defun scons-tag-trees 450,20311
(defmacro cons-tag-trees 467,21108
(defun tagged-objects 470,21184
(defun tagged-object 485,21696
(defun accumulate-ttree-into-state 535,24507
(defun pts-to-ttree-lst 552,25192
(defun marry-parents 564,25730
(defun collect-parents1 576,26123
(defun collect-parents0 585,26354
(defun collect-parents 596,26737
(defun ignore-polyp 608,27145
(defun to-be-ignoredp 623,27793
(defrec assumnote 659,29273
(defrec assumption674,30206
(defrec fc-derivation735,33822
(defun contains-assumptionp 743,34117
(defun remove-assumption-entries-from-type-alist 760,34794
(defun force-assumption1779,35510
(defun dumb-occur-in-type-alist 809,36843
(defun all-dumb-occur-in-type-alist 818,37039
(defun force-assumption825,37253
(defun tag-tree-occur-assumption-nil 922,42572
(defun assumption-free-ttreep 938,43226
(defconst *impossible-assumption*953,43826
(defaxiom *-preserves-<1038,47908
(defthm realpart-rational1046,48115
(defthm imagpart-rational1049,48192
(defun cplus 1200,55267
(defun ctimes 1207,55468
(defun clessp 1216,55807
(defun clesseqp 1224,56056
(defthm fix-id 1230,56209
(defthm operators-fix-their-arguments1243,56629
(defthm cplus-associativity-etc1256,57079
(defthm ctimes-distributivity1264,57315
(defthm ctimes-associativity-etc1273,57592
(defthm cplus-inverse1282,57838
(defthm clesseqp-reflexivity1288,57930
(defthm clessp-antisymmetry1294,58059
(defthm clessp-trichotomy1305,58300
(defthm clessp-additive-properties1342,59427
(defthm cplus-1-trick1356,59837
(defthm multiplication-by-positive-preserves-inequality1400,61185
(defthm zero-trichotomy-trick1419,61757
(defthm find-equational-poly-trick1430,62086
(deflabel linear-arithmetic1460,63085
(defmacro fn-count-evg-max-val 1567,67932
(defmacro fn-count-evg-max-val-neg 1575,68178
(defmacro fn-count-evg-max-calls 1578,68248
(defun min-fixnum 1589,68558
(defun fn-count-evg-rec 1597,68791
(defmacro fn-count-evg 1668,71943
(defun var-fn-count 1673,72024
(defun var-fn-count-lst 1739,75698
(defun term-order1 1764,76858
(defun arith-term-order 1835,81147
(defrec poly 1849,81488
(defabbrev first-var 1979,87906
(defabbrev first-coefficient 1981,87963
(defun good-coefficient 2004,89023
(defun good-pot-varp 2007,89073
(defun good-polyp 2017,89453
(defun logical-< 2027,89847
(defun logical-<=2040,90259
(defun evaluate-ground-poly 2050,90585
(defun impossible-polyp 2059,90854
(defun true-polyp 2063,90963
(defun silly-polyp 2067,91057
(defun impossible-poly 2074,91263
(defun base-poly0 2084,91500
(defun base-poly 2097,91865
(defun poly-alist-equal 2110,92238
(defun poly-equal 2124,92635
(defun poly-weakerp 2135,93014
(defun poly-member 2168,94398
(defun new-and-ugly-linear-varsp 2184,95055
(defun filter-polys 2210,96074
(defun add-linear-variable1 2237,97046
(defun zero-factor-p 2261,98036
(defun get-coefficient 2282,98870
(defun add-linear-variable 2296,99408
(defun dumb-eval-yields-quotep 2318,100082
(defun dumb-eval 2340,100888
(defun add-linear-term 2369,101874
(defun add-linear-terms-fn 2439,104440
(defmacro add-linear-terms 2453,104891
(defun normalize-poly1 2471,105442
(defun normalize-poly 2478,105635
(defun normalize-poly-lst 2494,106039
(defrec linear-pot 2507,106314
(defun modify-linear-pot 2516,106818
(defconst *max-linear-pot-loop-stopper-value* 2594,109720
(defun loop-stopper-value-of-var 2596,109770
(defun set-loop-stopper-values 2607,110159
(defun var-in-pot-lst-p 2639,111806
(defun bounds-poly-with-var 2649,112071
(defun bounds-polys-with-var 2675,113299
(defun polys-with-var1 2700,114228
(defun polys-with-var 2707,114531
(defun polys-with-pots 2719,114967
(defun new-vars-in-pot-lst 2732,115327
(defun changed-pot-vars 2782,117965
(defun infect-polys 2808,119192
(defun infect-first-n-polys 2823,119776
(defun infect-new-polys 2838,120387
(defun fcomplementary-multiplep1 2909,123684
(defun fcomplementary-multiplep 2922,124168
(defun already-used-by-find-equational-polyp1 2937,124823
(defun already-used-by-find-equational-polyp 2952,125375
(defun cons-term-binary-+-constant 2981,126898
(defun cons-term-unary-- 2990,127195
(defun cons-term-binary-*-constant 2996,127429
(defun find-equational-poly-rhs1 3007,127792
(defun find-equational-poly-rhs 3021,128294
(defun find-equational-poly3 3052,129329
(defun find-equational-poly2 3080,130612
(defun find-equational-poly1 3100,131313
(defun find-equational-poly 3120,132061
(defun get-coeff-for-cancel1 3157,133688
(defun cancel2 3181,134496
(defun cancel1 3189,134699
(defun cancel 3215,135740
(defun cancel-poly-against-all-polys 3286,139113
(defun add-poly 3379,143168
(defun prune-poly-lst 3509,148708
(defun add-polys1 3517,148971
(defun add-polys0 3561,150953
(defun show-poly2 3584,151938
(defun show-poly1 3592,152206
(defun show-poly 3605,152823
(defun show-poly-lst 3630,153968
(defun show-pot-lst 3636,154128
(defun show-type-alist 3647,154515

type-set-b.lisp,9575
(defconst *number-of-numeric-type-set-bits*32,1319
(defconst *type-set-binary-+-table-list*36,1423
(defconst *type-set-binary-+-table*45,1792
(defconst *type-set-binary-*-table-list*49,1913
(defconst *type-set-binary-*-table*58,2282
(defconst *type-set-<-table-list*66,2564
(defconst *type-set-<-table*81,3015
(defun assoc-equal-cdr 95,3616
(defun runep 103,3841
(defmacro base-symbol 234,10595
(defmacro strip-base-symbols 248,11161
(deflabel executable-counterpart251,11224
(deflabel world330,15028
(deflabel rune435,21211
(deflabel rule-names569,27691
(defun fnume 584,27929
(defun frunic-mapping-pair 600,28706
(defun fn-rune-nume 608,28960
(defun definition-runes 624,29745
(defun get-next-nume 629,29927
(defun deref-macro-name 665,31761
(defun rule-name-designatorp 671,31920
(defun theoryp1 715,34098
(defun theoryp 721,34302
(defun theoryp!1 729,34575
(defun theoryp! 751,35604
(defun runic-theoryp1 756,35724
(defun runic-theoryp 771,36272
(defun find-mapping-pairs-tail1 847,40547
(defun find-mapping-pairs-tail 862,41215
(defun augment-runic-theory1 879,42038
(defun augment-runic-theory 901,43096
(defconst *bad-runic-designator-string*926,44416
(defun convert-theory-to-unordered-mapping-pairs1 932,44776
(defun convert-theory-to-unordered-mapping-pairs 990,46998
(defun duplicitous-cons-car 1008,47815
(defun duplicitous-revappend-car 1017,48067
(defun duplicitous-merge-car 1025,48330
(defun duplicitous-sort-car 1059,50155
(defun augment-theory 1080,51160
(defmacro assert$-runic-theoryp 1108,52549
(defun runic-theory 1122,52867
(defrec enabled-structure1167,54815
(defun enabled-numep 1256,59483
(defun enabled-arith-numep 1271,59987
(defun enabled-runep 1292,60839
(defmacro active-runep 1300,61121
(defun enabled-xfnp 1335,62307
(defun sublis-var! 1356,63144
(defun sublis-var!-lst 1463,67264
(defun theory-warning-fns-aux 1480,67853
(defun theory-warning-fns 1508,69070
(defun maybe-warn-about-theory 1535,70676
(defrec theory-invariant-record1591,73147
(defun chk-theory-invariant1 1595,73216
(defun chk-theory-invariant 1679,77347
(defun load-theory-into-enabled-structure1690,77680
(defun initial-global-enabled-structure 1767,81647
(defun recompress-global-enabled-structure 1796,82865
(defun recompress-stobj-accessor-arrays 1848,85427
(defconst *fake-rune-for-type-set*1904,88463
(defun puffert 1909,88600
(defun immediate-forcep 1919,89012
(defmacro numeric-type-set 1927,89221
(defmacro rational-type-set 1950,90168
(defmacro real-type-set 1971,90950
(defun type-set-binary-+ 1992,91726
(defun type-set-binary-* 2034,93783
(defun type-set-not 2050,94351
(defun type-set-<-1 2058,94551
(defun type-set-< 2177,98972
(defun type-set-unary-- 2339,106712
(defun type-set-unary-/ 2362,107734
(defun type-set-numerator 2381,108632
(defun type-set-realpart 2396,109316
(defun type-set-imagpart 2407,109709
(defun type-set-complex 2428,110488
(defun type-set-floor1 2471,112307
(defun type-set-standard-part 2486,112984
(defun type-set-standardp 2502,113652
(defrec recognizer-tuple2518,114178
(defconst *initial-recognizer-alist*2622,118612
(defun most-recent-enabled-recog-tuple 2728,122359
(defun type-set-recognizer 2740,122870
(defun type-set-car 2773,124428
(defun type-set-cdr 2777,124565
(defun type-set-coerce 2788,124919
(defun type-set-intern-in-package-of-symbol 2810,125798
(defun type-set-length 2817,126098
(defun type-set-cons 2828,126466
(defconst *singleton-type-sets*2839,126819
(defun type-set-equal 2842,126888
(defun type-set-quote 2855,127421
(defun type-set-char-code 2892,128723
(defun fn-count-1 2902,129078
(defmacro fn-count 2938,130818
(defun term-order 2941,130876
(defrec type-prescription3096,138516
(defun find-runed-type-prescription 3139,140306
(defconst *expandable-boot-strap-non-rec-fns*3150,140633
(defun mv-atf 3212,143584
(defun assume-true-false-error 3250,145161
(defun non-cons-cdr 3259,145531
(defconst *one-way-unify1-implicit-fns*3277,146331
(defun one-way-unify1 3288,146495
(defun one-way-unify1-lst 3523,158144
(defun one-way-unify1-equal1 3540,158804
(defun one-way-unify1-equal 3564,159956
(defun one-way-unify 3572,160195
(defun canonical-representative 3632,163114
(defun subst-type-alist1-check 3678,164726
(defun subst-type-alist1 3689,165107
(defun subst-type-alist 3736,167259
(defun infect-type-alist-entry 3751,167861
(defun infect-new-type-alist-entries2 3759,168079
(defun infect-new-type-alist-entries1 3778,168877
(defun infect-new-type-alist-entries 3791,169421
(defun extend-type-alist-simple 3810,170335
(defun extend-type-alist1 3829,171115
(defun extend-type-alist 3907,174380
(defun zip-variable-type-alist 3958,176628
(defun assoc-equiv 3972,177239
(defun assoc-equiv+ 3991,177991
(defun assoc-type-alist 4057,180970
(defun look-in-type-alist 4074,181586
(defun member-char-stringp 4079,181742
(defun terminal-substringp1 4084,181898
(defun terminal-substringp 4093,182242
(defun evg-occur 4097,182377
(defun occur 4162,185111
(defun occur-lst 4172,185407
(defun pseudo-variantp 4195,186140
(defun pseudo-variantp-list 4228,187460
(defun worse-than 4493,194944
(defun worse-than-or-equal 4528,196395
(defun basic-worse-than-lst1 4552,197251
(defun basic-worse-than-lst2 4567,197840
(defun basic-worse-than 4575,198097
(defun some-subterm-worse-than-or-equal 4619,199974
(defun some-subterm-worse-than-or-equal-lst 4631,200407
(defun worse-than-lst 4636,200633
(defun push-ancestor 4651,201121
(defun earlier-ancestor-biggerp 4679,202431
(defun ancestors-check1 4699,203342
(defun ancestors-check 4823,209518
(defun normalize-linear-sum-3 4917,213300
(defun normalize-linear-sum-2 4943,214322
(defun normalize-linear-sum-1 4954,214707
(defun normalize-linear-sum 4994,216341
(defun type-set-finish-1 5042,218377
(defun type-set-finish 5231,228805
(defun search-type-alist-rec 5269,230479
(defun free-varsp 5307,232229
(defun free-varsp-lst 5312,232395
(defun search-type-alist 5319,232558
(defun term-and-typ-to-lookup 5394,236278
(defun lookup-hyp 5415,237187
(defun sublis-var-and-mark-free 5427,237596
(defun sublis-var-and-mark-free-lst 5450,238657
(defrec accp-info5499,241010
(defrec accp-entry5528,242075
(defabbrev rune=5560,243744
(defun merge-accumulated-persistence-aux 5564,243853
(defun merge-accumulated-persistence-rec 5587,244948
(defun merge-accumulated-persistence 5596,245282
(defun merge-accumulated-persistence-1 5657,247279
(defun assoc-rune=5677,248311
(defun merge-accumulated-persistence-rec 5683,248498
(defun add-accumulated-persistence-s 5706,249418
(defun add-accumulated-persistence-f 5733,250551
(defun accumulated-persistence-make-failures 5763,251806
(defun add-accumulated-persistence 5775,252355
(defmacro accumulated-persistence 5798,253408
(defdoc accumulated-persistence-subtleties6030,265389
(defun merge-car-> 6160,270530
(defun merge-sort-car-> 6167,270755
(defconst *accp-separator*6172,270920
(defun show-accumulated-persistence-phrase0 6175,270991
(defun show-accumulated-persistence-phrase1 6204,272008
(defun show-accumulated-persistence-phrase2 6222,272664
(defun pop-accp-fn 6242,273770
(defun pop-accp-fn-iterate 6277,275394
(defun show-accumulated-persistence-phrase 6293,276068
(defmacro show-accumulated-persistence 6352,279084
(defun push-accp 6395,281203
(defun pop-accp 6422,282652
(defmacro with-accumulated-persistence 6432,283026
(defun assume-true-false-<6459,284161
(defun mv-atf-2 6665,292785
(defun binding-hyp-p 6718,294910
(defmacro adjust-ignore-for-atf 6766,297288
(defun backchain-limit-reachedp1 6778,297687
(defun backchain-limit-reachedp 6783,297854
(defun new-backchain-limit 6794,298373
(defun type-set-rec 6823,299331
(defun type-set-lst 7246,320322
(defun type-set-relieve-hyps 7267,321348
(defun extend-type-alist-with-bindings 7502,332390
(defun type-set-with-rule 7529,333572
(defun type-set-with-rule1 7610,337333
(defun type-set-with-rules 7647,339384
(defun type-set-primitive 7700,341777
(defun assume-true-false-if 8237,364357
(defun assume-true-false-rec 8537,379688
(defun assume-true-false1 9640,434842
(defun proper/improper-cons-ts-tuple 9698,437429
(defun extend-with-proper/improper-cons-ts-tuple9772,440936
(defun type-set 9791,441755
(defun assume-true-false 9946,449430
(defun ok-to-force-ens 9953,449746
(defun add-linear-assumption 9962,450103
(defun return-type-alist10072,454983
(defun type-alist-equality-loop1 10102,456140
(defun clean-up-alist 10193,460196
(defun duplicate-keysp 10206,460761
(defun clean-type-alist 10219,461258
(defun type-alist-equality-loop-exit 10224,461398
(defconst *type-alist-equality-loop-max-depth* 10230,461620
(defun type-alist-equality-loop 10232,461672
(defun reconsider-type-alist 10263,463047
(defun type-alist-clause-finish1 10313,465336
(defun type-alist-clause-finish 10349,467078
(defun type-alist-clause 10482,474208
(defun known-whether-nil 10544,477804
(defun ts-booleanp 10576,479486
(defun weak-cons-occur 10587,479971
(defun equal-x-cons-x-yp 10601,480429
(defun not-ident 10676,483781
(defun first-if 10711,485427
(defun all-variablep 10725,485915
(defun normalize-with-type-set 10730,486050
(defun normalize 10762,487238
(defun normalize-lst 10911,494332
(defun normalize-or-distribute-first-if 10920,494796
(defun distribute-first-if 10938,495602
(defun decode-type-set1 11058,501034
(defun decode-type-set 11068,501432
(defmacro dts 11086,502152
(defun ens 11103,502663
(defmacro git 11106,502733

linear-b.lisp,427
(defun polys-from-type-set 42,1478
(defun add-type-set-polys 139,5654
(defun add-polynomial-inequalities 182,7727
(defparameter *add-polys-counter*209,8878
(defun add-polys 216,9033
(defun eval-ground-subexpressions 237,9622
(defun eval-ground-subexpressions-lst 331,13021
(defun poly-set 346,13525
(defun linearize1 428,17707
(defun linearize 792,33708
(defun linearize-lst1839,35857
(defun linearize-lst869,37180

non-linear.lisp,1113
(defun cleanse-type-alist 35,1407
(defthm uniqueness-of-+-inverses-lemma46,1793
(defun var-with-divisionp 63,2263
(defun varify 94,3513
(defun varify! 117,4107
(defun varify!-lst1 126,4338
(defun varify!-lst 131,4458
(defun invert-var 138,4628
(defun part-of1 179,6444
(defun part-of 210,7433
(defun product-already-triedp 227,7952
(defun too-many-polysp 241,8465
(defun expanded-new-vars-in-pot-lst2 259,9042
(defun expanded-new-vars-in-pot-lst1 292,10455
(defun expanded-new-vars-in-pot-lst 338,12818
(defun extract-bounds 362,13820
(defun good-bounds-in-pot 404,15992
(defun inverse-polys 433,17046
(defun add-inverse-polys 769,33907
(defun add-polys-from-type-set 812,35670
(defun length-of-shortest-polys-with-var 848,37116
(defun shortest-polys-with-var1 868,38035
(defun shortest-polys-with-var 880,38544
(defun binary-*-leaves 912,39855
(defun binary-*-tree 918,40013
(defun merge-arith-term-order 936,40535
(defun insert-arith-term-order 943,40796
(defun sort-arith-term-order 952,41052
(defun multiply-alist-and-const 959,41253
(defun collect-rational-poly-p-lst 974,41941

rewrite.lisp,14773
(defrec congruence-rule 274,13866
(defconst *geneqv-iff*433,21915
(defun refinementp 451,22690
(defun geneqv-refinementp1 512,25230
(defun geneqv-refinementp 524,25669
(defun some-congruence-rule-disabledp 578,28605
(defun filter-geneqv1 584,28834
(defun filter-geneqv 590,29083
(defun some-geneqv-disabledp 604,29563
(defun filter-geneqv-lst1 609,29739
(defun filter-geneqv-lst 614,29904
(defun refinementp1 633,30681
(defun pair-congruence-rules-with-coarsenings 646,31175
(defun add-to-cr-and-coarsenings658,31655
(defun union-geneqv1 708,33906
(defun union-geneqv 735,35361
(defun pairwise-union-geneqv 755,36177
(defun geneqv-lst1 772,36905
(defun geneqv-lst 878,42029
(defun subst-var 990,47188
(defun subst-var-lst 999,47486
(defun subst-expr1 1015,47979
(defun subst-expr1-lst 1022,48210
(defun subst-expr-error 1030,48387
(defun subst-expr 1036,48603
(defun scons-term 1110,52481
(defun subst-equiv-expr1 1176,55043
(defun subst-equiv-expr1-lst 1231,57797
(defun subst-equiv-expr 1254,58722
(defun ffnnamesp 1267,59157
(defun ffnnamesp-lst 1282,59709
(defun collect-ffnnames 1292,59857
(defun collect-ffnnames-lst 1315,60725
(defun comm-equal 1322,60910
(defun complementaryp 1336,61302
(defun member-term2 1357,62067
(defun member-complement-term2 1371,62536
(defun member-complement-term1 1380,62858
(defun member-term 1395,63304
(defun member-complement-term 1410,63852
(defun instr-listp 1428,64492
(defun spliced-instr-listp 1447,65315
(defun next-tag 1465,66049
(defun if-compile-formal 1473,66262
(defun ffnnamep-hide 1488,66914
(defun ffnnamep-hide-lst 1507,67654
(defun if-compile 1519,67942
(defun if-compile-lst 1618,72711
(defun if-interp-assume-true 1673,75867
(defun if-interp-switch 1693,76688
(defun if-interp-assumed-value0 1706,77187
(defun if-interp-assumed-value1 1717,77582
(defun if-interp-assumed-value2-equal-constant 1729,78076
(defun if-interp-assumed-value2 1779,80584
(defun if-interp-assumed-value3 1817,82390
(defun if-interp-assumed-value4 1834,83148
(defun if-interp-assumed-value-x 1851,83939
(defun if-interp-assumed-value 1884,85445
(defun convert-assumptions-to-clause-segment 1902,86213
(defun convert-clause-to-assumptions 2025,92299
(defun simplifiable-mv-nth1 2047,93406
(defun simplifiable-mv-nth 2076,94646
(defun simplifiable-mv-nthp 2103,95825
(defun call-stack 2112,96044
(defun ret-stack 2235,101270
(defun extra-info-lit-p 2239,101375
(defun subsetp-equal-mod-extra-info-lits 2247,101608
(defun quick-and-dirty-subsumption-replacement-step1 2256,101923
(defun quick-and-dirty-subsumption-replacement-step 2277,102784
(defun if-interp-add-clause 2413,109058
(defun if-interp 2428,109734
(defun splice-instrs1 2556,117152
(defun splice-instrs 2586,118243
(defun strip-branches 2590,118357
(defun merge-length 2618,119474
(defun merge-sort-length 2627,119814
(defun member-equal-+- 2633,120031
(defun arg1-almost-subsumes-arg2 2647,120632
(defun find-subsumer-replacement 2696,122872
(defun remove-one-complement 2715,123853
(defun weak-disc-tree 2722,124137
(defun sweep-clauses1 2732,124501
(defun sweep-clauses 2738,124725
(defun filter-with-and-without 2742,124832
(defun disc-tree 2760,125627
(defun find-clauses1 2784,126804
(defun find-clauses 2804,127740
(defun remove-one-+- 2807,127810
(defun store-clause1 2813,127997
(defun store-clause 2851,129494
(defun substitute1-ac 2870,130084
(defun substitute1 2885,130591
(defun replace-clause1 2890,130764
(defun replace-clause 2916,131784
(defun extra-info-lits 2921,131990
(defun merge-extra-info-lits 2927,132186
(defun subsumption-replacement-loop 2935,132439
(defun clausify 2988,134758
(defun find-rewriting-equivalence 3029,136646
(defun obj-table 3100,140453
(defun rewrite-solidify-rec 3145,142210
(defconst *rewrite-equiv-solidify-iteration-bound*3275,147614
(defun rewrite-solidify 3282,147814
(defun rewrite-if11 3337,149593
(defun rewrite-if13348,149996
(defun equal-mod-alist 3395,151926
(defun equal-mod-alist-lst 3429,153297
(defun member-equal-mod-alist 3436,153532
(defun not-to-be-rewrittenp1 3442,153755
(defun not-to-be-rewrittenp 3454,154100
(defun rewrite-recognizer 3470,154815
(defun remove-invisible-fncalls 3529,157374
(defun term-order+ 3543,157800
(defun invisible-fns 3680,163263
(defun loop-stopperp-rec 3713,164463
(defun loop-stopperp 3731,165052
(defrec rewrite-rule 3735,165176
(defun relevant-ground-lemmas 3791,168086
(defun search-ground-units13801,168419
(defun search-ground-units 3861,171321
(defun if-tautologyp 3875,171895
(defun expand-some-non-rec-fns 3901,173152
(defun expand-some-non-rec-fns-lst 3915,173741
(defun tautologyp 3922,173952
(defun make-true-list-cons-nest 3971,176168
(defun being-openedp-rec 3982,176621
(defmacro being-openedp 4004,177735
(defun recursive-fn-on-fnstackp 4024,178717
(defun fnstack-term-member 4037,179179
(defun var-counts1 4286,191039
(defun var-counts1-lst 4304,191546
(defun var-counts 4313,191843
(defun count-ifs 4367,194896
(defun count-ifs-lst 4379,195273
(defun nat-listp 4403,196155
(defun too-many-ifs0 4411,196323
(defun too-many-ifs-pre-rewrite 4441,197561
(defun occur-cnt-rec 4463,198348
(defun occur-cnt-lst 4473,198647
(defun occur-cnt 4480,198846
(defun occur-cnt-bounded 4486,198934
(defun occur-cnt-bounded-lst 4514,200043
(defun too-many-ifs1 4533,200821
(defun too-many-ifs-post-rewrite 4559,201794
(defun all-args-occur-in-top-clausep 4573,202346
(defun cons-count-bounded-ac 4578,202555
(defun cons-count-bounded 4595,203239
(defun max-form-count 4601,203347
(defun max-form-count-lst 4677,206854
(defun controller-complexity1 4688,207180
(defun controller-complexity 4711,208124
(defun controller-pocket-simplerp 4724,208700
(defun constant-controller-pocketp1 4742,209424
(defun constant-controller-pocketp 4751,209824
(defun some-controller-pocket-constant-and-non-controller-simplerp4762,210283
(defun rewrite-fncallp 4778,210994
(defun rewrite-fncallp-listp 4844,213972
(defun contains-rewriteable-callp4862,214642
(defun contains-rewriteable-callp-lst4892,215961
(defun pairlis-x1 4905,216412
(defun pairlis-x2 4913,216600
(defrec linear-lemma 4921,216792
(defrec current-literal 4970,218725
(defrec rewrite-constant4972,218769
(defconst *empty-rewrite-constant*5050,222510
(defrec metafunction-context5069,223027
(defun ok-to-force 5084,223647
(defun plist-to-alist 5173,227687
(defmacro adjust-rdepth 5182,227969
(defun add-rewrite-args 5191,228188
(defmacro rewrite-entry 5211,229010
(deflabel rule-classes5256,231007
(deflabel free-variables5531,247502
(deflabel free-variables-examples5721,257595
(deflabel free-variables-examples-rewrite5735,258164
(deflabel free-variables-examples-forward-chaining6160,272245
(defconst *fake-rune-for-linear*6359,279290
(defrec gframe 6366,279478
(defparameter *deep-gstack* 6406,281210
(defmacro push-gframe 6408,281244
(defparameter *saved-deep-gstack* 6447,282839
(defmacro initial-gstack 6449,282879
(defun tilde-@-bkptr-phrase 6464,283446
(defun cw-gframe 6512,285927
(defun cw-gstack1 6584,288915
(defun cw-gstack-fn 6591,289225
(defmacro cw-gstack 6653,292081
(defun restore-brr-globals1 6848,303258
(defun restore-brr-globals 6857,303576
(defun save-brr-globals 6885,304684
(defun get-brr-global 6909,305632
(defun exit-brr-wormhole 6946,307515
(defmacro brr-wormhole 6955,307840
(defun initialize-brr-stack 7006,310130
(defun lookup-brr-stack 7025,310870
(defun clean-brr-stack1 7037,311392
(defun clean-brr-stack 7043,311564
(defun get-brr-local 7091,314152
(defun put-brr-local1 7104,314777
(defun put-brr-local 7115,315259
(defun put-brr-local-lst 7130,315935
(defun some-cdr-equalp 7135,316133
(defun push-brr-stack-frame 7143,316353
(defun pop-brr-stack-frame 7174,317769
(defun decode-type-alist 7185,318220
(defun translate-break-condition 7196,318654
(defun eval-break-condition 7212,319272
(defconst *default-free-vars-display-limit* 7229,319898
(defmacro set-free-vars-display-limit 7231,319947
(defun free-vars-display-limit 7241,320379
(defun limit-failure-reason 7251,320699
(defun limit-failure-reason-alist 7273,321733
(defun tilde-@-failure-reason-free-phrase 7298,322959
(defun tilde-@-failure-reason-phrase 7331,324558
(defun stuff-standard-oi 7443,330668
(deflabel break-rewrite7468,331921
(deflabel break-lemma7713,344904
(deflabel brr-commands7794,348557
(defdoc dmr7840,350655
(defun raw-mode-p 7996,358714
(defun defun-mode-prompt-string 7999,358782
(defun brr-prompt 8022,359440
(defun ts< 8036,359923
(defun add-to-type-alist-segments 8062,360375
(defun merge-term-order 8075,360713
(defun merge-sort-term-order 8082,360950
(defun sort-type-alist-segments 8087,361140
(defun type-alist-segments 8099,361553
(defun print-terms 8108,361877
(defun print-type-alist-segments 8123,362335
(defun print-type-alist 8141,363075
(defun tilde-*-ancestors-stack-msg1 8146,363232
(defun tilde-*-ancestors-stack-msg 8168,364295
(defun brkpt1 8172,364460
(defun brkpt2 8384,372223
(defrec expand-hint8643,382465
(defun expand-permission-result 8660,382839
(defun expand-permission-p 8708,385211
(defun one-way-unify-restrictions1 8719,385609
(defun one-way-unify-restrictions 8729,385972
(defun ev-fncall! 8735,386154
(defun ev-fncall-meta 8774,387792
(defun get-evg 8808,389425
(defun ev-synp 8820,389732
(defun bad-synp-alist1 8852,391213
(defun bad-synp-alist 8882,392500
(defun flatten-ands-in-lit 8903,393370
(defun evgs-or-t 8916,393902
(deflabel nu-rewriter9096,401851
(defparameter *nth-update-tracingp* 9207,406658
(defparameter *lambda-abstractp* 9210,406737
(defparameter *nu-memos* 9213,406811
(defparameter *nu-memos-ens* 9216,406898
(defparameter *nu-memos-wrld* 9219,406970
(defparameter *ring-buffer-size* 9222,407043
(defun-one-output initialize-nu-memos 9236,407682
(defun-one-output clear-nu-memos1 9247,408051
(defun-one-output clear-nu-memos 9266,408834
(defmacro this-item 9285,409646
(defmacro next-ptr 9286,409681
(defmacro prev-ptr 9287,409716
(defun-one-output link-em 9298,410022
(defun-one-output destructive-get-memo1 9303,410141
(defun-one-output destructive-get-memo 9351,411599
(defun get-memo 9365,412147
(defun-one-output destructive-retire-memo 9420,414078
(defun-one-output destructive-insert-memo 9432,414515
(defun-one-output nu-memo-stats1 9451,415146
(defun-one-output nu-memo-stats 9468,415824
(defun memo-key1 9482,416223
(defun bounded-length 9513,417474
(defun memo-key 9524,417699
(defun mk 9548,418565
(defun show-rbuff1 9556,418766
(defun show-rbuff 9559,418863
(defun memo-exit 9574,419635
(defun nfix-quote 9620,421339
(defun bound-in-framep 9641,421979
(defun non-rec-defun1 9650,422262
(defun non-rec-defun 9696,424563
(defun deref-var 9757,427191
(defun deref 9770,427658
(defun equal-derefs 9841,429831
(defun filter-args 9856,430270
(defun foccurrences 9864,430540
(defun foccurrences-lst 9893,431514
(defun every-var-at-most-oncep 9900,431745
(defun every-actual-simple 9910,432052
(defun make-clean-lambda-application 9917,432243
(defun lambda-stack 9970,434603
(defun shorten-each-stack-to-len 9997,435742
(defun all-equal-stacks 10008,436175
(defun non-quoted-stack 10017,436559
(defun cdr-all 10023,436738
(defun len-common-tail 10027,436834
(defun butlast-all-stacks 10032,437003
(defun min-stack-len 10039,437256
(defun reconcile-stacks 10049,437586
(defun reconcile-terms 10098,439528
(defun all-equal 10104,439702
(defun recon 10109,439831
(defun with-reconciliation-let-bindings 10132,440820
(defmacro with-reconciliation 10138,441079
(defun lambda-stack-one-way-unify1 10171,442058
(defun lambda-stack-one-way-unify1-lst 10220,443907
(defun lambda-stack-one-way-unify 10240,444731
(defun apply-abbrevs-to-lambda-stack1 10269,445744
(defun apply-abbrevs-to-lambda-stack 10312,447827
(defconst *fake-rune-for-nu-rewriter*10409,451516
(defun nth-update-rewriter1-continue10416,451663
(defun nth-update-rewriter110474,453747
(defun nth-update-rewriter1-lst 11027,477054
(defun nth-update-rewriter-targetp 11050,478060
(defun nth-update-rewriter-target-lstp 11064,478671
(defun make-stack-from-alist 11073,478916
(defun nth-update-rewriter 11096,479812
(defun collect-by-position 11212,484644
(defun make-lambda-application 11230,485347
(defun lambda-nest-hidep 11265,486563
(defun lambda-nest-unhide 11281,487018
(defun search-type-alist+ 11292,487310
(defun oncep 11312,488145
(defabbrev memo-activep 11326,488767
(defabbrev activate-memo 11329,488837
(defmacro zero-depthp 11332,488902
(defmacro rdepth-error 11349,489571
(defun bad-synp-hyp-msg1 11381,491275
(defun bad-synp-hyp-msg 11535,500050
(defmacro rewrite-entry-extending-failure 11562,501337
(defun set-difference-assoc-eq 11575,501980
(defun relieve-hyp-synp 11583,502312
(defmacro recursivep 11688,506933
(defun push-lemma? 11697,507164
(defun rewrite 11710,507522
(defun rewrite-solidify-plus 12356,536950
(defun rewrite-if 12410,539448
(defun rewrite-args 12553,546814
(defun rewrite-primitive 12579,547846
(defun rewrite-equal 12614,549250
(defun relieve-hyp12907,562386
(defun relieve-hyps1 13226,579150
(defun relieve-hyps1-free-1 13342,585175
(defun relieve-hyps1-free-2 13418,589100
(defun relieve-hyps 13520,593252
(defun rewrite-with-lemma 13568,595624
(defun rewrite-with-lemmas1 13877,611204
(defun rewrite-fncall 13916,612963
(defun rewrite-with-lemmas 14253,630531
(defun rewrite-linear-term 14359,635669
(defun rewrite-linear-term-lst 14444,639615
(defun add-linear-lemma 14491,641803
(defun add-linear-lemmas 14718,652438
(defun multiply-alists2 14766,654668
(defun multiply-alists1 14819,657130
(defun multiply-alists 14859,658889
(defun multiply-polys1 14908,660937
(defun multiply-polys 15078,668557
(defun multiply-pots2 15134,671050
(defun multiply-pots1 15190,673182
(defun multiply-pots-super-filter 15232,674947
(defun multiply-pots-filter 15279,677100
(defun multiply-pots 15328,679306
(defun add-multiplied-polys-filter 15373,681262
(defun add-multiplied-polys 15446,684773
(defun deal-with-product1 15520,688148
(defun deal-with-product 15631,693870
(defun deal-with-factor 15671,695680
(defun deal-with-division 15751,699787
(defun non-linear-arithmetic1 15862,704752
(defun non-linear-arithmetic 15948,708749
(defun add-polys-and-lemmas2-nl 16238,720212
(defun add-polys-and-lemmas1-nl 16326,724197
(defun add-polys-and-lemmas1 16445,729191
(defun add-polys-and-lemmas 16506,731931
(defun add-disjunct-polys-and-lemmas 16600,735976
(defun add-disjuncts-polys-and-lemmas 16709,741054
(defun add-terms-and-lemmas 16889,749305
(defun rewrite-with-linear 16981,753942

simplify.lisp,7783
(defun dumb-negate-lit-lst 62,2645
(defun negate-lit 76,3300
(defun pegate-lit 95,4058
(defun add-literal 114,4785
(defun add-each-literal 151,6205
(defun subsumes-rec 213,9175
(defun subsumes1-equality-with-const 259,11663
(defun subsumes1 308,14497
(defun subsumes!-rec 343,16003
(defun subsumes!1-equality-with-const 370,17290
(defun subsumes!1 406,19043
(defconst *init-subsumes-count*426,19744
(defun subsumes 446,20562
(defun some-member-subsumes 469,21547
(defun conjoin-clause-to-clause-set 482,22069
(defun add-each-literal-lst 501,22993
(defun conjoin-clause-sets 507,23196
(defun some-element-member-complement-term 513,23402
(defun disjoin-clauses1 521,23723
(defun disjoin-clauses 537,24376
(defun disjoin-clause-segment-to-clause-set-rec 546,24663
(defun disjoin-clause-segment-to-clause-set 556,24979
(defun split-on-assumptions 575,25897
(defun rewrite-clause-action 589,26372
(defrec forward-chaining-rule637,28397
(defrec fc-activation647,28891
(defun fc-activation 679,30670
(defun fc-activation-lst 737,33866
(defun add-new-fc-pots 763,35051
(defun add-new-fc-pots-lst 804,37015
(defun add-new-fc-pots-lst-lst814,37437
(defun suspend-fc-activation 832,38189
(defun sublis-varp 869,39522
(defun sublis-var-lstp 878,39807
(defun mult-search-type-alist 887,40054
(defun mult-lookup-hyp 949,43266
(defun ev-respecting-ens 963,43771
(defun ev-lst-respecting-ens 1020,46690
(defun mult-relieve-fc-hyps1035,47349
(defun mult-relieve-all-fc-hyps 1189,55299
(defun make-ttrees-from-fc-derivations 1296,61294
(defun expunge-fc-derivations 1301,61538
(defun add-fc-derivations 1380,65191
(defun mult-advance-each-fc-activation1 1407,66355
(defun mult-advance-fc-activation11473,70064
(defun mult-advance-fc-activation 1513,72235
(defun advance-fc-activations 1545,73672
(defun advance-fc-pot-lst1571,74914
(defun type-alist-fcd-lst 1599,76162
(defun fcd-runep 1658,79189
(defun fcd-worse-than-or-equal 1679,80071
(defun exists-lit-worse-than-or-equal 1719,82250
(defun exists-fcd-worse-than-or-equal 1729,82590
(defun all-dumb-occur-lst 1745,83315
(defun all-args-occur-after-strip-not 1750,83478
(defun approved-fc-derivationp 1765,84140
(defun approve-fc-derivations 1849,86723
(defun max-level-no 1876,87989
(defun max-level-no-lst 1891,88628
(defun get-level-no 1896,88791
(defun sort-approved1-rating1 1910,89091
(defun sort-approved1-rating1-lst 1928,89940
(defun sort-approved1-rating 1935,90191
(defun sort-approved1 1953,91132
(defun sort-approved 1962,91435
(defun strip-fcd-concls 1969,91692
(defun every-concl-assoc-equalp 1974,91871
(defun forward-chain1 1985,92263
(defun fc-pair-lst 2029,94981
(defun fc-pair-lst-type-alist 2045,95677
(defun forward-chain 2156,100456
(defun select-forward-chained-concls-and-ttrees 2231,104127
(defun rewrite-clause-type-alist 2258,105611
(defun maximal-multiples1 2602,121660
(defun maximal-multiples 2616,122156
(defun lambda-abstract1 2629,122591
(defun lambda-abstract 2638,122942
(defun mutually-exclusive-tests 2655,123461
(defun mutually-exclusive-subsumptionp 2686,124589
(defun cleanup-if-expr 2706,125283
(defun cleanup-if-expr-lst 2730,126195
(defun all-type-reasoning-tags-p 2736,126385
(defun equal-mod-commuting 2747,126799
(defun try-clause 2770,127558
(defconst *trivial-non-nil-ttree*2785,127929
(defun make-non-nil-ttree 2788,127981
(defun try-type-set-and-clause 2792,128060
(defun lambda-subtermp 2821,129339
(defun lambda-subtermp-lst 2831,129593
(defun rewrite-atm 2839,129751
(defun every-occurrence-equiv-hittablep13177,143680
(defun every-occurrence-equiv-hittablep1-listp3216,145028
(defun every-occurrence-equiv-hittablep 3234,145523
(defun every-occurrence-equiv-hittablep-in-clausep 3255,146383
(defun some-occurrence-equiv-hittablep1 3277,147139
(defun some-occurrence-equiv-hittablep1-listp3309,148218
(defun some-occurrence-equiv-hittablep 3325,148649
(defun equiv-hittable-in-some-other-lit 3342,149256
(defun find-trivial-equivalence13355,149812
(defun find-trivial-equivalence 3511,157851
(defun add-literal-and-pt1 3562,160337
(defun add-literal-and-pt 3580,161153
(defun get-and-delete-tag-in-ttree 3611,162287
(defun add-binding-to-tag-tree 3637,163421
(defun subst-equiv-and-maybe-delete-lit3653,163997
(defun remove-trivial-equivalences3708,166746
(defrec built-in-clause 3779,170590
(defconst *initial-built-in-clauses*3792,171302
(defun built-in-clausep2 4020,179819
(defun built-in-clausep1 4033,180434
(defun possible-trivial-clause-p 4056,181574
(defun trivial-clause-p 4083,182712
(defun built-in-clausep 4088,182862
(defun crunch-clause-segments1 4157,186472
(defun crunch-clause-segments2 4197,188663
(defun crunch-clause-segments 4211,189174
(defun strip-non-rewrittenp-assumptions 4278,192834
(defun assumnote-list-to-token-list 4314,194321
(defun resume-suspended-assumption-rewriting14320,194534
(defun resume-suspended-assumption-rewriting4476,202244
(defun cons-into-ttree 4494,203083
(defun helpful-little-ecnt-msg 4583,207798
(defun rewrite-clause 4597,208151
(defun rewrite-clause-lst 4917,222742
(defun setup-simplify-clause-pot-lst1 4977,225236
(defun setup-simplify-clause-pot-lst 5007,226402
(defun sequential-subst-var-term 5096,229479
(defun process-equational-polys5108,229945
(defun enumerate-elements 5289,238570
(defun already-used-by-fertilize-clausep 5293,238691
(defun unhidden-lit-info 5310,239562
(defun tilde-@-hyp-phrase 5329,240414
(defun simplify-clause1 5358,241524
(defun some-element-dumb-occur-lst 5529,249720
(defrec prove-spec-var5542,250290
(defrec gag-info5556,250864
(defrec gag-state5572,251426
(defconst *initial-gag-state*5580,251801
(defconst *empty-prove-spec-var*5588,251974
(defun filter-disabled-expand-terms 5602,252342
(defun found-hit-rewrite-hist-entry 5653,254666
(defabbrev append? 5667,255235
(defun simplify-clause 5671,255309
(defun settled-down-clause 6028,273019
(defun insert-pair-by-cdr 6051,273991
(defun extend-car-cdr-sorted-alist 6077,274855
(defun extract-and-classify-lemmas 6092,275413
(deflabel Simple6142,277628
(defun tilde-*-conjunction-of-possibly-forced-names-phrase1 6175,279023
(defun tilde-*-conjunction-of-possibly-forced-names-phrase 6185,279320
(defconst *fake-rune-alist*6200,279923
(defun all-runes-in-lmi 6216,280526
(defun all-runes-in-lmi-lst 6231,281121
(defun all-runes-in-var-to-runes-alist 6236,281329
(defun all-runes-in-elim-sequence 6244,281547
(defun all-runes-in-ttree 6259,282228
(defun rune-< 6375,287589
(defun merge-runes 6390,287947
(defun merge-sort-runes 6397,288165
(defun tilde-*-simp-phrase1 6402,288330
(defun tilde-*-raw-simp-phrase1 6531,293478
(defun recover-forced-runes 6580,295768
(defun tilde-*-raw-simp-phrase 6613,296882
(defun tilde-*-simp-phrase 6640,297838
(defrec clause-id 6687,299806
(defconst *initial-clause-id*6697,300255
(defun tilde-@-pool-name-phrase 6709,300669
(defun tilde-@-pool-name-phrase-lst 6747,302607
(defun tilde-@-clause-id-phrase 6752,302833
(defun string-for-tilde-@-clause-id-phrase/periods 6847,306270
(defun string-for-tilde-@-clause-id-phrase/primes 6857,306618
(defun string-for-tilde-@-clause-id-phrase 6865,306898
(defrec bddnote6892,308223
(defun tilde-@-bddnote-phrase 6896,308324
(defun parse-natural1 6910,308843
(defun parse-natural 6936,309795
(defun parse-dotted-naturals 6957,310601
(defun parse-match 6993,312280
(defun parse-primes 7007,312843
(defun parse-clause-id2 7033,313826
(defun parse-clause-id1 7063,314838
(defun parse-clause-id 7128,317117
(defun tilde-@-case-split-limitations-phrase 7166,318420
(defun simplify-clause-msg1 7181,318962
(deflabel specious-simplification7303,325196
(defun settled-down-clause-msg1 7415,330784

bdd.lisp,4139
(defmacro mvf 52,1875
(defmacro logandf 64,2439
(defmacro logxorf 67,2507
(defmacro logiorf 70,2574
(defmacro ashf 73,2641
(defmacro mx-id-bound 77,2748
(defmacro 1+mx-id 85,2999
(defmacro bdd-error 139,5124
(defmacro unique-id 221,8495
(defmacro tst 223,8544
(defmacro cst-boolp 229,8834
(defmacro tbr 231,8872
(defmacro fbr 232,8904
(defmacro leafp 234,8937
(defmacro trm 237,8980
(defun bdd-constructors 239,9011
(defun make-leaf-cst 249,9363
(defun evg-fn-symb 259,9665
(defun bdd-constructor-trm-p 290,10628
(defun evg-type 296,10841
(defun make-if-cst 312,11381
(defconst *cst-t* 371,14308
(defconst *cst-nil* 372,14353
(defmacro cst=374,14401
(defmacro cst-tp 378,14479
(defmacro cst-nilp 381,14530
(defmacro cst-varp 384,14583
(defun cst-nonnilp 387,14636
(defun bool-mask1 411,15693
(defun boolean-term-var 428,16513
(defun boolean-hyps-vars 461,17697
(defun first-boolean-type-prescription 476,18077
(defun recognizer-rune 511,19692
(defun bool-mask 521,20118
(defun commutative-p1 565,21707
(defun find-equivalence-rune 594,23103
(defun equivalence-rune1 605,23456
(defun equivalence-rune 632,24452
(defun commutative-p 642,24823
(defun op-alist 659,25461
(defun op-alist-info 695,26996
(defmacro if-op-code 718,27608
(defmacro hash-size 720,27636
(defmacro if-hash-index 747,28714
(defun op-hash-index1 759,29135
(defmacro op-hash-index 786,30182
(defmacro op-hash-index-2 791,30317
(defmacro op-hash-index-if 801,30588
(defun if-search-bucket 811,30899
(defun cst=822,31189
(defmacro eq-op 828,31312
(defun op-search-bucket 834,31419
(defun op-search-bucket-2 847,31898
(defun op-search-bucket-if 864,32632
(defun chk-memo 880,33246
(defun chk-memo-2 898,33915
(defun chk-memo-if 914,34449
(defmacro half-hash-size 934,35163
(defmacro fourth-hash-size 937,35217
(defun op-hash-index-string 940,35273
(defun op-hash-index-evg 953,35669
(defun op-search-bucket-quote 986,36708
(defun chk-memo-quotep 994,36983
(defun bdd-quotep 1010,37467
(defmacro bdd-quotep+ 1043,38578
(defrec bdd-rule1060,39397
(defun rewrite-rule-to-bdd-rule 1064,39439
(defun bdd-rules-alist11070,39641
(defun extra-rules-for-bdds 1148,43776
(defun bdd-rules-alist 1215,46462
(defmacro one-way-unify1-cst-2 1277,49082
(defmacro one-way-unify1-cst-3 1291,49700
(defun one-way-unify1-cst 1309,50430
(defun one-way-unify1-cst-lst 1490,61275
(defun one-way-unify1-cst-equal 1508,61928
(defun some-one-way-unify-cst-lst 1522,62417
(defun leaf-cst-list 1551,63568
(defun decode-cst 1573,64421
(defun decode-cst-lst 1611,65692
(defun decode-cst-alist1 1623,66059
(defun decode-cst-alist 1635,66507
(defun leaf-cst-list-array 1641,66689
(defconst *some-non-nil-value* 1648,66920
(defun falsifying-assignment1 1650,66974
(defun falsifying-assignment 1687,68361
(defun make-if 1697,68722
(defun make-if-no-memo 1776,72309
(defmacro split-var 1810,73588
(defun min-var 1823,73927
(defun combine-op-csts1 1843,74515
(defun bool-flg 1876,76038
(defun some-bdd-constructorp 1898,76689
(defun combine-op-csts-simple1905,76946
(defmacro mv-let? 1957,78877
(defmacro combine-if-csts+ 2020,81296
(defun combine-if-csts1 2029,81619
(defun combine-if-csts2049,82344
(defun cst-list-to-evg-list 2127,85502
(defun cst-quote-listp 2133,85665
(defrec bddspv2141,85849
(defun bdd-ev-fncall2152,86252
(defmacro combine-op-csts+ 2182,87472
(defun make-if-for-op2200,88419
(defun combine-op-csts 2249,89990
(defun combine-op-csts-comm 2279,91124
(defun combine-op-csts-guts2356,94351
(defun bdd 2477,99512
(defun bdd-alist 2597,104310
(defun bdd-list 2615,105066
(defun if-ht-max-length 2641,106017
(defun op-ht-max-length 2646,106172
(defun leaf-cst-list-to-alist 2651,106327
(defvar *request-bigger-fixnum-table*2665,106755
(defun bdd-top 2668,106845
(defun get-bool-vars 2776,112500
(defun bdd-clause1 2794,113105
(defmacro expand-and-or-simple+2920,118535
(defun expand-and-or-simple2932,119000
(defun expand-clause3079,125496
(defun bdd-clause 3104,126498
(deflabel obdd3219,132371
(deflabel bdd-algorithm3227,132525
(deflabel bdd-introduction3737,157718

other-processes.lisp,3548
(defun strip-final-digits1 36,1577
(defun strip-final-digits 57,2441
(defconst *var-families-by-type*82,3639
(defun assoc-ts-subsetp 103,4338
(defun first-non-member-eq 113,4605
(defun abbreviate-hyphenated-string1 126,5013
(defun abbreviate-hyphenated-string 153,6112
(defun generate-variable-root1 170,6699
(defun generate-variable-root 231,9189
(defun generate-variable 250,9893
(defun generate-variable-lst 262,10445
(defrec elim-rule296,12151
(defun occurs-nowhere-else 302,12289
(defun first-nomination 314,12688
(defun second-nomination 321,12856
(defun some-hyp-probably-nilp 334,13277
(defun sublis-expr 358,14119
(defun sublis-expr-lst 376,14811
(defun nominate-destructor-candidate383,14977
(defun nominate-destructor-candidates508,21474
(defun nominate-destructor-candidates-lst531,22302
(defun sum-level-nos 558,23410
(defun pick-highest-sum-level-nos 574,24075
(defun select-instantiated-elim-rule 593,24859
(defrec type-set-inverter-rule 647,27544
(defconst *initial-type-set-inverter-rules*675,28967
(defun convert-type-set-to-term-lst 898,39593
(defun convert-type-set-to-term 926,40709
(defun type-restriction-segment 968,42660
(defun subterm-one-way-unify 1064,47156
(defun subterm-one-way-unify-lst 1077,47694
(defrec generalize-rule 1087,47987
(defun apply-generalize-rule 1089,48039
(defun generalize-rule-segment1 1128,49803
(defun generalize-rule-segment 1150,50905
(defun generalize1 1174,52084
(defun apply-instantiated-elim-rule 1207,53711
(defun eliminate-destructors-clause11323,59593
(defun owned-vars 1442,65655
(defun eliminate-destructors-clause 1521,69905
(defun prettyify-clause1 1555,71548
(defun prettyify-clause2 1560,71734
(defun prettyify-clause 1574,72344
(defun prettyify-clause-lst 1587,72895
(defun prettyify-clause-set 1593,73179
(defun tilde-*-elim-phrase/alist1 1599,73444
(defun tilde-*-elim-phrase/alist 1606,73715
(defun tilde-*-elim-phrase3 1618,74159
(defun tilde-*-elim-phrase2 1626,74562
(defun tilde-*-elim-phrase1 1653,75886
(defun tilde-*-elim-phrase 1686,77516
(defun tilde-*-untranslate-lst-phrase 1706,78134
(defun eliminate-destructors-clause-msg1 1711,78280
(defun almost-quotep1 1764,80720
(defun almost-quotep1-listp 1775,81093
(defun almost-quotep 1782,81258
(defun destructor-applied-to-varsp 1794,81613
(defun dumb-occur-lst-except 1811,82296
(defun fertilize-feasible 1829,83105
(defun fertilize-complexity 1847,83895
(defun maximize-fertilize-complexity 1857,84230
(defun first-fertilize-lit 1864,84434
(defun cross-fertilizep/c 1898,85998
(defun cross-fertilizep/d 1912,86489
(defun cross-fertilizep 1926,86980
(defun delete-from-ttree-1 1951,88297
(defun delete-from-ttree 1975,89390
(defun fertilize-clause1 1981,89573
(defun fertilize-clause 2187,99257
(defun fertilize-clause-msg1 2275,103717
(defun collectable-fnp 2320,105719
(defun smallest-common-subterms1 2338,106348
(defun smallest-common-subterms1-lst 2399,108780
(defun dumb-fn-count-1 2420,109461
(defun dumb-fn-count 2434,109990
(defun smallest-common-subterms 2457,110879
(defun generalizing-relationp 2473,111592
(defun generalizable-terms-across-relations 2504,112959
(defun generalizable-terms-across-literals1 2519,113580
(defun generalizable-terms-across-literals 2525,113826
(defun generalizable-terms 2537,114305
(defun generalize-clause 2548,114659
(defun tilde-*-gen-phrase/alist1 2623,118158
(defun tilde-*-gen-phrase/alist 2630,118427
(defun tilde-*-gen-phrase 2638,118596
(defun generalize-clause-msg1 2692,121452

induct.lisp,5094
(defun select-x-cl-set 29,1205
(defun unchangeables 41,1660
(defun changeables 56,2254
(defun sound-induction-principle-mask1 72,2840
(defun sound-induction-principle-mask 110,4631
(defrec candidate168,7593
(defun count-non-nils 215,10533
(defun controllers 220,10678
(defun changed/unchanged-vars 227,10961
(defrec tests-and-alists 234,11249
(defun tests-and-alists/alist 236,11295
(defun tests-and-alists/alists 263,12470
(defrec tests-and-calls 285,13493
(defrec justification300,14327
(defun tests-and-alists 305,14441
(defun tests-and-alists-lst 321,15186
(defun flesh-out-induction-principle 333,15655
(defun intrinsic-suggested-induction-cand370,16797
(defrec induction-rule 410,18969
(defun apply-induction-rule 414,19060
(defun suggested-induction-cands1524,23154
(defun suggested-induction-cands583,25557
(defun get-induction-cands 607,26564
(defun get-induction-cands-lst 623,27083
(defun get-induction-cands-from-cl-set1 638,27459
(defun get-induction-cands-from-cl-set 664,28537
(defun pigeon-holep-apply 699,30056
(defun pigeon-holep 741,31844
(defun pigeon-holep1 760,32666
(defun flush-cand1-down-cand2 781,33366
(defun flush-candidates 817,35201
(defun alists-agreep 842,36437
(defun irreconcilable-alistsp 855,36938
(defun affinity 873,37704
(defun member-affinity 886,38177
(defun occur-affinity 895,38465
(defun some-occur-affinity 911,39035
(defun all-occur-affinity 920,39369
(defun contains-affinity 929,39702
(defun antagonistic-tests-and-alists-lstp 942,40189
(defun antagonistic-tests-and-alists-lstsp 968,41120
(defun every-alist1-matedp 983,41605
(defun merge-alist1-into-alist2 1004,42530
(defun merge-alist1-lst-into-alist2 1025,43463
(defun merge-lst1-into-alist2 1039,43935
(defun merge-lst1-into-alist2-lst 1055,44412
(defun merge-lst1-into-lst2 1060,44648
(defun merge-tests-and-alists-lsts 1070,45059
(defun merge-cand1-into-cand2 1151,49630
(defun merge-candidates 1249,54993
(defun controller-variables1 1264,55463
(defun controller-variables 1279,56093
(defun induct-vars1 1293,56798
(defun induct-vars 1307,57222
(defun vetoedp 1326,57969
(defun compute-vetoes1 1350,58972
(defun compute-vetoes2 1372,59813
(defun compute-vetoes 1388,60364
(defun induction-complexity1 1452,63703
(defun maximal-elements-apply 1470,64516
(defun maximal-elements1 1483,64956
(defun maximal-elements 1508,66010
(defun intersectp-eq/union-equal 1532,66903
(defun equal/union-equal 1538,67091
(defun subsetp-equal/smaller 1544,67244
(defun m&m-apply 1549,67362
(defun count-off 1562,67879
(defun m&m-search 1570,68085
(defun m&m1 1588,68845
(defun m&m 1639,70984
(defun cons-subset-tree 1724,75489
(defabbrev car-subset-tree 1741,75913
(defabbrev cdr-subset-tree 1747,75998
(defun or-subset-trees 1753,76083
(defun m&m-over-powerset1 1765,76581
(defun m&m-over-powerset 1791,77378
(defun all-picks2 1900,82653
(defun all-picks2r 1906,82833
(defun all-picks1 1912,83022
(defun all-picks 1921,83341
(defun dumb-negate-lit-lst-lst 1962,85313
(defun induction-hyp-clause-segments2 1974,85808
(defun induction-hyp-clause-segments1 1980,86053
(defun induction-hyp-clause-segments 1992,86471
(defun induction-formula3 2028,88233
(defun induction-formula2 2071,89998
(defun induction-formula1 2100,91244
(defun induction-formula 2116,91996
(defun all-picks-size 2188,95204
(defun induction-formula-size1 2195,95407
(defun induction-formula-size 2211,96141
(defconst *maximum-induct-size* 2226,96737
(defun termify-clause-set 2231,96859
(defun inform-simplify3 2248,97532
(defun inform-simplify2 2257,97851
(defun inform-simplify1 2267,98139
(defun inform-simplify 2281,98708
(defun all-vars1-lst-lst 2332,101594
(defun gen-new-name1 2341,101895
(defun gen-new-name 2351,102220
(defun unmeasured-variables3 2359,102452
(defun unmeasured-variables2 2367,102764
(defun unmeasured-variables1 2373,102994
(defun unmeasured-variables 2382,103406
(defun tilde-@-well-founded-relation-phrase 2393,103895
(defun measured-variables 2411,104641
(defun induct-msg/continue 2421,105030
(defun rec-fnnames 2600,113298
(defun rec-fnnames-lst 2611,113780
(defun induct-msg/lose 2618,113951
(defun load-hint-settings-into-rcnst 2680,117093
(defun update-hint-settings 2734,119788
(defun load-hint-settings-into-pspv 2749,120353
(defun restore-hint-settings-in-pspv 2781,121863
(defun remove-trivial-clauses 2794,122550
(defun classicalp 2803,122830
(defun classical-fn-list-p 2824,123615
(defun non-standard-vector-check 2831,123823
(defun merge-ns-check 2839,124087
(defun trap-non-standard-vector-aux 2847,124370
(defun remove-adjacent-duplicates 2861,125066
(defun non-standard-induction-vars 2868,125341
(defun trap-non-standard-vector 2880,125765
(defun induct 2888,126128
(defun pair-vars-with-lits 3070,134467
(defun ffnnames-subsetp 3083,134809
(defun ffnnames-subsetp-listp 3097,135313
(defun probably-not-validp 3107,135593
(defun irrelevant-lits 3140,137171
(defun eliminate-irrelevance-clause 3152,137654
(defun eliminate-irrelevance-clause-msg1 3182,138970

history-management.lisp,26004
(defrec goal-tree 45,1583
(deflabel proof-tree103,4893
(deflabel proof-tree-emacs175,8189
(deflabel proof-tree-bindings266,11737
(deflabel proof-tree-examples337,14914
(defun start-proof-tree-fn 608,25043
(defmacro start-proof-tree 621,25426
(defmacro start-proof-tree 651,26522
(defmacro checkpoint-forced-goals 661,26813
(defun stop-proof-tree-fn 683,27597
(defmacro stop-proof-tree 689,27809
(deflabel proof-tree-details717,28868
(defun insert-into-goal-tree-rec 762,31071
(defun insert-into-goal-tree-lst 770,31393
(defun insert-into-goal-tree 794,32190
(defun set-difference-equal-changedp 817,33207
(defun prune-goal-tree 835,33858
(defun prune-goal-tree-lst 922,37520
(defun prune-proof-tree 939,38187
(defun print-string-repeat 953,38805
(defconst *format-proc-alist*965,39208
(defun format-forced-subgoals 978,39606
(defun format-processor 1007,40726
(defun format-goal-tree-lst1060,42743
(defun format-goal-tree 1092,43995
(defun format-proof-tree 1142,46147
(defun print-proof-tree1 1166,47128
(defconst *proof-failure-string*1179,47688
(defun print-proof-tree-ctx 1182,47754
(defconst *proof-tree-start-delimiter* 1207,48559
(defconst *proof-tree-end-delimiter* 1209,48609
(defun print-proof-tree-finish 1211,48656
(defun print-proof-tree 1221,49084
(defun decorate-forced-goals-1 1246,49932
(defun decorate-forced-goals-1-lst1263,50642
(defun decorate-forced-goals 1288,51539
(defun decorate-forced-goals-in-proof-tree1306,52179
(defun assumnote-list-to-clause-id-list 1324,52916
(defun assumnote-list-list-to-clause-id-list-list 1330,53138
(defun extend-proof-tree-for-forcing-round1336,53409
(defun initialize-proof-tree1 1370,54631
(defun initialize-proof-tree 1408,56175
(defconst *star-1-clause-id*1433,57203
(defun revert-goal-tree-rec 1442,57360
(defun revert-goal-tree-lst 1467,58495
(defun revert-goal-tree 1494,59711
(defrec pool-element 1515,60625
(defun pool-lst1 1517,60683
(defun pool-lst 1524,60937
(defun increment-proof-tree1545,61786
(defun first-n-eql 1634,66089
(defun goal-tree-with-cl-id 1647,66500
(defun goal-tree-choose-disjunct-rec 1656,66776
(defun goal-tree-choose-disjunct-lst 1685,68004
(defun goal-tree-choose-disjunct 1700,68809
(defun install-disjunct-into-proof-tree 1711,69246
(defun logical-namep 1769,72115
(defun logical-name-type-string 1788,72806
(defun signature-fns 1884,77682
(defun make-event-tuple 1899,78294
(defun access-event-tuple-depth 1950,80723
(defun access-event-tuple-type 1953,80798
(defun access-event-tuple-namex 1962,81034
(defun access-event-tuple-form 1984,81786
(defun access-event-tuple-symbol-class 1989,81876
(defrec command-tuple2013,83105
(defun make-command-tuple 2029,83683
(defun access-command-tuple-number 2047,84397
(defun access-command-tuple-defun-mode 2050,84473
(defun access-command-tuple-form 2056,84639
(defun access-command-tuple-last-make-event-expansion 2062,84794
(defun access-command-tuple-cbd 2065,84908
(defun access-event-tuple-number 2068,84978
(defun max-absolute-event-number 2078,85264
(defun next-absolute-event-number 2088,85663
(defun max-absolute-command-number 2091,85746
(defun next-absolute-command-number 2099,86025
(defun scan-to-event 2104,86142
(defun scan-to-command 2115,86430
(defun scan-to-landmark-number 2125,86692
(defun add-to-zap-table 2262,94285
(defun fetch-from-zap-table 2270,94527
(defconst *event-index-interval* 2289,95208
(defconst *command-index-interval* 2290,95245
(defun update-world-index 2292,95285
(defun lookup-world-index1 2366,98826
(defun lookup-world-index 2388,99734
(defun store-absolute-event-number 2417,100986
(defun the-namex-symbol-class1 2450,102214
(defun the-namex-symbol-class 2472,103486
(defun add-event-landmark 2480,103737
(defun scan-to-defpkg 2510,105136
(defun scan-to-include-book 2525,105773
(defun assoc-equal-cadr 2539,106376
(defun multiple-assoc-terminal-substringp1 2544,106536
(defun multiple-assoc-terminal-substringp 2550,106845
(defun possibly-add-lisp-extension 2559,107235
(defun decode-logical-name 2575,107711
(defun er-decode-logical-name 2618,109258
(defun renew-lemmas 2650,110528
(defun renew-name/erase 2661,110970
(defun renew-name/overwrite 2687,112008
(defun renew-name 2805,115871
(defun renew-names 2848,117961
(defun collect-redefined 2854,118179
(defun scrunch-eq 2874,118972
(defun print-redefinition-warning 2879,119141
(defun initialize-summary-accumulators 2917,120787
(defun print-warnings-summary 2941,121803
(defun print-time-summary 2965,122622
(defun print-rules-summary 3023,125019
(defun merge-cdr-> 3053,126242
(defun merge-sort-cdr-> 3061,126488
(defconst *gag-prefix* 3066,126653
(defconst *gag-suffix* 3067,126683
(defun gag-start-msg 3069,126721
(defun print-gag-info 3077,126962
(defun set-checkpoint-summary-limit-fn 3088,127401
(defmacro set-checkpoint-summary-limit 3107,128052
(defun print-gag-stack-rev 3171,130439
(defun print-gag-state1 3196,131621
(defun erase-gag-state 3277,135025
(defun print-gag-state 3287,135478
(defun print-failure 3294,135698
(defun print-summary 3305,136130
(defmacro with-ctx-summarized 3425,141321
(defrec proved-functional-instances-alist-entry3511,145634
(defun supply-name-for-proved-functional-instances-alist-entry 3567,148537
(defun proved-functional-instances-from-tagged-objects 3574,148847
(defvar *monitor-count* 3663,152282
(defvar *string-count*3665,152312
(defvar *cons-count*3668,152412
(defvar *count-hash-table*3671,152510
(defun increment-string-count 3674,152582
(defun increment-cons-count 3689,153140
(defvar *acl2-strings*)3701,153559
(defun count-objects1 3703,153584
(defun count-objects 3720,154079
(defun add-command-landmark 3817,156885
(defun find-longest-common-retraction1 3853,158645
(defun find-longest-common-retraction1-event 3859,158867
(defun find-longest-common-retraction 3865,159091
(defun install-global-enabled-structure 3886,159940
(defun set-w 3921,161617
(defun set-w! 3997,164996
(defmacro revert-world-on-error 4107,170470
(defun chk-theory-expr-value1 4125,171251
(defun chk-theory-expr-value 4154,172618
(defun theory-fn-translated-callp 4162,172959
(defun eval-theory-expr 4181,173559
(defun append-strip-cdrs 4213,174688
(defun no-rune-based-on 4220,174845
(defun revappend-delete-runes-based-on-symbols1 4226,175033
(defun revappend-delete-runes-based-on-symbols 4238,175587
(defun current-theory1 4259,176526
(defun first-n-ac-rev 4297,178334
(defun longest-common-tail-length-rec 4313,178891
(defun longest-common-tail-length 4327,179458
(defun extend-current-theory 4336,179806
(defun update-current-theory 4371,181290
(defun put-cltl-command 4395,182507
(defun install-event 4412,183276
(deflabel redundant-events4605,193744
(defun stop-redundant-event 4844,205741
(defrec command-number-baseline-info4905,208446
(defun absolute-to-relative-command-number 4909,208526
(defun relative-to-absolute-command-number 4914,208713
(defun normalize-absolute-command-number 4919,208900
(defun tree-occur 4969,210831
(defun cd-form-matchp 4978,211020
(defun cd-some-event-matchp 4991,211396
(defun cd-search 5010,212176
(defun superior-command-world 5051,213980
(defun er-decode-cd 5082,215468
(defun make-ldd-flags 5269,224682
(defun make-ldd 5281,225302
(defun access-ldd-class 5298,225966
(defun access-ldd-markp 5299,226010
(defun access-ldd-cdpair 5300,226054
(defun access-ldd-fullp 5301,226098
(defun access-ldd-n 5302,226142
(defun access-ldd-form 5303,226185
(defun big-d-little-d-name1 5305,226229
(defun big-d-little-d-name 5319,226853
(defun big-d-little-d-clique1 5333,227494
(defun big-d-little-d-clique 5346,228044
(defun big-d-little-d-event 5357,228503
(defun big-d-little-d-command-block 5383,229719
(defun symbol-class-char 5426,231729
(defun defun-mode-string 5437,232045
(defun big-c-little-c-event 5445,232299
(defun big-c-little-c-command-block 5472,233568
(defun print-ldd-full-or-sketch/mutual-recursion 5510,235368
(defun print-ldd-full-or-sketch/encapsulate 5519,235676
(defun normalize-char 5532,236205
(defun normalize-string1 5538,236361
(defun normalize-string 5550,236895
(defun string-matchp 5560,237300
(defun string-search1 5586,238288
(defun string-search 5593,238515
(defun doc-stringp 5610,239106
(defconst *zapped-doc-string*5627,239606
(defun zap-doc-string-from-event-form/all-but-last 5630,239675
(defun zap-doc-string-from-event-form/second-arg 5639,240034
(defun zap-doc-string-from-event-form/third-arg 5649,240302
(defun zap-doc-string-from-event-form/mutual-recursion 5660,240626
(defun zap-doc-string-from-event-form/doc-keyword 5665,240867
(defun zap-doc-string-from-event-form 5686,241833
(defun print-ldd-full-or-sketch 5705,242590
(defmacro with-base-10 5754,244380
(defun print-ldd 5765,244686
(defun print-ldds 5817,246565
(defun make-command-ldd 5849,248122
(defun make-event-ldd 5861,248626
(defun make-ldds-command-sequence 5870,248926
(defun make-ldds-command-block1 5894,250053
(defun make-ldds-command-block 5965,252469
(defun pcb-pcb!-fn 5983,253254
(defun pcb!-fn 5996,253717
(defun pcb-fn 5999,253772
(defmacro pcb! 6002,253828
(defun pc-fn 6022,254459
(defmacro pc 6034,254868
(defun pcs-fn 6156,260299
(defmacro pcs 6207,262706
(defmacro pbt 6229,263551
(defmacro pcb 6253,264444
(defun print-indented-list 6284,265922
(defun print-book-path 6299,266499
(defun pe-fn1 6314,267011
(defun pe-fn2 6344,268028
(defun pe-fn 6354,268566
(defmacro pe 6379,269791
(defmacro pe! 6427,271626
(defun command-block-names1 6442,272029
(defun command-block-names 6477,273724
(defun symbol-name-lst 6486,274097
(defun acl2-query-simulate-interaction 6491,274242
(defun acl2-query1 6509,274954
(defun acl2-query 6562,277070
(defun collect-names-in-defun-modes 6612,279408
(defun ubt-ubu-query 6623,279851
(defmacro ubt 6750,286917
(defmacro ubt! 6793,288878
(defmacro ubu 6811,289420
(defmacro ubu! 6842,290634
(defmacro u 6860,291183
(defun chk-virgin 6882,291864
(deflabel name6894,292125
(defun chk-boot-strap-redefineable-namep 6941,294352
(defun maybe-coerce-overwrite-to-erase 6957,295063
(defun redefinition-renewal-mode6963,295241
(defun redefined-names1 7210,307273
(defun redefined-names 7220,307651
(defun chk-redefineable-namep 7271,309528
(defun chk-just-new-name 7336,312520
(defun no-new-namesp 7383,314687
(defun chk-just-new-names 7392,314907
(defconst *return-character* 7418,316125
(defun read-symbol-from-string1 7420,316171
(defun read-symbol-from-string2 7435,316735
(defun read-symbol-from-string 7444,317066
(defun scan-past-newline 7495,319626
(defun scan-past-newlines 7502,319842
(defun scan-past-tilde-slash 7509,320055
(defun scan-to-doc-string-part1 7521,320620
(defun scan-to-doc-string-part 7532,320923
(defun get-one-liner-as-string1 7551,321685
(defun get-one-liner-as-string 7556,321859
(defun read-doc-string-citations1 7564,322170
(defun read-doc-string-citations 7578,322678
(defun doc-topicp 7594,323447
(defun ignore-doc-string-error 7597,323539
(defmacro er-doc 7601,323680
(defun chk-doc-string-citations 7615,324316
(defun chk-well-formed-doc-string 7647,325881
(defun translate-doc 7741,330468
(defun translate-doc-lst 7763,331387
(defun get-cites 7770,331665
(defun alpha-< 7781,332002
(defun merge-alpha-< 7801,332745
(defun merge-sort-alpha-< 7808,332970
(defun update-alpha-<-alist 7813,333145
(defun put-cited-bys 7825,333595
(defun update-doc-data-base 7850,334536
(defun update-doc-data-base-lst 7875,335616
(defun putprop-unless 7883,335888
(defun redefined-warning 7891,336150
(defun get-event 7904,336608
(defun redundant-labelp 7913,336874
(defun deflabel-fn 7923,337238
(defun defdoc-fn 7972,339050
(defmacro defdoc 8022,340850
(defun access-doc-string-data-base 8094,344201
(defun get-doc-string 8127,345359
(defun get-doc-string-de-indent1 8134,345542
(defun get-doc-string-de-indent 8138,345683
(defun use-doc-string-de-indent 8150,346199
(defun doc-prefix 8161,346519
(defun princ-prefix 8166,346640
(defun length-prefix 8172,346882
(defun save-more-doc-state 8176,347007
(defun doc-char-subst-table-p 8185,347396
(defun set-doc-char-subst-table 8198,347691
(defun doc-char-subst-table 8208,348112
(defun doc-fmt-alist 8215,348296
(defconst *terminal-markup-table*8219,348417
(defun doc-markup-table 8348,355162
(defun doc-scan-past-tilde-key 8353,355331
(defun doc-scan-past-tilde-arg8381,356597
(defun doc-scan-past-tilde8453,359441
(defun assoc-char-alist-stringp 8491,361198
(defun apply-char-subst-table1 8501,361511
(defun apply-char-subst-table 8522,362404
(defun read-pointer-and-text1 8549,363459
(defun read-pointer-and-text2 8573,364545
(defun read-pointer-and-text-raw 8582,364877
(defun posn-char-stringp 8595,365288
(defun replace-colons 8605,365512
(defun read-pointer-and-text 8618,365931
(defun lookup-fmt-alist 8626,366158
(defun bar-sep-p 8716,370300
(defun missing-fmt-alist-chars1 8720,370409
(defun missing-fmt-alist-chars 8738,371107
(defun complete-fmt-alist 8762,372222
(defun print-doc-string-part1 8789,373452
(defun print-doc-string-part9026,385721
(defun get-doc-section 9092,388789
(defmacro pstate-global-let* 9100,389084
(defun print-doc 9114,389512
(defun print-doc-lst 9206,393457
(defun degree-of-match2 9223,394136
(defun degree-of-match1 9231,394435
(defun degree-of-match 9237,394681
(defun find-likely-near-misses 9251,395218
(defun print-doc-dwim 9269,396033
(defun end-doc 9286,396672
(defun doc-fn 9300,397149
(defun more-fn 9351,399522
(defun doc!-fn 9376,400628
(defmacro more 9397,401692
(defmacro more! 9445,403767
(defun print-doc-outline9470,404618
(defun print-doc-outline-lst 9500,405743
(deflabel apropos9514,406472
(deflabel markup9527,406824
(deflabel doc-string9810,418289
(deflabel print-doc-start-column10043,431001
(defmacro doc 10065,431889
(defmacro doc! 10127,434781
(defun more-doc-fn 10145,435199
(defmacro more-doc 10159,435847
(defun get-doc-section-symbols 10185,436825
(defun get-docs-apropos1 10190,437018
(defun get-docs-apropos 10196,437293
(defun docs-fn 10199,437398
(defmacro docs 10254,439564
(defun print-top-doc-topics 10303,441583
(defun help-fn 10315,442040
(deflabel q 10374,444596
(defmacro help 10396,445396
(deflabel logical-name10411,445639
(deflabel command10486,449182
(deflabel command-descriptor10512,450219
(defun trans-fn 10600,454602
(defun trans!-fn 10627,455806
(defmacro trans 10648,456653
(defmacro trans! 10694,458064
(defun trans1-fn 10711,458533
(defmacro trans1 10721,458920
(defun tilde-*-props-fn-phrase1 10741,459438
(defun tilde-*-props-fn-phrase 10748,459674
(defun props-fn 10752,459790
(defmacro props 10773,460564
(deflabel enter-boot-strap-mode10788,460861
(deflabel exit-boot-strap-mode10819,462310
(defun walkabout-nth 10843,463275
(defun walkabout-ip 10866,464098
(defun walkabout-huh 10877,464418
(defun walkabout1 10882,464571
(defun walkabout 10981,468746
(defun walkabout=11098,471944
(defmacro walkabout=11104,472147
(defun lookup-bddnote 11109,472278
(defun update-bddnote-with-term 11116,472475
(defmacro show-bdd 11129,472953
(defun show-bdd-goal 11218,476807
(defun merge-car-term-order 11269,478964
(defun merge-sort-car-term-order 11276,479225
(defun falsifying-pair-p 11281,479435
(defun bogus-falsifying-assignment-var 11290,479732
(defun show-falsifying-assignment 11301,479984
(defun show-bdd-term 11377,483618
(defun tilde-*-substitution-phrase1 11446,486555
(defun tilde-*-substitution-phrase 11457,487087
(defun show-bdd-backtrace 11463,487340
(defun show-bdd-fn 11492,488404
(defun get-docs 11554,491364
(defun rev-union-equal 11564,491671
(defun get-guards2 11576,492084
(defun get-guards1 11643,494885
(defun get-guards 11646,494950
(defun get-guardsp 11666,495680
(defconst *no-measure*11680,496317
(defun get-measures1 11683,496350
(defun get-measures2 11714,497881
(defun get-measures 11722,498184
(defconst *no-ruler-extenders*11738,498814
(defconst *basic-ruler-extenders*11741,498855
(defun get-ruler-extenders1 11744,498919
(defun get-ruler-extenders2 11800,501659
(defmacro default-ruler-extenders-from-table 11808,502025
(defun default-ruler-extenders 11814,502221
(defun get-ruler-extenders-lst 11833,503061
(defun get-hints1 11850,503825
(defun get-hints 11877,504742
(defun get-guard-hints1 11887,505054
(defun get-guard-hints 11915,506033
(defun get-std-hints1 11926,506394
(defun get-std-hints 11955,507356
(defun get-normalizep 11965,507684
(defun get-normalizeps 12004,509084
(defun get-unambiguous-xargs-flg1/edcls 12015,509581
(defun get-unambiguous-xargs-flg1 12048,511071
(defun get-unambiguous-xargs-flg 12065,511911
(defun chk-xargs-keywords1 12089,513178
(defun chk-xargs-keywords 12106,514024
(defun get-names 12127,514850
(defun get-bodies 12132,514970
(defun chk-free-vars 12137,515099
(defun chk-declared-ignores 12148,515606
(defun chk-free-and-ignored-vars12160,516124
(defun chk-free-and-ignored-vars-lsts12215,518946
(defun putprop-x-lst1 12248,520812
(defun putprop-x-lst2 12258,521120
(defun putprop-x-lst2-unless 12269,521466
(defun translate-term-lst 12285,522173
(defun find-named-lemma 12381,526770
(defun find-runed-lemma 12398,527432
(defun free-varsp-member 12411,527781
(defun free-varsp-member-lst 12419,528031
(defun translate-expand-term1 12426,528212
(defun translate-expand-term 12551,533879
(defun translate-expand-hint1 12579,534996
(defun translate-expand-hint 12592,535529
(defun cons-all-to-lst 12646,537640
(defun translate-substitution 12651,537822
(defun translate-substitution-lst 12702,540156
(defun get-rewrite-and-defn-runes-from-runic-mapping-pairs 12711,540509
(defun translate-restrict-hint 12720,540851
(defconst *do-not-processes*12768,542950
(defun coerce-to-process-name-lst 12772,543086
(defun coerce-to-acl2-package-lst 12779,543325
(defun chk-do-not-expr-value 12786,543538
(defun translate-do-not-hint 12816,544866
(defun translate-do-not-induct-hint 12848,546044
(defun translate-hands-off-hint1 12874,547349
(defun translate-hands-off-hint 12914,548853
(defun convert-returned-vars-to-term-lst 12939,549695
(defun implicate 12944,549902
(defun convert-type-prescription-to-term 12954,550159
(defun truncated-class 12975,551205
(defun tests-and-alists-lst-from-fn 12989,551900
(defun corollary 13010,552919
(defun formula 13091,556399
(defun pf-fn 13112,557306
(defmacro pf 13147,558744
(defun merge-symbol-< 13168,559385
(defun merge-sort-symbol-< 13175,559658
(defun strict-merge-symbol-< 13186,560168
(defun strict-merge-sort-symbol-< 13207,560986
(defun strict-symbol-<-sortedp 13224,561482
(defun sort-symbol-listp 13231,561710
(defconst *non-instantiable-primitives*13239,561930
(defun instantiablep 13272,563470
(defun all-ffn-symbs 13310,565146
(defun all-ffn-symbs-lst 13320,565541
(defun remove-guard-holders1 13333,565891
(defun remove-guard-holders1-lst 13377,567892
(defun contains-guard-holdersp 13387,568218
(defun contains-guard-holdersp-lst 13407,568879
(defun remove-guard-holders 13412,569074
(defun remove-guard-holders-lst 13421,569316
(defconst *unknown-constraints*13429,569537
(defun constraint-info 13437,569760
(defdoc constraint13500,572508
(defun chk-equal-arities 13951,592650
(defun extend-sorted-symbol-alist 13972,593287
(defun chk-equiv-classicalp 13986,593654
(defun translate-functional-substitution 14006,594458
(defun sublis-fn-rec 14129,600138
(defun sublis-fn-rec-lst 14245,606227
(defun sublis-fn 14260,606793
(defun sublis-fn-simple 14267,607007
(defun sublis-fn-lst-simple 14277,607330
(defun instantiable-ffn-symbs 14288,607611
(defun instantiable-ffn-symbs-lst 14315,608613
(defun unknown-constraint-supporters 14326,609007
(defun collect-instantiablep1 14346,609910
(defun all-instantiablep 14357,610287
(defun collect-instantiablep 14363,610450
(defun immediate-instantiable-ancestors 14372,610712
(defun instantiable-ancestors 14417,612973
(defun hitp 14436,613635
(defun hitp-lst 14449,614077
(defun event-responsible-for-proved-constraint 14456,614226
(defun getprop-x-lst 14501,616482
(defun filter-hitps 14507,616715
(defun add-to-set 14514,616908
(defun relevant-constraints1 14519,617012
(defun relevant-constraints1-axioms 14677,624772
(defun relevant-constraints 14727,627281
(defun bound-vars 14778,629534
(defun bound-vars-lst 14789,629938
(defun translate-lmi/instance14797,630099
(defun translate-lmi/functional-instance 14834,631895
(defun translate-lmi 14931,636918
(deflabel lemma-instance15032,641249
(defun translate-use-hint1 15134,646871
(defun translate-use-hint 15157,647978
(defun convert-name-tree-to-new-name1 15268,653440
(defun convert-name-tree-to-new-name 15295,654788
(defun translate-by-hint 15317,655845
(defun translate-cases-hint 15385,658908
(defun translate-case-split-limitations-hint 15400,659386
(defun translate-no-op-hint 15422,660285
(defun character-alistp 15426,660382
(defun tilde-@p 15441,660841
(defun translate-error-hint 15448,661010
(defun translate-induct-hint 15457,661297
(defconst *built-in-executable-counterparts*15469,661762
(defconst *s-prop-theory*15489,662416
(defconst *definition-minimal-theory*15502,662914
(defun translate-in-theory-hint15505,663013
(defun all-function-symbolps 15581,666827
(defun collect-non-function-symbols 15587,667050
(defun collect-non-logic-mode 15594,667330
(defun translate-bdd-hint1 15602,667641
(defun translate-bdd-hint 15689,671715
(defun translate-nonlinearp-hint 15707,672347
(defun translate-no-thanks-hint 15717,672639
(defun pos-listp 15721,672738
(defun translate-reorder-hint 15727,672873
(defrec clause-processor-hint15737,673189
(defun arity-mismatch-msg 15741,673260
(defun translate-clause-processor-hint 15772,674562
(defconst *protected-system-state-globals*15887,680104
(defun state-global-bindings 15938,683120
(defmacro protect-system-state-globals 15944,683319
(defun formal-value-triple 15955,683668
(defun translate-simple-or-error-triple 15960,683833
(defun xtrans-eval 15990,685041
(defun translate-custom-keyword-hint 16080,688838
(defun custom-keyword-hint 16132,691170
(defun remove-all-no-ops 16143,691504
(defun remove-redundant-no-ops 16151,691809
(defun find-first-custom-keyword-hint 16170,692406
(defconst *custom-keyword-max-iterations*16190,693171
(defun custom-keyword-hint-interpreter116193,693221
(defun custom-keyword-hint-interpreter16351,699661
(defun custom-keyword-hint-in-computed-hint-form 16382,701097
(defun put-cl-id-of-custom-keyword-hint-in-computed-hint-form16410,702310
(defun make-disjunctive-clause-id 16436,703350
(defun make-disjunctive-goal-spec 16444,703641
(defun minimally-well-formed-or-hintp 16449,703827
(defun split-keyword-alist 16457,704097
(defun distribute-other-hints-into-or1 16468,704535
(defun distribute-other-hints-into-or 16473,704726
(defconst *hint-expression-basic-vars*16494,705474
(defconst *hint-expression-override-vars*16497,705585
(defconst *hint-expression-backtrack-vars*16500,705682
(defconst *hint-expression-all-vars*16505,705867
(defun translate-hint-expression 16510,706073
(defun translate-backtrack-hint 16643,711918
(defun translate-or-hint 16648,712072
(defun translate-hint-settings 16701,714302
(defun translate-x-hint-value 16735,715583
(defun replace-goal-spec-in-name-tree1 16805,717934
(defun replace-goal-spec-in-name-tree 16825,718676
(defun translate-hint 16847,719674
(defun translate-hint-expressions 17181,736612
(defun check-translated-override-hint 17200,737474
(defun translate-hints1 17211,737910
(defun warn-on-duplicate-hint-goal-specs 17297,742707
(defun translate-hints2 17318,743870
(defun override-hints 17328,744380
(defun translate-hints 17465,751672
(defun translate-hints+ 17468,751804
(defun translate-override-hints 17478,752146
(defun apply-override-hint17483,752347
(defun apply-override-hints17584,756187
(defun eval-and-translate-hint-expression17607,756950
(deflabel goal-spec17841,768118
(deflabel hints-and-the-waterfall17927,771411
(deflabel hints18128,783157
(deflabel clause-identifier18812,816539
(deflabel computed-hints18865,818589
(deflabel using-computed-hints-119016,826777
(deflabel using-computed-hints-219067,828000
(deflabel using-computed-hints-319172,832239
(deflabel using-computed-hints-419292,837216
(deflabel using-computed-hints-519434,843118
(deflabel using-computed-hints-619498,845480
(deflabel using-computed-hints-719754,855672
(deflabel using-computed-hints-819986,864896
(deflabel using-computed-hints20028,866794
(defmacro ttags-seen 20072,868605
(defun active-book-name 20126,870931
(defrec deferred-ttag-note20137,871393
(defun fms-to-standard-co 20141,871467
(defun print-ttag-note 20148,871702
(defun show-ttag-notes1 20188,873538
(defun show-ttag-notes-fn 20200,874039
(defmacro show-ttag-notes 20217,874838
(defun set-deferred-ttag-notes 20221,874938
(defun ttags-from-deferred-ttag-notes1 20308,878592
(defun ttags-from-deferred-ttag-notes 20318,878969
(defun print-deferred-ttag-notes-summary 20321,879069
(defun notify-on-defttag 20338,879843
(defun ttag-allowed-p 20375,881370
(defun chk-acceptable-ttag1 20399,882358
(defun chk-acceptable-ttag 20462,885437
(defun chk-acceptable-ttags2 20477,885921
(defun chk-acceptable-ttags1 20493,886862
(defun chk-acceptable-ttags 20522,888554
(defun chk-table-nil-args 20538,889299
(defun chk-table-guard 20550,889704
(defun chk-table-guards-rec 20592,891504
(defun chk-table-guards 20606,892196
(defun put-assoc-equal-fast 20619,892820
(defun global-set? 20631,893241
(defun cltl-def-from-name2 20636,893353
(defun cltl-def-from-name1 20659,894274
(defun cltl-def-from-name 20677,895091
(defun table-cltl-cmd 20689,895592
(defun table-fn1 20774,900031
(defun table-fn 20963,909063
(defun set-override-hints-fn 21065,913480

prove.lisp,7685
(defun abbreviationp1 43,1707
(defun abbreviationp1-lst 61,2427
(defun abbreviationp 69,2686
(defun all-vars-bag 82,3182
(defun all-vars-bag-lst 87,3336
(defun find-abbreviation-lemma 93,3499
(defun expand-abbreviations-with-lemma 128,5104
(defun expand-abbreviations 155,6071
(defun expand-abbreviations-lst431,18498
(defun and-orp 450,19229
(defun find-and-or-lemma 461,19559
(defun expand-and-or493,21137
(defun clausify-input1575,24890
(defun clausify-input1-lst648,27944
(defun clausify-input 665,28669
(defun expand-some-non-rec-fns-in-clauses 691,29929
(defun no-op-histp 710,30722
(defun expand-any-final-implies1 746,32308
(defun expand-any-final-implies1-lst 778,33555
(defun expand-any-final-implies 787,33797
(defun preprocess-clause 811,34654
(defun tilde-*-preprocess-phrase 971,42306
(defun tilde-*-raw-preprocess-phrase 997,43213
(defun preprocess-clause-msg1 1022,44039
(defun more-than-simplifiedp 1080,46566
(defun delete-assoc-eq-lst 1100,47420
(defun delete-assumptions-1 1108,47691
(defun delete-assumptions 1142,49392
(defun push-clause 1152,49712
(defun g1-lst 1386,60620
(defthm g1-lst=1390,60693
(defun f1-lst 1400,60803
(defthm f1-lst=1404,60876
(defthm 0=1411,61030
(defthm 0=1418,61157
(defun push-clause-msg1-abort 1439,62012
(defun push-clause-msg1 1476,63617
(deflabel otf-flg1500,64541
(defun clause-set-subsumes-1 1544,66354
(defun clause-set-subsumes 1558,67097
(defun apply-use-hint-clauses 1571,67566
(defun apply-cases-hint-clause 1681,72582
(defun term-list-listp 1717,73853
(defun non-term-listp-msg 1724,74019
(defun non-term-list-listp-msg 1741,74465
(defun eval-clause-processor 1759,74938
(defun apply-top-hints-clause1 1817,77483
(defun first-assoc-eq 2078,89410
(defun apply-top-hints-clause 2086,89675
(defun lmi-seed 2180,94236
(defun lmi-techs 2198,94931
(defun lmi-seed-lst 2208,95235
(defun lmi-techs-lst 2213,95405
(defun filter-atoms 2218,95574
(defun tilde-@-lmi-phrase 2228,95859
(defun or-hit-msg 2305,99253
(defun apply-top-hints-clause-msg12328,100439
(defun previous-process-was-speciousp 2532,110379
(defconst *preprocess-clause-ledge*2630,115389
(defmacro initialize-pspv-for-gag-mode 2661,116635
(defun show-gag-info-pushed 2672,116840
(defun show-gag-info 2684,117373
(defun show-gag-stack 2694,117809
(defun show-gag-state 2700,117973
(defun maybe-show-gag-state 2728,119454
(defun waterfall-update-gag-state 2738,119729
(defun record-gag-state 2914,128702
(defun gag-state-exiting-cl-id 2917,128790
(defun remove-pool-lst-from-gag-state 2990,132612
(defun pop-clause-update-gag-state-pop 3027,134353
(defun gag-mode-jppl-flg 3047,134974
(defun waterfall-msg13068,135803
(defun waterfall-msg3126,137911
(defun put-ttree-into-pspv 3183,140425
(defun set-cl-ids-of-assumptions 3188,140615
(defun collect-assumptions 3236,142942
(defun sublis-var-lst-lst 3279,144995
(defun add-segments-to-clause 3284,145183
(defun split-initial-extra-info-lits 3290,145418
(defun conjoin-clause-to-clause-set-extra-info1 3297,145691
(defun conjoin-clause-to-clause-set-extra-info 3343,147800
(defun conjoin-clause-sets-extra-info 3363,148871
(defun maybe-add-extra-info-lit 3380,149674
(defun conjoin-clause-sets+ 3389,150031
(defconst *equality-aliases*3393,150211
(defun term-equated-to-constant 3400,150415
(defun simplify-clause-for-term-equal-const-1 3411,150743
(defun simplify-clause-for-term-equal-const 3431,151653
(defun add-literal-smart 3440,151908
(defun guard-clauses 3509,155025
(defun guard-clauses-lst 3728,164857
(defun linked-variables1 3743,165360
(defun linked-variables 3760,166080
(defun contains-constrained-constantp 3821,169451
(defun contains-constrained-constantp-lst 3835,170095
(defun disvar-type-alist1 3843,170376
(defun collect-all-vars 3851,170750
(defun disvar-type-alist 3855,170877
(defun unencumber-type-alist 3875,171741
(defun unencumber-assumption 3918,173747
(defun unencumber-assumptions 3991,175900
(defun dumb-type-alist-implicationp1 4028,177487
(defun dumb-type-alist-implicationp2 4040,178120
(defun dumb-type-alist-implicationp 4046,178402
(defun partition-according-to-assumption-term 4110,181780
(defun exists-assumption-with-weaker-type-alist 4132,182671
(defun add-assumption-with-weak-type-alist 4150,183458
(defun dumb-keep-assumptions-with-weakest-type-alists 4175,184583
(defun dumb-assumption-subsumption1 4210,186099
(defun dumb-assumption-subsumption 4226,186625
(defun clausify-type-alist 4243,187431
(defun clausify-assumption 4270,188670
(defun clausify-assumptions 4285,189071
(defun strip-assumption-terms 4303,189792
(defun extract-and-clausify-assumptions 4311,190051
(defun waterfall-step1 4426,196125
(defun waterfall-step-cleanup 4456,197036
(defun process-backtrack-hint 4596,202707
(defun waterfall-step 4634,204408
(defun find-applicable-hint-settings14785,211845
(defun find-applicable-hint-settings 4966,220888
(defun alist-keys-subsetp 4979,221505
(defun thanks-for-the-hint 4985,221659
(defun lmi-name-or-rune 5044,224567
(defun enabled-lmi-names1 5057,224967
(defun enabled-lmi-names 5072,225509
(defun maybe-warn-for-use-hint 5093,226217
(defun maybe-warn-about-theory-simple 5114,226940
(defun maybe-warn-about-theory-from-rcnsts 5125,227441
(defun waterfall-print-clause-body 5149,228591
(defun waterfall-print-clause 5163,229059
(defun waterfall-or-hit-msg-a 5200,230584
(defun waterfall-or-hit-msg-b 5235,231921
(defun tilde-*-or-hit-summary-phrase1 5255,232807
(defun tilde-*-or-hit-summary-phrase 5268,233280
(defun waterfall-or-hit-msg-c 5281,233713
(defun term-difficulty1 5350,236843
(defun term-difficulty1-lst 5364,237446
(defun term-difficulty 5370,237634
(defun clause-difficulty 5378,237979
(defun clause-set-difficulty 5383,238097
(defun pool-difficulty 5392,238457
(defun how-many-to-be-proved 5403,238860
(defun pick-best-pspv-for-waterfall0-or-hit15415,239254
(defun pick-best-pspv-for-waterfall0-or-hit 5468,241858
(defun change-or-hit-history-entry 5502,243270
(defun pair-cl-id-with-hint-setting 5552,245301
(defun apply-reorder-hint-front 5585,246978
(defun apply-reorder-hint-back 5592,247222
(defun filter-> 5599,247579
(defun apply-reorder-hint 5606,247764
(defun waterfall15637,248969
(defun waterfall0-with-hint-settings5707,251950
(defun waterfall0 5749,253532
(defun waterfall0-or-hit 5997,263682
(defun waterfall1-lst 6178,271761
(defun waterfall 6245,274409
(defun some-pool-member-subsumes 6309,277011
(defun add-to-pop-history6325,277716
(defun pop-clause1 6371,279860
(defun make-defthm-forms-for-byes 6447,283346
(defun pop-clause-msg1 6458,283748
(defun pop-clause-msg 6622,291723
(defun subsumed-clause-ids-from-pop-history 6647,292610
(defun increment-proof-tree-pop-clause 6661,293188
(defun pop-clause 6674,293771
(defun tilde-@-assumnotes-phrase-lst 6710,295404
(defun tilde-*-assumnotes-column-phrase 6759,298134
(defun process-assumptions-msg1 6766,298351
(defun process-assumptions-msg 6794,299556
(deflabel forcing-round6840,301708
(deflabel failure6977,309021
(deflabel failed-forcing7019,311383
(defun quickly-count-assumptions 7166,318390
(defun add-type-alist-runes-to-ttree 7184,319210
(defun process-assumptions-ttree 7193,319536
(defun process-assumptions 7205,319955
(defun do-not-induct-msg 7289,323470
(defun prove-loop1 7316,324402
(defun print-pstack-and-gag-state 7416,328806
(defun prove-loop0 7425,329042
(defmacro bind-acl2-time-limit 7449,330065
(defun prove-loop 7472,331070
(defmacro make-rcnst 7500,332203
(defmacro make-pspv 7526,333275
(defun chk-assumption-free-ttree 7548,334151
(defun prove 7593,336198

defuns.lisp,11630
(defconst *mutual-recursion-ctx-string*37,1631
(defun translate-bodies140,1718
(defun translate-bodies64,2874
(defun chk-mutual-recursion-bad-names 83,3620
(defconst *chk-mutual-recursion-string*91,3932
(defun chk-mutual-recursion1 100,4319
(defun chk-mutual-recursion 120,4986
(defun ffnnamep-mod-mbe 149,6191
(defun ffnnamep-mod-mbe-lst 166,6883
(defun putprop-recursivep-lst 181,7301
(defrec tests-and-call 209,8637
(defun all-calls 218,9005
(defun all-calls-lst 247,10310
(defun all-calls-alist 256,10550
(defun termination-machine1 265,10875
(defun ffnnamesp-eq 285,11651
(defun ffnnamesp-eq-lst 295,12032
(defun member-eq-all 303,12170
(defun termination-machine 309,12265
(defun termination-machine-for-list 412,16872
(defun termination-machines 420,17260
(defun proper-dumb-occur-as-output 435,17863
(defun always-tested-and-changedp 460,19021
(defun guess-measure 486,20083
(defun guess-measure-alist 542,23146
(defun add-literal-to-clause-segments 577,24948
(defun remove-built-in-clauses 583,25219
(defun length-exceedsp 604,25967
(defun clean-up-clause-set 609,26093
(defun measure-clause-for-branch 691,29856
(defun measure-clauses-for-fn1 722,30991
(defun measure-clauses-for-fn 736,31609
(defun measure-clauses-for-clique 767,32724
(defun tilde-*-measure-phrase1 784,33432
(defun tilde-*-measure-phrase 792,33773
(defun find-?-measure 820,34773
(defun prove-termination 829,35076
(defun putprop-justification-lst 1028,45141
(defun union-equal-to-end 1056,46265
(defun cross-tests-and-calls3 1065,46522
(defun cross-tests-and-calls2 1081,47391
(defun cross-tests-and-calls1 1089,47650
(defun sublis-tests-rev 1098,47965
(defun all-calls-test-alist 1116,48712
(defun cross-tests-and-calls 1128,49118
(defun induction-machine-for-fn1 1195,52620
(defun induction-machine-for-fn1-lst 1545,70333
(defun term-equated-to-constant-in-termlist 1569,71407
(defun simplify-tests 1578,71708
(defun simplify-tests-and-calls 1599,72643
(defun simplify-tests-and-calls-lst-rec 1617,73252
(defun simplify-tests-and-calls-lst 1633,73794
(defun induction-machine-for-fn 1655,74481
(defun induction-machines 1677,75395
(defun putprop-induction-machine-lst 1697,76284
(defun quick-block-initial-settings 1711,76838
(defun quick-block-info1 1716,77013
(defun quick-block-info2 1721,77162
(defun quick-block-settings 1729,77388
(defun quick-block-down-t-machine 1738,77821
(defun quick-block-info 1754,78450
(defun putprop-quick-block-info-lst 1772,79217
(deflabel subversive-recursions1788,79847
(deflabel subversive-inductions1945,88049
(defmacro big-mutrec 1955,88217
(defmacro update-w 1965,88622
(defun get-sig-fns1 1989,89470
(defun get-sig-fns 2000,89893
(defun selected-all-fnnames-lst 2003,89976
(defun subversivep 2011,90276
(defun subversive-cliquep 2044,91618
(defun prove-termination-non-recursive 2079,93421
(defun prove-termination-recursive 2124,95243
(defun put-induction-info-recursive 2167,96900
(defun put-induction-info 2219,98975
(defun destructure-definition 2302,102966
(defun member-rewrite-rule-rune 2359,104977
(defun replace-rewrite-rule-rune 2368,105270
(defun preprocess-hyp 2380,105688
(defun preprocess-hyps 2399,106505
(defun add-definition-rule-with-ttree 2404,106661
(defun add-definition-rule 2478,110000
(defun listof-standardp-macro 2487,110374
(defun putprop-body-lst 2502,110784
(defun type-set-implied-by-term1 2795,126462
(defun type-set-implied-by-term 2820,127483
(defun putprop-initial-type-prescriptions 2840,128378
(defun map-returned-formals-via-formals 2889,130568
(defun map-type-sets-via-formals 2920,132206
(defun vector-ts-union 2936,132915
(defun map-cons-tag-trees 2945,133227
(defun type-set-and-returned-formals-with-rule12954,133446
(defun type-set-and-returned-formals-with-rule 3010,135727
(defun type-set-and-returned-formals-with-rules3091,138944
(defun type-set-and-returned-formals 3162,141910
(defun type-set-and-returned-formals-lst3450,155945
(defun guess-type-prescription-for-fn-step 3468,156712
(defconst *clique-step-install-interval*3513,158775
(defun guess-and-putprop-type-prescription-lst-for-clique-step3521,159054
(defun cleanse-type-prescriptions3585,161694
(defun guess-and-putprop-type-prescription-lst-for-clique3653,164940
(defun get-normalized-bodies 3704,167316
(defun putprop-type-prescription-lst 3720,167936
(defun putprop-level-no-lst 3869,173363
(defun primitive-recursive-argp 3895,174703
(defun primitive-recursive-callp 3959,178304
(defun primitive-recursive-callsp 3964,178536
(defun primitive-recursive-machinep 3969,178768
(defun putprop-primitive-recursive-defunp-lst 3986,179524
(defun make-controller-pocket 4020,181069
(defun make-controller-alist1 4033,181542
(defun make-controller-alist 4057,182691
(defun max-nume-exceeded-error 4074,183547
(defun putprop-defun-runic-mapping-pairs1 4083,183967
(defun putprop-defun-runic-mapping-pairs 4120,185732
(defun eval-ground-subexpressions-lst-lst 4202,189947
(defun guard-clauses+ 4217,190530
(defun guard-clauses-for-body 4226,190978
(defun guard-clauses-for-fn 4250,191994
(defun guard-clauses-for-clique 4303,194157
(defun print-verify-guards-msg 4324,195018
(defun collect-ideals 4350,195922
(defun collect-non-ideals 4356,196161
(defun collect-non-common-lisp-compliants 4362,196400
(defun all-fnnames1-exec 4369,196720
(defmacro all-fnnames-exec 4390,197502
(defun chk-common-lisp-compliant-subfunctions4393,197575
(defun chk-acceptable-verify-guards-formula 4422,198991
(defun chk-acceptable-verify-guards 4469,201134
(defun guard-obligation-clauses 4555,204832
(defun guard-obligation 4628,207895
(defun prove-guard-clauses-msg 4708,211462
(defmacro verify-guards-formula 4739,212682
(defun prove-guard-clauses 4785,214739
(defun verify-guards-fn1 4873,218725
(defun verify-guards-fn 5112,228539
(defconst *super-defun-wart-table*5203,232192
(defun project-out-columns-i-and-j 5250,234780
(defconst *super-defun-wart-binding-alist*5256,234979
(defconst *super-defun-wart-stobjs-in-alist*5259,235085
(defun super-defun-wart-bindings 5262,235193
(defun store-stobjs-ins 5269,235481
(defun store-super-defun-warts-stobjs-in 5275,235733
(defun collect-old-nameps 5289,236217
(defun defuns-fn-short-cut 5295,236441
(defun print-defun-msg/collect-type-prescriptions 5325,237798
(defun print-defun-msg/type-prescriptions1 5349,238792
(defun print-defun-msg/type-prescriptions 5391,240671
(defun simple-signaturep 5434,242188
(defun all-simple-signaturesp 5442,242403
(defun print-defun-msg/signatures1 5447,242587
(defun print-defun-msg/signatures 5464,243164
(defun print-defun-msg 5477,243640
(defun get-ignores 5505,244773
(defun get-ignorables 5511,244937
(defun chk-all-stobj-names 5517,245110
(defun get-declared-stobj-names 5534,245812
(defun get-stobjs-in-lst 5575,247664
(defun chk-stobjs-out-bound 5627,250306
(defun store-stobjs-out 5635,250641
(defun unparse-signature 5644,250934
(defun chk-defun-mode 5656,251361
(defun scan-to-cltl-command 5670,251845
(defconst *xargs-keywords*5684,252331
(defun plausible-dclsp1 5693,252631
(defun plausible-dclsp 5711,253403
(defun dcl-fields1 5739,254746
(defun dcl-fields 5745,254983
(defun strip-keyword-list 5758,255452
(defun strip-dcls1 5772,255955
(defun strip-dcls 5783,256461
(defun fetch-dcl-field1 5799,257189
(defun fetch-dcl-fields2 5810,257726
(defun fetch-dcl-fields1 5818,258018
(defun fetch-dcl-fields 5827,258448
(defun fetch-dcl-field 5849,259525
(defun set-equalp-eq 5852,259610
(defun non-identical-defp-chk-measures 5858,259809
(defun non-identical-defp 5912,262279
(defun identical-defp 6083,271054
(defun redundant-or-reclassifying-defunp0 6090,271295
(defun redundant-or-reclassifying-defunp 6325,281008
(defun redundant-or-reclassifying-defunsp10 6348,282389
(defun redundant-or-reclassifying-defunsp1 6368,283269
(defun redundant-or-reclassifying-defunsp0 6373,283558
(defun redundant-or-reclassifying-defunsp 6408,285443
(defun collect-when-cadr-eq 6489,289628
(defun all-programp 6495,289842
(defun formal-position 6588,294746
(defun make-slot 6593,294905
(defun make-slots 6596,294990
(defun slot-member 6601,295160
(defun expand-clique-alist-term 6616,295537
(defun expand-clique-alist-term-lst 6637,296397
(defun expand-clique-alist1 6644,296618
(defun expand-clique-alist 6651,296914
(defun make-clique-alist1 6654,297009
(defun make-clique-alist 6667,297534
(defun relevant-slots-term 6679,297944
(defun relevant-slots-term-lst 6695,298562
(defun relevant-slots-call6702,298844
(defun relevant-slots-def6724,299697
(defun relevant-slots-clique1 6740,300363
(defun relevant-slots-clique 6753,300822
(defun all-non-lambda-slots-clique 6764,301304
(defun ignored/ignorable-slots 6774,301728
(defun irrelevant-non-lambda-slots-clique 6800,302999
(defun tilde-*-irrelevant-formals-msg1 6818,304022
(defun tilde-*-irrelevant-formals-msg 6826,304388
(defun chk-irrelevant-formals6829,304520
(deflabel irrelevant-formals6859,305782
(defun chk-logic-subfunctions 6932,309195
(defun get-non-classical-fns-from-list 6959,310425
(defmacro get-non-classical-fns 6971,310946
(defun get-non-classical-fns-aux 6975,311062
(defun strip-missing-measures 6990,311677
(defun chk-classical-measures 6998,311934
(defun chk-no-recursive-non-classical 7018,312818
(defun union-collect-non-x 7055,314602
(defun translate-measures 7060,314777
(defun redundant-predefined-error-msg 7092,316286
(defun chk-acceptable-defuns-redundancy 7106,316960
(defun chk-acceptable-defuns-verify-guards-er 7190,320432
(defun chk-non-executable-bodies 7251,323185
(defun get-and-chk-non-executablep 7277,324477
(defun chk-acceptable-defuns0 7299,325533
(defun chk-acceptable-defuns1 7354,327961
(defun conditionally-memoized-fns 7627,340270
(defun chk-acceptable-defuns 7645,341044
(deflabel XARGS7751,346079
(defmacro link-doc-to-keyword 7872,351567
(defmacro link-doc-to 7888,351892
(defun build-valid-std-usage-clause 7984,355515
(defun verify-valid-std-usage 7992,355839
(defun union-eq1-rev 8071,359446
(defun collect-hereditarily-constrained-fnnames 8081,359717
(defun putprop-hereditarily-constrained-fnnames-lst 8095,360297
(defun defuns-fn1 8136,362309
(defun defuns-fn08297,369520
(defun strip-non-hidden-package-names 8345,370990
(defun in-package-fn 8354,371414
(defun defstobj-functionsp 8376,372257
(defun index-of-non-number 8440,375723
(defun non-std-error 8449,375929
(defun non-std-body 8458,376335
(defun non-std-def-lst 8472,376828
(defun make-udf-insigs 8487,377394
(defun intro-udf 8496,377683
(defun intro-udf-lst1 8521,378491
(defun apply-stobj-print-names 8529,378815
(defun null-body-er+ 8539,379226
(defun intro-udf-lst2 8550,379657
(defun intro-udf-lst 8575,380667
(defun defun-ctx 8594,381532
(defun install-event-defuns 8612,382156
(defun defuns-fn 8663,384247
(defun defun-fn 8804,389964
(defun args-fn 8819,390507
(defmacro args 8902,394526
(defun make-verify-termination-def 8923,395161
(defun make-verify-termination-defs-lst 8950,396329
(defun chk-acceptable-verify-termination1 8966,397122
(defun uniform-defun-modes 9004,399268
(defun recover-defs-lst 9018,399872
(defun get-clique 9050,401283
(defun chk-acceptable-verify-termination 9065,401957
(defun verify-termination1 9110,404045
(defun verify-termination-boot-strap-fn 9141,405401
(defmacro when-logic3 9172,406486
(defun verify-termination-fn 9181,406752
(defun fns-used-in-axioms 9204,407714
(defun check-out-instantiablep1 9230,408688
(defun check-out-instantiablep 9239,408976

proof-checker-pkg.lisp,27
(defpkg "ACL2-PC" 29,1205

proof-checker-a.lisp,4093
(defmacro pc-value 35,1595
(defmacro pc-assign 39,1698
(defun initialize-pc-acl2 46,1853
(defmacro state-stack 56,2106
(defmacro old-ss 59,2159
(defmacro ss-alist 64,2274
(defmacro define-global 67,2321
(define-global pc-prompt 79,2693
(define-global pc-prompt-depth-prefix 80,2726
(define-global print-macroexpansion-flg 81,2769
(define-global print-prompt-and-instr-flg 83,2868
(defrec pc-state94,3427
(defconst *pc-state-fields-for-primitives*103,3540
(defmacro instruction 106,3653
(defmacro goals 113,3871
(defmacro abbreviations 120,4077
(defmacro local-tag-tree 127,4299
(defmacro pc-ens 134,4523
(defmacro tag-tree 141,4731
(defrec goal154,5273
(defconst *goal-fields*159,5358
(defmacro conc 162,5433
(defmacro hyps 165,5528
(defmacro current-addr 168,5623
(defmacro goal-name 171,5734
(defmacro depends-on 174,5839
(defmacro make-official-pc-command 177,5946
(defun intern-in-keyword-package 185,6260
(defun make-pretty-pc-command 192,6491
(defun make-pretty-pc-instr 197,6657
(defmacro change-pc-state 208,7052
(defun make-official-pc-instr 211,7136
(defun check-formals-length 228,7795
(defun check-&optional-and-&rest 257,9208
(defun make-let-pairs-from-formals 283,10351
(defun all-symbols 299,10975
(defun all-symbols-list 313,11325
(defun make-access-bindings 321,11465
(defun let-form-for-pc-state-vars 327,11722
(defun check-field-names 339,12241
(defmacro print-no-change 349,12659
(defmacro print-no-change2 352,12765
(defun print-no-change-fn 356,12875
(defmacro maybe-update-instruction 376,13669
(defun add-pc-doc-header 385,14069
(defun remove-doc 396,14356
(defun pc-primitive-defun-form 403,14668
(defmacro add-pc-command 426,15560
(defun table-get 429,15656
(defmacro pc-command-type 434,15807
(defmacro print-no-change3 437,15897
(defun add-pc-command-1 441,16036
(defun toggle-pc-macro-fn 448,16240
(defun pc-meta-or-macro-defun 473,17857
(defun goal-names 492,18642
(defun instructions-of-state-stack 498,18786
(defmacro fms0 507,19066
(defmacro with-output-forced 521,19610
(defun print-pc-prompt 545,20399
(defun pc-macroexpand 556,20752
(defun find-goal 584,22049
(defun print-all-goals-proved-message 591,22230
(defmacro when-goals 600,22504
(defmacro when-goals-trip 605,22609
(defun current-immediate-deps 611,22755
(defun goal-dependent-p 621,23180
(defun current-all-deps 629,23396
(defun maybe-print-proved-goal-message 639,23809
(defun accumulate-ttree-in-pc-state 683,26015
(defun pc-process-assumptions 689,26267
(defun make-implication 715,26991
(defun cl-set-to-implications 721,27141
(defun known-assumptions 728,27376
(defun add-assumptions-to-top-goal745,28108
(defun unproved-goals 763,28797
(defun make-pc-ens 771,29016
(defun initial-rcnst-from-ens 776,29102
(defun make-new-goals-fixed-hyps 783,29357
(defun pc-single-step-primitive 796,29838
(defun maybe-print-macroexpansion 970,38228
(defun pc-single-step-1 989,39227
(defun union-lastn-pc-tag-trees 1061,43134
(defun pc-single-step 1074,43531
(defconst *pc-complete-signal* 1105,45145
(defun pc-main-loop 1107,45196
(defun make-initial-goal 1170,48687
(defun initial-state-stack 1178,48845
(defun event-name-and-types-and-raw-term 1188,49237
(defmacro install-initial-state-stack 1191,49359
(defun pc-top 1201,49762
(defun illegal-fnp 1222,50521
(defun illegal-fnp-list 1236,50908
(defun verify-fn 1242,51051
(defun print-unproved-goals-message 1288,52973
(defun state-stack-from-instructions1297,53360
(defun state-from-instructions1308,53841
(defun print-pc-defthm 1316,54131
(defmacro print-pc-goal 1327,54504
(defmacro print-pc-state 1352,55627
(defun proof-checker1371,56427
(deflabel proof-checker-commands1440,59324
(deflabel macro-command1450,59627
(defmacro verify 1477,60856
(deflabel instructions1529,62713
(defun sublis-expr-non-quoteps 1558,63715
(defun sublis-expr-non-quoteps-lst 1576,64479
(defun invert-abbreviations-alist 1583,64681
(defun abbreviate 1590,64912
(defmacro untrans0 1595,65070
(defun untrans0-lst-fn 1601,65265
(defmacro untrans0-lst 1607,65495

defthm.lisp,14697
(defun unprettyify/add-hyps-to-pairs 58,2506
(defun unprettyify 67,2845
(defun remove-lambdas 118,5064
(defun remove-lambdas-lst 128,5379
(defun interpret-term-as-rewrite-rule 139,5634
(defun non-recursive-fnnames 182,7715
(defun non-recursive-fnnames-lst 195,8310
(defun hide-lambdas1 206,8729
(defun hide-lambdas 216,9083
(defun variantp 226,9461
(defun surrounding-fns1 244,9933
(defun surrounding-fns-lst 272,11028
(defun surrounding-fns 280,11246
(defun loop-stopper1 306,12246
(defun loop-stopper 316,12665
(defun remove-irrelevant-loop-stopper-pairs 491,23013
(defun put-match-free-value 509,23664
(defun free-vars-in-hyps 527,24299
(defun free-vars-in-hyps-simple 567,26155
(defun free-vars-in-fc-hyps 579,26673
(defun free-vars-in-hyps-considering-bind-free 591,27090
(defun all-vars-in-hyps 658,30097
(defun match-free-value 689,31387
(defun match-free-fc-value 699,31700
(defun rule-backchain-limit-lst 712,32299
(defun create-rewrite-rule 720,32640
(defun hyps-that-instantiate-free-vars 762,34440
(defun maybe-one-way-unify 779,35127
(defun maybe-one-way-unify-lst 797,35826
(defun maybe-one-way-unify-with-some 804,36107
(defun maybe-subsumes 813,36482
(defun subsumes-rewrite-rule 838,37691
(defun find-subsumed-rule-names 890,39920
(defun find-subsuming-rule-names 907,40773
(defun forced-hyps 923,41581
(defun strip-top-level-nots-and-forces 932,41907
(defun free-variable-error? 946,42490
(defun extend-geneqv-alist 965,43538
(defun covered-geneqv-alist 977,43952
(defun covered-geneqv-alist-lst 998,44850
(defun uncovered-equivs 1008,45273
(defun uncovered-equivs-alist 1018,45657
(defun uncovered-equivs-alist-lst 1112,49922
(defun double-rewrite-opportunities 1132,50932
(defun show-double-rewrite-opportunities1 1233,56898
(defun show-double-rewrite-opportunities 1268,58826
(defun irrelevant-loop-stopper-pairs 1290,59918
(defun chk-rewrite-rule-warnings 1302,60298
(defun chk-acceptable-rewrite-rule2 1484,69503
(defun chk-acceptable-rewrite-rule1 1536,71751
(defun chk-acceptable-rewrite-rule 1555,72609
(defun add-rewrite-rule2 1574,73593
(defun add-rewrite-rule1 1598,74855
(defun add-rewrite-rule 1619,75822
(deflabel linear1635,76487
(defun expand-inequality-fncall1 1773,84269
(defun expand-inequality-fncall 1796,85244
(defun all-vars-in-poly-lst 1841,87478
(defun subbagp-eq 1852,87829
(defun always-biggerp-data 1859,88028
(defun always-biggerp-data-lst 1867,88219
(defun always-biggerp 1875,88412
(defun no-element-always-biggerp 1899,89465
(defun maximal-terms1 1909,89822
(defun maximal-terms 1924,90445
(defun collect-when-ffnnamesp 1959,92181
(defun make-free-max-terms-msg1 1969,92486
(defun make-free-max-terms-msg 1996,93853
(defun external-linearize 2012,94457
(defun bad-synp-hyp-msg-for-linear 2022,94700
(defun show-double-rewrite-opportunities-linear 2031,95080
(defun chk-acceptable-linear-rule22052,95981
(defun chk-acceptable-linear-rule1 2191,103720
(defun chk-acceptable-linear-rule 2207,104399
(defun add-linear-rule3 2225,105254
(defun add-linear-rule2 2267,107207
(defun add-linear-rule1 2282,107911
(defun add-linear-rule 2298,108714
(deflabel well-founded-relation2340,110110
(defun destructure-well-founded-relation-rule 2517,117942
(defun chk-acceptable-well-founded-relation-rule 2556,119259
(defun add-well-founded-relation-rule 2593,120889
(deflabel built-in-clause2605,121375
(defun chk-acceptable-built-in-clause-rule2 2742,126726
(defun chk-acceptable-built-in-clause-rule1 2767,127825
(defun chk-acceptable-built-in-clause-rule 2781,128352
(defun fn-and-maximal-level-no 2797,129084
(defun fn-and-maximal-level-no-lst 2823,130341
(defun built-in-clause-discriminator-fn 2832,130589
(defun all-fnnames-subsumer 2838,130762
(defun make-built-in-clause-rules1 2862,132195
(defun chk-initial-built-in-clauses 2886,133372
(defun make-built-in-clause-rules 2915,134612
(defun classify-and-store-built-in-clause-rules 2931,135278
(defun add-built-in-clause-rule 2977,137747
(deflabel compound-recognizer3009,139247
(defun destructure-compound-recognizer 3181,147906
(defun make-recognizer-tuple 3239,150459
(defun comment-on-new-recog-tuple1 3306,153447
(defun comment-on-new-recog-tuple 3364,156546
(defun chk-acceptable-compound-recognizer-rule 3427,159675
(defun add-compound-recognizer-rule 3484,162078
(deflabel forward-chaining3507,163137
(defun chk-triggers 3588,167606
(defun destructure-forward-chaining-term 3679,172437
(defun chk-acceptable-forward-chaining-rule 3692,172937
(defun putprop-forward-chaining-rules-lst3713,173683
(defun add-forward-chaining-rule 3735,174648
(deflabel meta3751,175385
(deflabel evaluator-restrictions4121,194199
(deflabel extended-metafunctions4598,211251
(defun evaluator-clause/arglist 4921,225066
(defun evaluator-clause 4935,225656
(defun evaluator-clauses1 4963,226653
(defun evaluator-clauses 4968,226856
(defun cdrp 5042,230576
(defun expand-eq-and-atom-term-lst 5058,231125
(defun normalize-alleged-evaluator-clause 5112,233526
(defun normalize-alleged-evaluator-clause-set 5122,233871
(defun shallow-clausify1 5127,234085
(defun shallow-clausify 5140,234467
(defun find-evfn-lst-in-clause 5160,235336
(defun guess-evfn-lst-for-evfn 5191,236420
(defun find-fn-in-clause 5203,236901
(defun guess-fn-args-lst-for-evfn 5217,237417
(defun normalized-evaluator-cl-set 5231,238102
(defun chk-evaluator 5241,238426
(defun defevaluator-form/defthms 5321,242386
(defun defevaluator-form/fns-clauses 5336,243126
(defconst *defevaluator-form-base-theory*5358,243896
(defun defevaluator-form 5367,244239
(defmacro defevaluator 5414,246147
(deflabel term-table5544,251433
(defun meta-rule-hypothesis-function 5580,252806
(defun meta-fn-args 5615,254190
(defun chk-meta-function 5640,255006
(defun ev-lst-from-ev 5694,257413
(defun context-for-encapsulate-pass-2 5703,257619
(defun attachment-alist 5732,259011
(defun attached-fns 5741,259395
(defun siblings 5752,259846
(defun canonical-sibling 5757,260005
(defun canonical-ffn-symbs 5766,260306
(defun canonical-ffn-symbs-lst 5783,260918
(defun collect-canonical-siblings 5793,261170
(defun immediate-canonical-ancestors 5805,261582
(defun canonical-ancestors-rec 5831,262889
(defun canonical-ancestors 5846,263414
(defun chk-evaluator-use-in-rule 5856,263850
(defun chk-rule-fn-guard 5966,268963
(defun chk-acceptable-meta-rule 6018,271410
(defun add-meta-rule1 6120,276298
(defun maybe-putprop-lst 6134,276844
(defun mark-attachment-disallowed2 6144,277197
(defun mark-attachment-disallowed1 6170,278342
(defun mark-attachment-disallowed 6179,278700
(defun add-meta-rule 6200,279469
(deflabel elim6250,281489
(defun destructors 6390,288603
(defun destructors-lst 6406,289237
(defun strip-ffn-symbs 6413,289397
(defun chk-acceptable-elim-rule1 6418,289539
(defun chk-acceptable-elim-rule 6441,290550
(defun add-elim-rule1 6496,292868
(defun add-elim-rule 6521,293976
(deflabel generalize6533,294419
(defun chk-acceptable-generalize-rule 6560,295404
(defun add-generalize-rule 6567,295596
(deflabel type-prescription6579,296028
(defun find-type-prescription-pat 6702,302552
(defun type-prescription-disjunctp 6744,304299
(defun type-prescription-conclp 6790,306506
(defun subst-nil-into-type-prescription-disjunct 6815,307604
(defun subst-nil-into-type-prescription-concl 6840,308557
(defun destructure-type-prescription 6872,309994
(defun add-type-prescription-rule 7044,319306
(defun chk-acceptable-type-prescription-rule 7123,322596
(deflabel equivalence7248,329424
(defun boolean-fn 7547,339304
(defun reflexivity 7555,339502
(defun symmetry 7561,339592
(defun transitivity 7568,339706
(defun equivalence-relation-condition 7576,339857
(defun find-candidate-equivalence-relation 7594,340617
(defun collect-problematic-pre-equivalence-rule-names 7608,341133
(defun chk-acceptable-equivalence-rule 7627,342179
(defun add-equivalence-rule 7750,348315
(deflabel refinement7892,354355
(defun chk-acceptable-refinement-rule 7943,356475
(defun collect-coarsenings 7982,358411
(defun putprop-coarsenings 7992,358740
(defun union-values 8020,360041
(defun extend-value-set 8028,360280
(defun extend-each-value-set 8042,360945
(defun close-value-sets 8052,361276
(defun add-refinement-rule 8066,361904
(deflabel congruence8087,362698
(defun corresponding-args-eq-except 8231,369529
(defun interpret-term-as-congruence-rule 8245,370122
(defun some-congruence-rule-same 8326,374027
(defun some-congruence-rule-has-refinement 8335,374323
(defun chk-acceptable-congruence-rule 8345,374681
(defun putnth 8423,378427
(defun add-congruence-rule-to-congruence 8430,378689
(defun add-congruence-rule 8440,379096
(deflabel definition8486,381284
(defun chk-destructure-definition 8646,390709
(defun chk-acceptable-definition-install-body 8658,391272
(defun chk-acceptable-definition-rule8729,394219
(deflabel induction8779,396365
(defun chk-acceptable-induction-rule 8947,405073
(defun add-induction-rule 8954,405264
(deflabel type-set-inverter8971,405934
(defun chk-acceptable-type-set-inverter-rule 9028,408429
(defun add-type-set-inverter-rule 9096,411319
(deflabel clause-processor9118,412181
(defun tilde-@-illegal-clause-processor-sig-msg 9388,425011
(defun chk-acceptable-clause-processor-rule 9420,426082
(defun add-clause-processor-rule 9538,432127
(defun trusted-clause-processor-table-guard 9598,434446
(defmacro define-trusted-clause-processor9684,438475
(defun char-subsequencep 10025,454435
(defun disambiguate1 10037,454814
(defun make-disambiguation-alist 10047,455141
(defun assoc-cdr 10057,455539
(defun disambiguate 10065,455751
(defun tilde-@-abbreviates-but-phrase 10100,457347
(defun primitive-instructionp 10117,457892
(defun non-primitive-instructions 10125,458211
(defun chk-primitive-instruction-listp 10135,458524
(defun translate-instructions 10143,458763
(defun controller-alistp 10150,459011
(defun alist-to-keyword-alist 10170,459748
(defun loop-stopper-alist-p 10182,460186
(defun guess-controller-alist-for-definition-rule 10195,460540
(defun chk-legal-linear-trigger-terms1 10210,461263
(defun chk-legal-linear-trigger-terms 10231,462293
(defun backchain-limit-listp 10259,463707
(defun translate-rule-class-alist 10272,464017
(defun translate-rule-class1 10941,498571
(defun reason-for-non-keyword-value-listp 11001,501310
(defun translate-rule-class 11020,501875
(defun translate-rule-classes1 11071,504182
(defun translate-rule-classes 11093,505040
(defun chk-acceptable-x-rule 11124,506510
(defun chk-acceptable-x-rules 11207,510220
(defun collect-keys-eq 11222,510923
(defun chk-acceptable-rules 11231,511279
(defun add-x-rule 11314,513980
(defun add-rules1 11415,518630
(defun truncate-class-alist 11434,519470
(defun truncate-classes 11452,520261
(defun make-runes1 11470,521140
(defun make-runes 11509,522785
(defun make-runic-mapping-pairs 11517,523023
(defun add-rules 11531,523562
(defun redundant-theoremp 11554,524770
(defun non-tautological-classes 11567,525348
(defun prove-corollaries1 11585,526145
(defun prove-corollaries 11645,529176
(defun enabled-runep-string 11679,530599
(defun untranslate-hyps 11684,530713
(defun info-for-lemmas 11689,530890
(defun world-to-next-event 11726,532873
(defun assoc-eq-eq 11734,533124
(defun actual-props 11745,533460
(defun info-for-well-founded-relation-rules 11763,534082
(defun info-for-built-in-clause-rules1 11778,534680
(defun info-for-built-in-clause-rules 11795,535469
(defun info-for-compound-recognizer-rules 11801,535709
(defun info-for-generalize-rules 11825,536891
(defun info-for-linear-lemmas 11842,537655
(defun info-for-eliminate-destructors-rule 11872,539288
(defun info-for-congruences 11900,540765
(defun info-for-coarsenings 11908,540974
(defun info-for-forward-chaining-rules 11916,541167
(defun decode-type-set-lst 11944,542545
(defun info-for-type-prescriptions 11950,542684
(defun info-for-induction-rules 11980,544254
(defun info-for-type-set-inverter-rules 12003,545363
(defun info-for-x-rules 12023,546306
(defun info-for-rules 12080,548309
(defun print-info-for-rules-entry 12090,548700
(defun print-info-for-rules 12109,549476
(defun pr-body 12119,549856
(defun pr-fn 12128,550098
(defun print-clause-processor-rules1 12142,550763
(defmacro print-clause-processor-rules 12155,551286
(defun new-numes 12161,551520
(defun world-to-next-command 12172,551873
(defun pr!-fn 12179,552141
(defmacro pr 12188,552432
(defmacro pr! 12235,554031
(defun disabledp-fn-lst 12262,554961
(defun disabledp-fn 12269,555282
(defmacro disabledp 12292,556278
(defun access-x-rule-rune 12322,557512
(defun collect-x-rules-of-rune 12366,559700
(defun collect-congruence-rules-of-rune-in-geneqv-lst 12377,560105
(defun collect-congruence-rules-of-rune 12389,560554
(defun find-rules-of-rune2 12404,561200
(defun find-rules-of-rune1 12496,565160
(defun find-rules-of-rune 12512,565911
(defun collect-non-backchain-subclass 12556,567921
(defun chk-acceptable-monitor 12566,568297
(defun chk-acceptable-monitors 12641,571923
(defun monitor1 12662,572776
(defun unmonitor1 12681,573542
(defun monitor-fn 12700,574329
(defun unmonitor-fn 12726,575153
(defun monitored-runes-fn 12769,576728
(defun brr-fn 12785,577187
(defmacro brr 12798,577481
(deflabel why-brr12870,581447
(defmacro brr@ 12927,584518
(defmacro monitor 13054,591285
(defmacro unmonitor 13224,600346
(defmacro monitored-runes 13251,601221
(defun proceed-from-brkpt1 13267,601606
(defun exit-brr 13299,602874
(defun ok-if-fn 13310,603245
(defmacro ok-if 13318,603490
(defun print-rule-storage-dependencies 13366,605506
(defun some-getprop 13383,606118
(defun defaxiom-supporters 13390,606425
(defun defaxiom-fn 13450,609819
(defun warn-on-inappropriate-defun-mode 13523,612986
(defun add-hyp-standardp-var-lst 13537,613506
(defun strengthen-hyps-using-transfer-principle 13544,613694
(defun weaken-using-transfer-principle 13556,614034
(defun remove-standardp-hyp 13580,614906
(defun remove-standardp-hyps 13588,615141
(defun remove-standardp-hyps-and-standardp-conclusion 13600,615545
(defun chk-classical-term-or-standardp-of-classical-term 13611,615902
(defun defthm-fn1 13628,616622
(defun defthm-fn 13775,623687
(defmacro thm 13798,624289
(defun thm-fn 13830,625114
(defun chk-extensible-rule-classes 13863,626543
(defun extend-rule-classes 13872,626891
(defun gen-new-name-in-package-of-symbol1 13883,627251
(defun gen-new-name-in-package-of-symbol 13903,628047
(defmacro defequiv 13923,628769
(defmacro defrefinement 13982,630861
(defmacro defcong 14037,632796

other-events.lisp,24048
(defun legal-initp 52,2453
(defun macro-arglist-keysp 64,2909
(defun macro-arglist-after-restp 97,4489
(defun macro-arglist-optionalp 104,4695
(defun macro-arglist1p 131,5673
(defun subsequencep 148,6286
(defun collect-lambda-keywordps 161,6728
(defun macro-args-structurep 168,6988
(defun macro-vars-key 188,7944
(defun macro-vars-after-rest 212,8823
(defun macro-vars-optional 225,9174
(defun macro-vars 246,9924
(defun chk-legal-defconst-name 266,10645
(defun defconst-fn1 280,11277
(defvar *hcomp-fn-ht* 291,11541
(defvar *hcomp-const-ht* 292,11568
(defvar *hcomp-macro-ht* 293,11598
(defvar *hcomp-fn-alist* 294,11628
(defvar *hcomp-const-alist* 295,11658
(defvar *hcomp-macro-alist* 296,11691
(defconstant *hcomp-fake-value* 297,11724
(defvar *hcomp-book-ht* 298,11791
(defvar *hcomp-const-restore-ht* 299,11820
(defvar *hcomp-fn-macro-restore-ht*300,11858
(defvar *declaim-list* 333,13041
(defrec hcomp-book-ht-entry337,13073
(defun defconst-val-raw 347,13365
(defun defconst-val 358,13854
(defun defconst-fn 438,16888
(defun chk-legal-init-msg 493,19166
(defun chk-legal-init 518,20129
(defun chk-macro-arglist-keys 523,20273
(defun chk-macro-arglist-after-rest 595,24342
(defun chk-macro-arglist-optional 602,24602
(defun chk-macro-arglist1 637,26241
(defun chk-macro-arglist-msg 657,27082
(defun chk-macro-arglist 735,31029
(defun defmacro-fn1 740,31215
(defun chk-defmacro-width 756,31753
(defun redundant-defmacrop 770,32255
(defun defmacro-fn 788,33082
(defconst *initial-event-defmacros*897,38111
(defun boot-translate 1112,45852
(defun primordial-event-macro-and-fn1 1155,47559
(defun primordial-event-macro-and-fn 1184,48976
(defun primordial-event-macros-and-fns 1319,55636
(defconst *initial-type-prescriptions*1335,56231
(defun strip-caddrs 1357,57050
(defun collect-world-globals 1362,57197
(defun primordial-world-globals 1369,57467
(defun arglists-to-nils 1489,63385
(defconst *unattachable-primitives*1495,63613
(defun primordial-world 1508,64161
(defun same-name-twice 1572,66486
(defun conflicting-imports 1580,66718
(defun chk-new-stringp-name 1587,66889
(deflabel package-reincarnation-import-restrictions1626,68436
(defun chk-package-reincarnation-import-restrictions 1690,71754
(defun convert-book-name-to-cert-name 1702,72192
(defun unrelativize-book-path 1714,72550
(defun tilde-@-defpkg-error-phrase 1723,72926
(defconst *1*-pkg-prefix*1772,75627
(defun chk-acceptable-defpkg 1785,76053
(defun defpkg-fn 1970,84265
(defun theory-fn-callp 2161,93912
(defun intersection-augmented-theories-fn1 2184,94773
(defmacro check-theory 2204,95741
(defun intersection-theories-fn 2212,96051
(defmacro intersection-theories 2221,96398
(defun union-augmented-theories-fn1 2253,97381
(defun union-theories-fn1 2270,98233
(defun union-theories-fn 2294,99330
(defmacro union-theories 2333,100790
(defun set-difference-augmented-theories-fn1 2379,102083
(defun set-difference-theories-fn1 2394,102806
(defun set-difference-theories-fn 2418,103886
(defmacro set-difference-theories 2449,105078
(defun universal-theory-fn1 2488,106376
(defun universal-theory-fn 2540,109233
(defmacro universal-theory 2571,110782
(defun function-theory-fn1 2621,112830
(defun function-theory-fn 2681,115740
(defmacro function-theory 2697,116398
(defun executable-counterpart-theory-fn 2736,117719
(defmacro executable-counterpart-theory 2751,118356
(defun standard-theories 2794,119907
(defun current-theory-fn 2800,120157
(defmacro current-theory 2820,120954
(defun end-prehistoric-world 2954,125911
(defun theory-namep 3000,128007
(defun theory-fn 3009,128264
(defmacro theory 3016,128460
(defun deftheory-fn 3046,129280
(defun in-theory-fn 3168,134642
(defun in-arithmetic-theory-fn 3234,137329
(defmacro disable 3297,139959
(defmacro enable 3337,141291
(defmacro theory-invariant 3391,143191
(defmacro theory-invariant 3592,153172
(defmacro incompatible 3596,153246
(deflabel signature3637,154720
(defun gen-formals-from-pretty-flags1 3748,160601
(defun gen-formals-from-pretty-flags 3773,161625
(defconst *generic-bad-signature-string*3785,162219
(defconst *signature-keywords*3791,162506
(defun duplicate-key-in-keyword-value-listp 3796,162612
(defun translate-signature-kwd-value-list1 3803,162857
(defun translate-signature-kwd-value-list 3839,164605
(defun chk-signature 3855,165448
(defun chk-signatures 4100,177300
(defun chk-acceptable-encapsulate1 4150,179832
(defun primitive-event-macros 4201,182411
(deflabel embedded-event-form 4327,186754
(defun name-introduced 4478,192954
(defun chk-embedded-event-form-orig-form-msg 4553,196326
(defun chk-embedded-event-form4560,196575
(defun destructure-expansion 4903,213104
(defun rebuild-expansion 4912,213464
(defun set-raw-mode-on 4917,213641
(defun set-raw-mode-off 4929,214044
(defmacro set-raw-mode-on! 4941,214451
(defmacro set-raw-mode 4959,215099
(defun-one-output stobj-out 5098,221648
(defun mv-ref! 5109,222040
(defmacro add-raw-arity 5148,222868
(defmacro remove-raw-arity 5201,224884
(defun raw-arity 5225,225715
(defun alist-to-bindings 5286,228348
(defun-one-output acl2-raw-eval-form-to-eval 5293,228530
(defun acl2-raw-eval 5323,229753
(defun acl2-raw-eval 5346,230638
(defun acl2-raw-eval 5364,231334
(defun get-and-chk-last-make-event-expansion 5367,231409
(defconst *local-value-triple-elided*5394,232601
(defun elide-locals-rec 5404,232859
(defun elide-locals-lst 5441,234679
(defun elide-locals 5452,235096
(defun eval-event-lst 5471,236016
(defun equal-insig 5661,245609
(defun bad-signature-alist 5681,246526
(defmacro if-ns 5699,247401
(defun tilde-*-bad-insigs-phrase1 5718,247925
(defun tilde-*-bad-insigs-phrase 5740,248887
(defun union-eq-cars 5752,249383
(defun chk-acceptable-encapsulate2 5756,249506
(defun conjoin-into-alist 5798,251172
(defun classes-theorems 5812,251701
(defun constraints-introduced1 5824,252085
(defun new-trips 5837,252584
(defun constraints-introduced 5917,256905
(defun putprop-constraints 6037,262128
(deflabel local-incompatibility6071,263628
(defun maybe-install-acl2-defaults-table 6173,268755
(defun in-encapsulatep 6191,269447
(defun update-for-redo-flat 6207,270008
(defmacro redo-flat 6225,270671
(defun process-embedded-events6367,277300
(defun constrained-functions 6638,291586
(defun collect-logicals 6664,292833
(defun exported-function-names 6673,293117
(defun get-unnormalized-bodies 6685,293535
(defun contains-non-trivial-encapsulatep 6691,293784
(defun get-subversives 6709,294643
(defun ancestral-ffn-symbs-lst 6719,295068
(defun constraints-list 6723,295223
(defun encapsulate-constraint 6738,295935
(defun new-dependent-clause-processors 6835,300766
(defun bogus-exported-compliants 6852,301473
(defun encapsulate-pass-2 6906,304166
(defun test 7131,315181
(defstobj $s 7140,315485
(defun bad 7303,320549
(defthm lemma7471,325652
(defun tilde-@-abbreviate-object-phrase 7706,333407
(defun encapsulate-ctx 7740,334464
(defun print-encapsulate-msg1 7766,335531
(defun print-encapsulate-msg2 7783,336237
(defun print-encapsulate-msg3/exported-names 7795,336571
(defun print-encapsulate-msg3/constraints 7814,337175
(defun print-encapsulate-msg3 7862,339163
(defun find-first-non-local-name 7941,343339
(defun find-first-non-local-name-lst 7976,344940
(defun corresponding-encap-events 7995,345769
(defun corresponding-encaps 8011,346321
(defun redundant-encapsulate-tuplep 8019,346565
(defun redundant-encapsulatep 8052,348243
(defun mark-missing-as-hidden-p 8143,353131
(defun known-package-alist-included-p 8156,353656
(defun encapsulate-fix-known-package-alist 8169,354210
(defun subst-by-position1 8204,356165
(defun subst-by-position 8224,356882
(defun encapsulate-fn 8242,357702
(defun progn-fn1 8563,374439
(defun progn-fn 8654,378576
(defun progn!-fn 8657,378644
(defun make-event-ctx 8661,378824
(defun protected-eval 8666,378992
(defun make-event-debug-pre 8727,381803
(defun make-event-debug-post 8744,382526
(defmacro do-proofs? 8753,382888
(defun make-event-fn 8770,383403
(deflabel books9033,395735
(defun chk-book-name 9097,398976
(defun include-book-alist-subsetp 9143,401059
(defun get-portcullis-cmds 9183,403012
(defun remove-after-last-directory-separator 9216,404418
(defun merge-using-dot-dot 9224,404742
(defun our-merge-pathnames 9258,406049
(defun expand-tilde-to-user-home-dir 9289,407198
(defvar *canonical-unix-pathname-action*9312,408122
(defun canonical-unix-pathname 9324,408653
(defun unix-truename-pathname 9420,413931
(defun canonical-pathname 9437,414726
(defdoc canonical-pathname9467,415825
(defun canonical-dirname! 9506,417708
(defun directory-of-absolute-pathname 9517,418134
(defun extend-pathname 9523,418344
(defun maybe-add-separator 9567,420365
(defun set-cbd-fn 9573,420565
(defmacro set-cbd 9611,422119
(defun set-cbd-state 9642,423178
(defun parse-book-name 9658,423677
(defun cbd-fn 9710,425947
(defmacro cbd 9717,426254
(defun make-include-books-absolute 9833,431950
(defun make-include-books-absolute-lst 10053,442377
(defun first-known-package-alist 10066,442905
(defmacro string-prefixp 10086,443597
(defun relativize-book-path 10095,443875
(defun relativize-book-path-lst1 10120,444872
(defun relativize-book-path-lst 10127,445158
(defun defpkg-items-rec 10135,445459
(defun defpkg-items 10209,449096
(defun new-defpkg-list2 10222,449613
(defun make-defpkg 10246,450448
(defun new-defpkg-list110255,450797
(defun new-defpkg-list 10289,452138
(defun term-ignore-okp 10331,454527
(defun term-list-ignore-okp 10342,454909
(defun hidden-defpkg-events1 10350,455060
(defun hidden-defpkg-events 10407,457368
(defun fix-portcullis-cmds1 10415,457701
(defun fix-portcullis-cmds 10426,458208
(defun collect-uncertified-books 10478,460859
(defun certificate-filep 10492,461436
(defun chk-in-package 10502,461728
(defconst *ill-formed-certificate-msg*10544,463531
(defun include-book-er-warning-summary 10551,463884
(defun include-book-er1 10599,465784
(defun include-book-er 10614,466455
(defun penultimate-form-from-channel 10639,467771
(defun post-alist-and-checksum-from-cert-file 10645,467990
(defun tilde-@-cert-post-alist-phrase 10656,468522
(defun tilde-*-book-check-sums-phrase1 10697,470653
(defun tilde-*-book-check-sums-phrase 10756,473357
(defun get-cmds-from-portcullis1 10772,474095
(defun hidden-defpkg-events-simple 10790,474705
(defun get-cmds-from-portcullis 10814,475395
(defun chk-raise-portcullis2 10842,476523
(defun chk-raise-portcullis1 10897,479091
(defun mark-local-included-books 10927,480231
(defun unmark-and-delete-local-included-books 10959,481911
(defun decimal-string-to-number 10998,484165
(defun tainted-stringp 11029,485548
(defun taint-string 11048,486152
(defun parse-version 11060,486479
(defun-one-output latest-release-note-string 11111,488860
(defun earlier-acl2-versionp 11119,489180
(defun acl2-version-r-p 11148,490320
(defun ttag-alistp 11154,490493
(defun cert-annotationsp 11166,490834
(defun include-book-alist-entryp 11180,491227
(defun include-book-alistp1 11192,491682
(defun include-book-alistp 11207,492231
(defrec cert-obj11217,492666
(defun chk-raise-portcullis 11221,492745
(defun chk-certificate-file1 11376,499429
(defun chk-certificate-file 11537,508403
(defun chk-acceptable-certify-book1 11601,511379
(defun translate-book-names 11663,514074
(defun fix-ttags 11677,514663
(defun chk-well-formed-ttags 11717,516580
(defun chk-acceptable-certify-book 11728,516989
(defun print-objects 11859,523562
(defun replace-initial-substring 11864,523738
(defun replace-string-prefix-in-tree 11877,524212
(defmacro with-output-object-channel-sharing 11889,524793
(defun make-certificate-file1 11925,526173
(defun make-certificate-file-relocated 11978,528400
(defun make-certificate-file 11994,528998
(defun open-input-object-file 12145,536614
(defun read-object-file1 12167,537496
(defun read-object-file 12179,537950
(defun chk-cert-annotations12196,538778
(defun chk-cert-annotations-post-alist12264,542082
(defun chk-input-object-file 12351,546173
(defun include-book-dir 12365,546809
(defmacro include-book-dir-with-chk 12377,547375
(defun newly-defined-top-level-fns-rec 12396,548324
(defun newly-defined-top-level-fns 12429,549860
(defun accumulate-post-alist 12443,550224
(defun skipped-proofsp-in-post-alist 12462,551094
(defun check-sum-cert 12481,551772
(defmacro with-hcomp-bindings 12494,552276
(defmacro with-hcomp-bindings 12499,552372
(defmacro with-hcomp-ht-bindings 12516,552986
(defmacro with-hcomp-ht-bindings 12520,553052
(defun get-declaim-list 12553,554598
(defun tilde-@-book-stack-msg 12559,554722
(defun include-book-fn1 12591,556275
(defun include-book-fn 13258,590310
(defun spontaneous-decertificationp1 13355,594559
(defun spontaneous-decertificationp 13401,596711
(defun remove-duplicates-equal-from-end 13411,597132
(defun include-book-alist-subsetp-failure-witnesses 13417,597395
(defun expansion-filename 13527,603726
(defun write-expansion-file 13544,604362
(defun collect-ideal-user-defuns1 13694,611650
(defun collect-ideal-user-defuns 13721,612529
(defun set-difference-eq-sorted 13728,612768
(defun expansion-alist-pkg-names0 13741,613301
(defun hons-union-ordered-string-lists 13757,613922
(defun expansion-alist-pkg-names-memoize 13773,614454
(defun expansion-alist-pkg-names 13782,614763
(defun delete-names-from-kpa 13813,616194
(defun print-certify-book-step-2 13822,616476
(defun print-certify-book-step-3 13835,617109
(defun print-certify-book-guards-warning13845,617531
(defun chk-certify-book-step-3 13873,618608
(defun print-certify-book-step-4 13937,622314
(defun print-certify-book-step-5 13952,622923
(defun hcomp-build-from-portcullis 13959,623182
(defun certify-book-fn 13967,623392
(defmacro certify-book 14431,647284
(defmacro certify-book! 14616,657471
(deflabel pathname14650,658884
(deflabel book-example14695,661234
(deflabel full-book-name14866,670191
(deflabel book-name14911,672038
(deflabel book-contents15002,676289
(deflabel certificate15080,679596
(deflabel portcullis15163,683990
(deflabel version15277,690037
(deflabel keep15382,695787
(deflabel uncertified-books15415,697357
(deflabel book-makefiles15471,700225
(defun defstub-ignores 15682,710701
(defun defstub-body 15701,711345
(defun partition-rest-and-keyword-args1 15729,712412
(defun partition-rest-and-keyword-args2 15738,712713
(defun partition-rest-and-keyword-args 15755,713409
(defmacro defstub 15774,714199
(defun redundant-defchoosep 15880,718955
(defun chk-arglist-for-defchoose 15894,719564
(defun defchoose-constraint-basic 15912,720398
(defun generate-variable-lst-simple 15953,721724
(defun defchoose-constraint-extra 15970,722377
(defun defchoose-constraint 16045,726250
(defun defchoose-fn 16058,726825
(defun non-acceptable-defun-sk-p 16228,735261
(defmacro defun-sk 16308,739261
(deflabel forall16670,755402
(deflabel exists16684,755793
(deflabel defun-sk-example16698,756188
(defdoc quantifier-tutorial16798,759633
(deflabel quantifiers17401,787135
(deflabel quantifiers-using-recursion17438,788894
(deflabel quantifiers-using-defun-sk17469,789727
(deflabel quantifiers-using-defun-sk-extended17519,791354
(defun doublet-style-symbol-to-symbol-alistp 17615,794465
(defun chk-legal-defstobj-name 17628,794991
(defun chk-unrestricted-guards-for-user-fns 17641,795471
(defconst *expt2-28* 17654,796018
(defun chk-stobj-field-descriptor 17656,796053
(defun chk-acceptable-defstobj-renaming17809,803282
(defun defconst-name 17940,809560
(defun chk-acceptable-defstobj117945,809682
(defun the-live-var 18038,814551
(defconst *defstobj-keywords*18057,815402
(defun defstobj-redundancy-bundle 18060,815462
(defun redundant-defstobjp 18087,816704
(defun chk-acceptable-defstobj 18114,818124
(defun defstobj-fields-template 18260,824464
(defun defstobj-doc 18299,826209
(defun defstobj-template 18309,826549
(defun defstobj-component-recognizer-calls 18351,828437
(defun defstobj-component-recognizer-axiomatic-defs 18378,829581
(defun defstobj-field-fns-axiomatic-defs 18458,833217
(defun defstobj-axiomatic-init-fields 18553,837903
(defun defstobj-creator-fn 18572,838606
(defun defstobj-axiomatic-defs 18582,838888
(defun simple-array-type 18613,840184
(defun-one-output stobj-copy-array-aref 18621,840393
(defun-one-output stobj-copy-array-svref 18636,840895
(defun-one-output stobj-copy-array-fix-aref 18651,841352
(defmacro the-live-stobjp 18668,842027
(defun array-etype-is-fixnum-type 18679,842446
(defun defstobj-field-fns-raw-defs 18715,843839
(defun defstobj-raw-init-fields 18853,850105
(defun defstobj-raw-init 18878,851090
(defun defstobj-raw-defs 18886,851335
(defun put-stobjs-in-and-outs1 18923,852949
(defun put-stobjs-in-and-outs 18960,854152
(defun defconst-name-alist 19013,856471
(defun accessor-array 19019,856631
(defun strip-accessor-names 19029,857050
(defun defstobj-defconsts 19039,857297
(defun defstobj-fn 19045,857482
(deflabel stobj19270,868919
(deflabel stobj-example-119361,873619
(deflabel declare-stobjs19594,882889
(deflabel stobj-example-1-defuns19645,885129
(deflabel stobj-example-1-implementation19764,889776
(deflabel stobj-example-1-proofs19839,892592
(deflabel stobj-example-219989,898155
(deflabel stobj-example-320083,901222
(defdoc resize-list20321,910250
(defun-one-output mv-let-for-with-local-stobj 20335,910770
(defmacro with-local-stobj 20364,912086
(defdoc with-local-stobj20606,917962
(defun push-untouchable-fn 20682,920833
(defun remove-untouchable-fn 20737,922914
(defun def-body-lemmas 20792,925098
(defmacro show-bodies 20800,925408
(defun set-body-fn1 20850,927510
(defun set-body-fn 20860,927876
(defdoc trace20906,929535
(defparameter *trace-evisc-tuple*20933,930647
(defparameter *trace-evisc-tuple-world*20936,930689
(defun trace-evisc-tuple 20939,930737
(defun trace-multiplicity 20948,931006
(defun first-trace-printing-column 20957,931237
(defun trace-ppr 20967,931516
(defvar *inside-trace$* 20976,931771
(defun custom-trace-ppr 20979,931818
(defun *1*defp 21038,934445
(defun trace$-er-msg 21043,934591
(defun decls-and-doc 21047,934687
(defun trace$-when-gcond 21057,934963
(defun stobj-evisceration-alist 21062,935052
(defun trace-evisceration-alist 21070,935447
(defun set-trace-evisc-tuple 21074,935605
(defun chk-trace-options-aux 21148,938483
(defun trace$-value-msgp 21175,939665
(defun chk-trace-options 21187,940081
(defun get-def 21276,943963
(defun untrace$-fn1 21303,944931
(defun untrace$-rec 21339,946357
(defun untrace$-fn 21358,947007
(defun maybe-untrace$-fn 21369,947398
(defmacro maybe-untrace$ 21378,947702
(defmacro maybe-untrace 21382,947785
(defun maybe-untrace! 21392,948051
(defun increment-trace-level 21417,948798
(defun trace$-def 21423,948979
(defun trace$-install 21550,954788
(defun oneified-def 21576,955869
(defun trace$-fn-general 21592,956488
(defun trace$-fn-simple 21773,965274
(defconst *trace-keywords*21776,965373
(defconst *trace-keywords-needing-ttag*21785,965621
(defun all-keywords-p 21792,965844
(defun first-assoc-keyword 21798,966004
(defconst *illegal-trace-spec-fmt-string*21806,966283
(defun trace$-fn 21811,966511
(defun trace$-lst 21845,968303
(defmacro trace$ 21856,968648
(defmacro with-ubt! 22316,989755
(defmacro trace! 22335,990527
(defmacro untrace$ 22576,998023
(defun open-trace-file-fn 22600,998741
(defmacro open-trace-file 22626,999841
(defun close-trace-file-fn 22647,1000466
(defmacro close-trace-file 22660,1000968
(defmacro break-on-error 22676,1001437
(defun defexec-extract-key 22771,1005719
(defun parse-defexec-dcls-1 22793,1006763
(defun fix-exec-xargs 22916,1012204
(defun parse-defexec-dcls 22945,1013453
(defmacro defexec 23017,1017053
(defrec sar 23272,1028386
(defun applicable-rewrite-rules1 23287,1029230
(defun pc-relieve-hyp 23341,1032118
(defun pc-relieve-hyps1 23423,1035601
(defun pc-relieve-hyps 23465,1037650
(defun remove-trivial-lits 23478,1038249
(defun unrelieved-hyps 23499,1039222
(defun untranslate-subst-abb 23523,1040238
(defun show-rewrite 23530,1040506
(defun show-rewrites 23615,1044699
(defun expand-assumptions-1 23677,1048003
(defun expand-assumptions 23692,1048648
(defun hyps-type-alist 23702,1048879
(defun show-rewrites-fn 23715,1049484
(defun show-meta-lemmas1 23774,1052415
(defun show-meta-lemmas 23834,1055610
(defun pl2-fn 23844,1056011
(defun pl-fn 23851,1056332
(defmacro pl 23872,1057389
(defmacro pl2 23911,1059263
(defun acl2-defaults-table-local-ctx-p 23990,1063397
(defun add-include-book-dir-fn 23997,1063660
(defun delete-include-book-dir-fn 24076,1067391
(defconst *hint-keywords*24131,1069905
(defun add-custom-keyword-hint-fn 24153,1070422
(defmacro set-tainted-okp 24238,1074192
(defmacro set-tainted-ok 24300,1077378
(defmacro reset-prehistory 24316,1077985
(defmacro reset-prehistory 24321,1078076
(defun checkpoint-world 24377,1080445
(defvar *checkpoint-world-len-and-alist-stack*24384,1080551
(defmacro checkpoint-world-len-and-alist 24387,1080606
(defun checkpoint-world1 24390,1080701
(defun checkpoint-world 24416,1081808
(defun reset-kill-ring 24428,1082087
(defun reset-prehistory-fn 24467,1083727
(defun memoize-table-chk-commutative 24529,1086554
(defun memoize-table-chk 24580,1089005
(defun remove-stobjs-in-by-position 24725,1095238
(defun print-gv1 24736,1095719
(defun print-gv-fn 24755,1096459
(defmacro print-gv 24783,1097559
(defun disable-iprint-ar 24879,1101041
(defun enable-iprint-ar 24902,1102191
(defconst *iprint-actions*24920,1102980
(defun set-iprint-fn 24923,1103047
(defun set-iprint-hard-bound 24963,1104677
(defun set-iprint-soft-bound 24976,1105148
(defmacro set-iprint 24989,1105619
(defconst *evisc-tuple-sites*25219,1115676
(defun set-site-evisc-tuple 25222,1115738
(defun chk-evisc-tuple 25249,1117037
(defun set-evisc-tuple-lst 25258,1117362
(defun set-evisc-tuple-fn1 25269,1117810
(defun iprint-virginp 25312,1119767
(defun set-evisc-tuple-fn 25319,1120032
(defmacro set-evisc-tuple 25358,1121634
(defmacro top-level 25460,1126596
(defun translate-defattach-helpers 26019,1156745
(defconst *defattach-keys*26078,1159211
(defun defattach-unknown-constraints-error 26084,1159348
(defun intersection-domains 26096,1159891
(defun process-defattach-args1 26106,1160212
(defun duplicate-keysp-eq 26363,1173723
(defun split-at-first-keyword 26373,1174025
(defun filter-for-attachment 26388,1174525
(defun process-defattach-args 26410,1175660
(defun prove-defattach-guards1 26484,1179482
(defun prove-defattach-guards 26546,1182408
(defun defattach-constraint-rec 26575,1183662
(defun defattach-constraint 26644,1186811
(defun prove-defattach-constraint 26654,1187279
(defun attachment-component-owner 26898,1200003
(defun intersection1-eq 26927,1201477
(defun defattach-component-has-owner 26934,1201711
(defun defattach-merge-into-component 26950,1202503
(defun defattach-merge-components 27066,1206469
(defun defattach-merge 27108,1208385
(defun defattach-merge-lst 27132,1209352
(defun defattach-merge-lst-lst 27150,1210115
(defun defattach-loop-error-msg 27176,1211405
(defun defattach-loop-error 27185,1211721
(defun defattach-close 27192,1212004
(defun defattach-erase-components 27201,1212338
(defun defattach-erase-p 27232,1213959
(defun defattach-erase1 27250,1214791
(defun defattach-erase 27285,1216291
(defun collect-ext-anc 27305,1217308
(defun extend-attachment-components 27316,1217693
(defun component-path-extension 27356,1219742
(defun extend-attachment-record 27373,1220574
(defun update-attachment-records1 27410,1222249
(defun update-attachment-records 27440,1223719
(defun attachment-records 27477,1225631
(defun chk-defattach-loop 27493,1226242
(defun chk-acceptable-defattach 27528,1227831
(defun attachment-cltl-cmd 27608,1231749
(defun defattach-fn 27622,1232313

ld.lisp,12517
(defun default-print-prompt 33,1356
(defun print-prompt 141,6239
(defun initialize-timers 172,7472
(defun maybe-add-command-landmark 179,7675
(defun replace-last-cdr 236,10239
(defun chk-acceptable-ld-fn1-pair 241,10399
(defun close-channels 397,17296
(defun chk-acceptable-ld-fn1 432,18888
(defun chk-acceptable-ld-fn 537,24683
(defun f-put-ld-specials 576,26514
(defun f-get-ld-specials 634,28925
(defun ld-read-keyword-command1 674,30543
(defun exit-ld 693,31267
(defun macro-minimal-arity1 702,31582
(defun macro-minimal-arity 709,31785
(defun ld-read-keyword-command 715,32040
(defun ld-read-command 787,35005
(deflabel acl2-customization823,36846
(deflabel keyword-commands899,40944
(defun ld-print-command 954,43417
(defun ld-filter-command 976,43998
(defun-one-output ppr? 1000,45248
(defun ld-print-results 1013,45621
(defun ld-print-prompt 1126,50455
(defun good-bye-fn 1142,51042
(defmacro good-bye 1148,51170
(defun ld-return-error 1185,52388
(defun ld-read-eval-print 1193,52644
(defun ld-loop 1325,58729
(defvar *first-entry-to-ld-fn-body-flg*)1351,59870
(defun update-cbd 1353,59912
(defun ld-fn-body 1362,60309
(defun ld-fn1 1432,63480
(defun ld-fn-alist 1474,65568
(defmacro with-interrupts 1506,67070
(defun ld-fn0 1520,67577
(defun ld-fn 1705,77632
(defmacro ld 1757,79559
(defmacro quick-test 2056,96048
(defun wormhole-prompt 2080,96932
(defun reset-ld-specials-fn 2092,97434
(defmacro reset-ld-specials 2105,97974
(defun maybe-reset-defaults-table12134,99297
(defun maybe-reset-defaults-table22173,100972
(defun maybe-reset-defaults-table 2182,101318
(defun delete-something 2187,101620
(defun store-in-kill-ring 2197,101947
(defun rotate-kill-ring1 2217,102963
(defun rotate-kill-ring 2222,103130
(defun ubt-ubu-fn1 2234,103676
(defun ubt-ubu-fn 2288,105766
(defun ubt!-ubu!-fn 2340,108164
(defmacro ubt-prehistory 2357,108621
(defun ubt-prehistory-fn 2370,109070
(defun oops-warning 2406,110665
(defun oops-fn 2420,111235
(defmacro oops 2447,112546
(defmacro i-am-here 2544,116979
(defun rebuild-fn-read-filter 2578,118057
(defun rebuild-fn 2610,119527
(defmacro rebuild 2635,120320
(defconst *basic-sweep-error-str*2841,130932
(defun sweep-symbol-binding-for-bad-symbol 2848,131306
(defun sweep-global-lst 2870,132323
(defun sweep-stack-entry-for-bad-symbol 2879,132643
(defun sweep-t-stack 2902,133700
(defun sweep-acl2-oracle 2910,134014
(defun sweep-global-state-for-lisp-objects 2925,134548
(deflabel compilation2971,136242
(defdoc book-compiled-file3017,138327
(deflabel escape-to-common-lisp3109,144009
(deflabel copyright3124,144441
(deflabel acknowledgments3159,145798
(deflabel breaks3305,153026
(deflabel saving-and-restoring3350,155166
(deflabel ordinals3363,155728
(defmacro wet 3504,162654
(deflabel release-notes3683,170964
(deflabel note13695,171284
(deflabel note23716,171913
(deflabel note33750,173540
(deflabel note43852,179378
(deflabel note54013,186418
(deflabel note64260,198734
(deflabel note74385,204107
(deflabel note84584,212842
(deflabel note8-update4931,228638
(deflabel note94991,230857
(deflabel note-2-05072,233914
(deflabel note-2-15105,235138
(deflabel note-2-25123,235520
(deflabel note-2-35185,238413
(deflabel note-2-45245,240716
(deflabel note-2-55291,242272
(deflabel |NOTE-2-5(5621,258683
(deflabel note-2-65637,258980
(deflabel note-2-6-new-functionality5656,259637
(deflabel note-2-6-proofs5839,268684
(deflabel note-2-6-rules5951,274399
(deflabel note-2-6-guards6022,277761
(deflabel note-2-6-proof-checker6090,280799
(deflabel note-2-6-system6116,281708
(deflabel note-2-6-other6163,283881
(deflabel |NOTE-2-6(6283,289438
(deflabel note-2-76299,289765
(deflabel note-2-7-bug-fixes6386,293304
(deflabel note-2-7-new-functionality6673,307768
(deflabel note-2-7-proofs6829,315722
(deflabel note-2-7-rules6931,321198
(deflabel note-2-7-guards6952,322118
(deflabel note-2-7-proof-checker6982,322938
(deflabel note-2-7-system6993,323221
(deflabel note-2-7-other7063,326302
(deflabel |NOTE-2-7(7236,334607
(deflabel note-2-87261,335371
(deflabel note-2-8-bug-fixes7424,342368
(deflabel note-2-8-new-functionality7878,363306
(deflabel note-2-8-proofs8024,371457
(deflabel note-2-8-rules8101,375706
(deflabel note-2-8-guards8142,377467
(deflabel note-2-8-proof-checker8153,377689
(deflabel note-2-8-system8186,379355
(deflabel note-2-8-ordinals8215,380639
(deflabel note-2-8-other8223,380787
(deflabel |NOTE-2-8(8299,383939
(deflabel note-2-98316,384412
(deflabel |NOTE-2-9(8904,410031
(deflabel note-2-9-18919,410358
(deflabel note-2-9-29133,419689
(deflabel note-2-9-39355,429429
(deflabel note-2-9-3-ppr-change9587,440003
(deflabel note-2-9-49865,448534
(deflabel note-2-9-510248,467868
(deflabel note-3-010603,484632
(deflabel |NOTE-3-0(10630,485650
(deflabel note-3-0-110645,485953
(deflabel |NOTE-3-0-1(10972,502672
(deflabel note-3-0-210987,502985
(deflabel note-3-111504,525365
(deflabel |NOTE-3-1(11519,525770
(deflabel note-3-211535,526078
(deflabel |NOTE-3-2(12204,555235
(deflabel note-3-2-112231,556132
(deflabel |NOTE-3-2-1(12510,569586
(deflabel note-3-312523,569784
(deflabel |NOTE-3-3(13025,592897
(deflabel note-3-413038,593086
(deflabel |NOTE-3-4(13795,629052
(deflabel note-3-513815,629625
(deflabel |NOTE-3-5(14783,675172
(deflabel note-3-614861,678142
(deflabel |NOTE-3-6(15317,697582
(deflabel note-3-6-115330,697774
(deflabel note-4-015379,699689
(deflabel |NOTE-4-0(16420,747612
(deflabel note-4-0-wormhole-changes16433,747797
(deflabel note-4-116500,750324
(deflabel |NOTE-4-1(16660,757492
(deflabel note-4-216673,757682
(deflabel |NOTE-4-2(16744,760521
(deflabel the-method16757,760705
(deflabel lp16854,765804
(defun-one-output compiled-function-p! 16922,769396
(defun compile-function 16934,769852
(defun getpid$ 16998,772258
(defun-one-output tmp-filename 17022,773084
(defun keep-tmp-files 17048,774117
(defun comp-fn 17051,774188
(defmacro comp 17166,778478
(defmacro comp 17171,778549
(defmacro comp-gcl 17278,784006
(defun scan-past-deeper-event-landmarks 17297,784734
(defun puffable-encapsulate-p 17317,785490
(defun puffable-command-blockp 17328,785904
(defun puffable-command-numberp 17362,787338
(defun puff-command-block 17377,787878
(defun commands-back-to 17514,794534
(defun puffed-command-sequence 17529,795085
(defun puff-fn1 17552,795967
(defun puff-report 17626,799810
(defun puff-fn 17639,800402
(defun puff*-fn11 17643,800533
(defun puff*-fn1 17664,801283
(defun puff*-fn 17692,802611
(defmacro puff 17760,805671
(defmacro puff* 17893,813428
(defmacro mini-proveall 17971,816493
(defmacro exit 18207,823649
(defmacro quit 18218,823843
(defmacro set-guard-checking 18229,824037
(defun debugger-enable 18505,836117
(defun break$ 18510,836308
(defun print-call-history 18542,837432
(defun debugger-enabledp 18579,838835
(defun maybe-print-call-history 18586,839111
(defmacro set-debugger-enable 18591,839284
(defun set-debugger-enable-fn 18724,845116
(defun dmr-stop-fn 18734,845538
(defmacro dmr-stop 18740,845682
(defun dmr-start-fn 18744,845796
(defmacro dmr-start 18753,846059
(defconst *home-page*18757,846176
(defconst *home-page-references*19170,860208
(deflabel |Pages 19183,860739
(deflabel |Undocumented 19206,861889
(deflabel |Common 19212,862061
(deflabel |An 19262,864097
(deflabel |The 19300,865465
(deflabel |A 19343,867480
(deflabel |About 19386,869457
(deflabel |A 19416,870629
(deflabel |What 19443,871677
(deflabel |About 19470,872550
(deflabel |Models 19497,873334
(deflabel |The 19522,873936
(deflabel |Corroborating 19544,874652
(deflabel |Models 19589,876685
(deflabel |A 19627,877683
(deflabel |Functions 19654,878569
(deflabel |Common 19687,879684
(deflabel |Analyzing 19724,881213
(deflabel |What 19764,882627
(deflabel |A 19789,883444
(deflabel |What 19798,883658
(deflabel |What 19820,884466
(deflabel |ACL2 19834,884896
(deflabel |ACL2 19847,885366
(deflabel |ACL2 19878,886719
(deflabel |Modeling 19903,887840
(deflabel |Running 19929,888636
(deflabel |Symbolic 19961,889726
(deflabel |Proving 19986,890348
(deflabel |What 20023,891649
(deflabel |How 20054,892589
(deflabel |Other 20076,893517
(deflabel |The 20104,894177
(deflabel |An 20121,894525
(deflabel |How 20172,896747
(deflabel |How 20202,897913
(deflabel |The 20235,899218
(deflabel |A 20280,900641
(deflabel |Revisiting 20299,901309
(deflabel |Evaluating 20340,902736
(deflabel |Conversion|20382,903714
(deflabel |The 20417,905162
(deflabel |The 20459,906558
(deflabel |Free 20491,907845
(deflabel |The 20535,909564
(deflabel |Name 20592,912470
(deflabel |Perhaps|20601,912735
(deflabel |Suggested 20610,912970
(deflabel |Subsumption 20633,913641
(deflabel |Flawed 20656,914355
(deflabel |The 20679,915013
(deflabel |The 20700,915755
(deflabel |The 20729,916573
(deflabel |The 20750,917105
(deflabel |The 20761,917455
(deflabel |Nontautological 20774,917917
(deflabel |Overview 20785,918363
(deflabel |On 20816,919510
(deflabel |Overview 20828,919972
(deflabel |The 20841,920574
(deflabel |The 20860,921194
(deflabel |The 20880,921844
(deflabel |Overview 20901,922448
(deflabel |The 20912,922985
(deflabel |The 20930,923572
(deflabel |The 20956,924636
(deflabel |The 20977,925327
(deflabel |The 20996,925958
(deflabel |The 21018,926788
(deflabel |The 21040,927563
(deflabel |The 21062,928309
(deflabel |The 21084,929028
(deflabel |The 21106,929841
(deflabel |The 21130,930715
(deflabel |The 21150,931417
(deflabel |The 21169,932050
(deflabel |Overview 21189,932590
(deflabel |Overview 21217,933431
(deflabel |Overview 21226,933824
(deflabel |The 21236,934189
(deflabel |The 21254,934793
(deflabel |The 21271,935332
(deflabel |The 21287,935788
(deflabel |The 21306,936329
(deflabel |Popping 21336,937213
(deflabel |The 21346,937593
(deflabel |The 21355,937876
(deflabel |The 21370,938619
(deflabel |Guiding 21386,939310
(deflabel |Rewrite 21413,940293
(deflabel |You 21447,941253
(deflabel |Using 21477,942261
(deflabel |Overview 21497,942897
(deflabel |The 21548,944572
(deflabel |The 21569,945457
(deflabel |A 21588,946161
(deflabel |The 21622,947400
(deflabel |The 21634,947776
(deflabel |ACL2 21667,948868
(deflabel |Hey 21694,949994
(deflabel |Guards|21719,950944
(deflabel |About 21756,952681
(deflabel |The 21824,956407
(deflabel |About 21869,958581
(deflabel |About 21900,960228
(deflabel |Numbers 21945,962596
(deflabel |ACL2 22000,964897
(deflabel |ACL2 22019,965722
(deflabel |ACL2 22037,966570
(deflabel |ACL2 22082,969244
(deflabel |Guessing 22115,970755
(defconst *meta-level-function-problem-1*22160,972725
(defconst *meta-level-function-problem-1a*22164,972924
(defconst *meta-level-function-problem-1b*22168,973134
(defconst *meta-level-function-problem-1c*22173,973361
(defconst *meta-level-function-problem-1d*22179,973690
(defconst *meta-level-function-problem-1e*22186,974051
(defconst *meta-level-function-problem-2*22192,974369
(defconst *meta-level-function-problem-3*22199,974723
(defstub mfc-ts 22220,975997
(defun congruence-rule-listp 22222,976034
(defun term-alistp-failure-msg 22235,976498
(defstub mfc-rw 22253,977252
(defstub mfc-rw+ 22266,977800
(defstub mfc-relieve-hyp 22269,977911
(defun find-runed-linear-lemma 22272,977982
(defstub mfc-ap 22284,978378
(defun-one-output mfc-ts-raw 22291,978475
(defun-one-output mfc-rw-raw 22374,981904
(defun-one-output mfc-relieve-hyp-raw 22453,985936
(defun-one-output mfc-ap-raw 22556,991180
(defun all-vars-untrans 22687,998728
(defmacro av 22698,999093
(defun trans-eval-lst 22702,999154
(defun print-saved-output 22708,999370
(defmacro pso 22752,1001298
(defmacro psog 22767,1001773
(defmacro pso! 22781,1002158
(defmacro set-saved-output 22796,1002643
(defmacro set-raw-proof-format 22902,1008456
(defmacro set-print-clause-ids 22929,1009523
(defun set-gag-mode-fn 22955,1010557
(defmacro set-gag-mode 22986,1011689
(defparameter *initial-cbd* 23091,1016946
(defun save-exec 23093,1016980
(defmacro defun-for-state 23186,1020755
(defun set-ld-evisc-tuple 23198,1021162
(defun-for-state set-ld-evisc-tuple 23203,1021289
(defun set-abbrev-evisc-tuple 23205,1021339
(defun-for-state set-abbrev-evisc-tuple 23210,1021474
(defun set-term-evisc-tuple 23212,1021528
(defun-for-state set-term-evisc-tuple 23217,1021659
(defun without-evisc-fn 23219,1021711
(defmacro without-evisc 23229,1022052

proof-checker-b.lisp,9596
(defmacro install-new-pc-meta-or-macro 29,1205
(defun define-pc-meta-or-macro-fn 33,1408
(defmacro define-pc-meta 47,1877
(defmacro define-pc-macro 62,2447
(defmacro define-pc-atomic-macro 101,4045
(defmacro toggle-pc-macro 104,4177
(defmacro define-pc-primitive 132,5187
(define-pc-primitive comment 150,6147
(defun non-bounded-nums 169,6562
(defun delete-by-position 182,7029
(define-pc-primitive drop 192,7413
(define-pc-meta lisp 232,8805
(define-pc-macro fail 296,11334
(define-pc-macro illegal 318,11924
(defun chk-assumption-free-ttree-1 340,12602
(defun put-cdr-assoc-query-id 354,13096
(defun set-query-val 360,13350
(defmacro query-on-exit 373,13761
(defun replay-query 376,13859
(define-pc-meta exit 389,14581
(define-pc-meta undo 553,23136
(define-pc-meta restore 607,25112
(defun print-commands 638,26217
(defun make-pretty-start-instr 653,26815
(defun raw-indexed-instrs 663,27173
(define-pc-macro sequence-no-restore 680,28158
(define-pc-macro skip 683,28262
(defmacro define-pc-help 696,28508
(defun evisc-indexed-instrs-1 731,29851
(defun evisc-indexed-instrs-rec 743,30394
(defun mark-unfinished-instrs 763,31368
(defun evisc-indexed-instrs 779,32165
(define-pc-help commands 785,32433
(define-pc-macro comm 827,34070
(defun promote-guts 883,36386
(define-pc-primitive promote 895,36762
(defun remove-by-indices 934,38461
(define-pc-macro print 946,39027
(defun bounded-integer-listp 978,40268
(defun fetch-term-and-cl 991,40683
(defun fetch-term 1033,42824
(defun governors 1043,43151
(defun term-id-iff 1051,43443
(defmacro ? 1099,45720
(defstub ?-fn 1102,45752
(defun abbreviations-alist 1109,45962
(defun chk-?s 1118,46225
(defun chk-?s-lst 1139,47103
(defun remove-?s 1147,47292
(defun translate-abb 1152,47479
(defmacro trans0 1165,47810
(defun p-body 1168,47923
(define-pc-help p 1176,48275
(define-pc-help pp 1199,48971
(defun take-by-indices 1218,49493
(defun print-hyps 1227,49862
(defun some-> 1240,50489
(defun print-hyps-top 1249,50736
(defun print-governors-top 1258,51101
(defun pair-indices 1267,51460
(define-pc-macro hyps 1283,52128
(define-pc-primitive demote 1401,57506
(defun pair-keywords 1457,59809
(defun null-pool 1472,60446
(defun initial-pspv 1479,60613
(defun pc-prove 1486,60888
(defun sublis-equal 1508,61866
(defun abbreviations-alist-? 1518,62150
(defun find-?-fn 1528,62553
(defun unproved-pc-prove-terms 1538,62861
(defun prover-call 1541,62949
(defun make-new-goals 1614,67254
(defun same-goal 1626,67766
(defun remove-byes-from-tag-tree 1632,67962
(define-pc-primitive prove 1648,68600
(defun add-string-val-pair-to-string-val-alist 1711,71399
(defconst *bash-skip-forcing-round-hints*1729,72200
(define-pc-atomic-macro bash 1747,72710
(define-pc-primitive dive 1799,74762
(define-pc-atomic-macro split 1860,77191
(define-pc-primitive add-abbreviation 1902,78917
(defun not-in-domain-eq 1968,81940
(define-pc-primitive remove-abbreviations 1978,82264
(defun print-abbreviations 2020,83995
(define-pc-help show-abbreviations 2064,85679
(defun drop-from-end 2099,87032
(define-pc-primitive up 2106,87272
(define-pc-atomic-macro top 2146,89031
(defmacro expand-address-recurse2166,89747
(defmacro dive-once-more-error 2181,90298
(defun abbreviation-raw-term-p 2188,90571
(defmacro addr-recur 2192,90649
(defun or-addr 2207,91170
(defun and-addr 2257,93044
(defmacro add-dive-into-macro 2315,95497
(defmacro remove-dive-into-macro 2330,95968
(defun dive-into-macros-table 2346,96532
(defun expand-address 2390,98352
(defmacro dv-error 2750,116210
(define-pc-atomic-macro dv 2760,116554
(defun deposit-term 2857,119797
(defun deposit-term-lst 2867,120150
(defun geneqv-at-subterm 2885,120865
(defun geneqv-at-subterm-top 2904,121636
(defun subst-expr1-okp 2915,121956
(defun subst-expr1-ok-listp 2924,122324
(defun maybe-truncate-current-address 2951,123420
(defun deposit-term-in-goal 2979,124649
(defun split-implies 2998,125412
(defun equiv-refinementp 3011,125875
(defun find-equivalence-hyp-term 3015,126016
(defun flatten-ands-in-lit-lst 3036,126904
(define-pc-primitive equiv 3042,127056
(define-pc-primitive casesplit3154,132457
(define-pc-macro top? 3251,136922
(define-pc-macro contrapose-last 3257,137033
(define-pc-macro drop-last 3265,137306
(define-pc-macro drop-conc 3273,137561
(define-pc-atomic-macro claim 3276,137647
(define-pc-atomic-macro induct 3343,140631
(defun print-on-separate-lines 3382,142094
(define-pc-help goals 3392,142507
(defun modified-error-triple-for-sequence 3411,143060
(define-pc-meta sequence3448,144914
(define-pc-macro negate 3573,151537
(define-pc-macro succeed 3595,152196
(define-pc-macro do-all 3617,152818
(define-pc-macro do-strict 3644,153762
(define-pc-macro do-all-no-prompt 3662,154299
(define-pc-macro th 3680,154869
(define-pc-macro protect 3712,156104
(defun extract-goal 3731,156706
(define-pc-primitive change-goal 3741,157086
(define-pc-macro cg 3794,159335
(defun change-by-position 3810,159744
(define-pc-primitive contrapose 3820,160108
(define-pc-macro contradict 3860,161902
(define-pc-atomic-macro pro 3869,162077
(define-pc-atomic-macro nx 3884,162452
(define-pc-atomic-macro bk 3909,163305
(define-pc-help p-top 3940,164396
(define-pc-macro repeat 3978,165964
(define-pc-macro repeat-rec 3996,166438
(defmacro define-pc-bind 4004,166598
(define-pc-bind quiet4019,167245
(define-pc-bind noise 4037,167653
(defun find-equivalence-hyp-term-no-target 4056,168297
(define-pc-atomic-macro if-not-proved 4082,169561
(define-pc-atomic-macro = =4101,170250
(define-pc-macro set-success 4303,180285
(define-pc-macro orelse 4306,180374
(defun applicable-rewrite-rules 4326,180969
(define-pc-help show-rewrites 4345,181934
(defun translate-subst-abb1 4382,183684
(defun single-valued-symbolp-alistp 4405,184818
(defun check-cars-are-variables 4412,185040
(defun translate-subst-abb 4431,185818
(defun make-rewrite-instr 4462,187102
(define-pc-primitive rewrite 4469,187366
(defun pc-help-fn 4712,200500
(defmacro state-only 4758,202699
(define-pc-help help 4764,202833
(defun pc-help!-fn 4829,205510
(define-pc-help help! 4871,207429
(define-pc-macro help-long 4885,207931
(define-pc-help more 4896,208199
(define-pc-help more! 4908,208456
(defun pc-rewrite*4919,208768
(defun make-goals-from-assumptions 4962,211026
(defun make-new-goals-from-assumptions 4975,211602
(defconst *default-s-repeat-limit* 4985,211923
(define-pc-primitive s 4987,211963
(defun build-pc-enabled-structure-from-ens 5222,223641
(define-pc-primitive in-theory 5249,224900
(define-pc-atomic-macro s-prop 5341,229048
(define-pc-atomic-macro x 5364,229807
(defun remove-trivial-lits-raw 5423,232130
(define-pc-primitive expand 5444,233243
(define-pc-atomic-macro x-dumb 5541,236936
(define-pc-macro bookmark 5556,237348
(defun change-last 5577,238074
(defun assign-event-name-and-rule-classes 5585,238251
(define-pc-macro save 5601,239099
(defmacro retrieve 5655,241425
(define-pc-macro retrieve 5673,241829
(defun unsave-fn 5699,242854
(defmacro unsave 5703,242962
(define-pc-help unsave 5721,243334
(defun retrieve-fn 5755,244724
(defun print-all-goals 5799,246652
(define-pc-help print-all-goals 5805,246812
(defmacro print-conc 5817,247111
(defun print-all-concs 5829,247593
(define-pc-help print-all-concs 5836,247799
(defun gen-var-marker 5849,248136
(defun translate-generalize-alist-1 5854,248225
(defun non-gen-var-markers 5909,250310
(defun find-duplicate-generalize-entries 5918,250598
(defun translate-generalize-alist-2 5927,250911
(defun translate-generalize-alist 5938,251378
(defun all-vars-goals 5956,252301
(defun pc-state-vars 5963,252556
(define-pc-primitive generalize 5967,252741
(define-pc-atomic-macro use 6034,255595
(define-pc-atomic-macro clause-processor 6062,256546
(define-pc-macro cl-proc 6092,257476
(defun fromto 6101,257729
(define-pc-atomic-macro retain 6107,257868
(define-pc-atomic-macro reduce 6141,258998
(define-pc-macro run-instr-on-goal 6185,260646
(defun run-instr-on-goals-guts 6196,260902
(define-pc-macro run-instr-on-new-goals 6203,261151
(define-pc-macro then 6216,261615
(defun print-help-separator 6240,262437
(defun print-pc-help-rec 6245,262569
(defun print-all-pc-help-fn 6257,262874
(defmacro print-all-pc-help 6273,263558
(define-pc-macro nil 6276,263670
(define-pc-atomic-macro free 6304,264705
(define-pc-macro replay 6327,265373
(defun instr-name 6371,267298
(defun pc-free-instr-p 6377,267434
(defun find-possible-put 6382,267603
(define-pc-macro put 6394,268089
(define-pc-macro reduce-by-induction 6436,269903
(define-pc-macro sr 6478,271500
(define-pc-macro r 6493,271774
(define-pc-atomic-macro sl 6505,271982
(define-pc-atomic-macro elim 6537,273253
(define-pc-macro ex 6556,273897
(define-pc-help type-alist 6571,274216
(define-pc-help print-main 6653,277827
(define-pc-macro pso 6665,278065
(define-pc-macro psog 6685,278774
(define-pc-macro pso! 6706,279511
(define-pc-macro acl2-wrap 6727,280260
(defmacro acl2-wrap 6743,280623
(define-pc-macro check-proved-goal 6750,280773
(define-pc-macro check-proved 6762,281119
(define-pc-atomic-macro forwardchain 6769,281307
(define-pc-atomic-macro bdd 6853,284506
(define-pc-macro runes 6877,285332
(define-pc-macro lemmas-used 6898,286142
(defun goal-terms 6906,286313
(defun wrap1-aux1 6917,286614
(defun wrap1-aux2 6938,287512
(define-pc-primitive wrap1 6953,288113
(define-pc-atomic-macro wrap 7032,291427
(define-pc-atomic-macro wrap-induct 7078,293384

tutorial.lisp,4134
(deflabel ACL2-Tutorial51,1888
(deflabel alternative-introduction108,4465
(deflabel annotated-acl2-scripts740,34423
(deflabel Emacs800,36871
(deflabel ACL2-As-Standalone-Program814,37359
(deflabel acl2-sedan919,40296
(deflabel solution-to-simple-example941,41360
(deflabel Tutorial1-Towers-of-Hanoi997,43359
(deflabel Tutorial2-Eights-Problem1255,52594
(deflabel Tutorial3-Phonebook-Example1384,56775
(deflabel Tutorial4-Defun-Sk-Example2212,89035
(deflabel Tutorial5-Miscellaneous-Examples2313,92967
(deflabel file-reading-example2323,93247
(deflabel guard-example2377,95441
(deflabel mutual-recursion-proof-example2687,104612
(deflabel functional-instantiation-example2815,109601
(deflabel Startup2960,114494
(deflabel Tidbits3045,117405
(deflabel Tips3129,120972
(deflabel introduction-to-the-theorem-prover3592,142713
(deflabel dealing-with-key-combinations-of-function-symbols3925,159811
(deflabel post-induction-key-checkpoints4107,167700
(deflabel generalizing-key-checkpoints4156,169977
(deflabel strong-rewrite-rules4251,173936
(deflabel practice-formulating-strong-rules4345,177949
(deflabel practice-formulating-strong-rules-14409,179760
(deflabel practice-formulating-strong-rules-24506,184087
(deflabel practice-formulating-strong-rules-34562,186122
(deflabel practice-formulating-strong-rules-44689,191019
(deflabel practice-formulating-strong-rules-54729,192276
(deflabel practice-formulating-strong-rules-64791,194727
(deflabel introduction-to-key-checkpoints4899,198694
(deflabel programming-knowledge-taken-for-granted5059,208126
(deflabel example-induction-scheme-nat-recursion5350,222182
(deflabel example-induction-scheme-down-by-25403,223821
(deflabel example-induction-scheme-on-lists5461,225506
(deflabel example-induction-scheme-binary-trees5508,226867
(deflabel example-induction-scheme-on-several-variables5550,227906
(deflabel example-induction-scheme-upwards5596,228909
(deflabel example-induction-scheme-with-accumulators5647,230435
(deflabel example-induction-scheme-with-multiple-induction-steps5730,233294
(deflabel example-inductions5794,235056
(deflabel logic-knowledge-taken-for-granted-inductive-proof5853,237890
(deflabel logic-knowledge-taken-for-granted-base-case6003,245588
(deflabel logic-knowledge-taken-for-granted-q1-answer6030,246437
(deflabel logic-knowledge-taken-for-granted-q2-answer6116,250470
(deflabel logic-knowledge-taken-for-granted-q3-answer6260,255124
(deflabel logic-knowledge-taken-for-granted-instance6301,256339
(deflabel logic-knowledge-taken-for-granted-propositional-calculus6341,257688
(deflabel logic-knowledge-taken-for-granted-rewriting6589,267043
(deflabel logic-knowledge-taken-for-granted-rewriting-repeatedly6828,277119
(deflabel logic-knowledge-taken-for-granted-equals-for-equals6922,280570
(deflabel logic-knowledge-taken-for-granted-evaluation6973,282481
(deflabel logic-knowledge-taken-for-granted7011,283867
(deflabel special-cases-for-rewrite-rules7228,292490
(deflabel equivalent-formulas-different-rewrite-rules7282,294850
(deflabel introduction-to-rewrite-rules-part-27355,297799
(deflabel specific-kinds-of-formulas-as-rewrite-rules7594,312116
(deflabel further-information-on-rewriting7681,316445
(deflabel introduction-to-rewrite-rules-part-17798,323156
(deflabel introduction-to-the-database7977,332184
(deflabel introduction-to-hints8208,344109
(deflabel introduction-to-a-few-system-considerations8308,349287
(deflabel architecture-of-the-prover8491,358087
(deflabel frequently-asked-questions-by-newcomers8572,362144
(deflabel introductory-challenges9148,394496
(deflabel introductory-challenge-problem-19184,396048
(deflabel introductory-challenge-problem-1-answer9217,396860
(deflabel introductory-challenge-problem-29265,398200
(deflabel introductory-challenge-problem-2-answer9288,398773
(deflabel introductory-challenge-problem-39335,400095
(deflabel introductory-challenge-problem-3-answer9371,401023
(deflabel introductory-challenge-problem-49490,405031
(deflabel introductory-challenge-problem-4-answer9547,407308
(deflabel interesting-applications10129,429971

interface-raw.lisp,7972
(defmacro foo 204,10525
(defun bar 206,10577
(defun my-endp-0 270,12615
(defmacro bad-macro 273,12682
(defun my-eq 324,14622
(defmacro bad-macro 329,14730
(defun bad-fn 336,14848
(defthm bad-thm339,14881
(defthm very-bad350,15032
(defun mac-fn 384,16281
(defmacro mac 385,16337
(defun bar 386,16367
(defun bar 388,16423
(defun foo 400,16723
(defun foo 485,20593
(defun foo 488,20689
(defun foo 491,20804
(defun foo 495,20916
(defun foo 498,21003
(defun foo 501,21105
(defun foo 507,21312
(defun foo 511,21420
(defun <*1*fn> 516,21480
(defmacro defun-*1* 688,28069
(defmacro defun-override 691,28142
(defun-*1* mv-list 714,29287
(defun-*1* wormhole-eval 739,30534
(defun-*1* acl2-numberp 745,30716
(defun-*1* binary-* 748,30760
(defun-*1* binary-+ 756,30944
(defun-*1* unary-- 767,31218
(defun-*1* unary-/ 773,31327
(defun-*1* < 779,31456
(defun-*1* apply 804,32453
(defun-*1* bad-atom<=808,32575
(defun-*1* car 818,32901
(defun-*1* cdr 826,33004
(defun-*1* char-code 834,33107
(defun-*1* characterp 839,33201
(defun-*1* code-char 842,33246
(defun-*1* complex 849,33416
(defun-*1* complex-rationalp 853,33580
(defun-*1* complexp 859,33721
(defun-*1* coerce 862,33762
(defun-*1* cons 876,34092
(defun-*1* consp 879,34129
(defun-*1* denominator 882,34164
(defun-*1* equal 887,34263
(defun-*1* floor1 894,34445
(defun-*1* if 899,34530
(defun-*1* imagpart 904,34731
(defun-*1* integerp 909,34819
(defun-*1* intern-in-package-of-symbol 912,34860
(defun-*1* pkg-witness 920,35143
(defun-*1* numerator 930,35562
(defun-*1* rationalp 935,35655
(defun-*1* realp 941,35774
(defun-*1* realpart 944,35809
(defun-*1* stringp 949,35897
(defun-*1* symbol-name 952,35936
(defun-*1* symbol-package-name 957,36034
(defun-*1* symbolp 963,36201
(defun standardp 979,36842
(defun-*1* standardp 983,36892
(defun standard-part 987,36946
(defun-*1* standard-part 990,36976
(defun i-large-integer 993,37011
(defun-*1* i-large-integer 996,37105
(defun-one-output macroexpand1! 1001,37206
(defvar *acl2-gentemp-counter* 1007,37376
(defun-one-output acl2-gentemp 1008,37410
(defun-one-output oneify-flet-bindings 1020,37850
(defun-one-output oneify 1047,39174
(defun-one-output oneify-lst 1204,45263
(defun-one-output select-stobj 1212,45458
(defun-one-output super-defstobj-wart-stobjs-in 1217,45642
(defun-one-output oneify-fail-form 1225,45979
(defun-one-output get-declared-stobjs 1246,46703
(defun-one-output warn-for-guard-body 1260,47226
(defun-one-output create-live-user-stobjp-test 1272,47811
(defun oneify-cltl-code 1282,48129
(defvar *saved-raw-prompt* 1797,73368
(defvar *saved-raw-prompt-p* 1798,73400
(defun-one-output install-new-raw-prompt 1803,73453
(defun-one-output install-old-raw-prompt 1810,73723
(defun-one-output install-new-raw-prompt 1820,73990
(defun-one-output install-old-raw-prompt 1831,74478
(defun-one-output install-new-raw-prompt 1841,74752
(defun-one-output install-old-raw-prompt 1848,74983
(defun-one-output install-new-raw-prompt 1855,75113
(defun-one-output install-old-raw-prompt 1867,75665
(defun-one-output install-new-raw-prompt 1879,76035
(defun-one-output install-old-raw-prompt 1896,76877
(defun-one-output install-new-raw-prompt 1914,77502
(defun-one-output install-old-raw-prompt 1917,77554
(defvar *dmr-interval* 1930,77908
(defvar *dmr-indent-max* 1937,78181
(defvar *dmr-file-name*)1943,78465
(defun dmr-file-name 1945,78491
(defparameter *dmr-stream*1958,79089
(defparameter *dmr-counter*1961,79124
(defun dmr-stop-fn-raw 1969,79343
(defun dmr-start-fn-raw 1975,79472
(defvar *dmr-array*1985,79779
(defun reverse-into-array 1988,79863
(defparameter *dmr-reusable-string*1998,80161
(defvar *dmr-indent*)2010,80517
(defmacro dmr-increment-indent 2012,80540
(defun tilde-@-bkptr-string 2016,80627
(defvar *dmr-interp-state*2074,83462
(defun dmr-interp-fresh-rewrite-p 2079,83604
(defun dmr-prefix 2086,83817
(defun dmr-interp 2099,84273
(defvar *dmr-delete-string*2174,87013
(defun dmr-string 2180,87129
(defun dmr-flush 2256,90565
(defun dmr-display 2270,90987
(defun cw-gstack-short 2278,91181
(defun-one-output fmakunbound! 2433,99932
(defun-one-output maybe-push-undo-stack 2440,100201
(defun-one-output maybe-pop-undo-stack 2591,107686
(defun-one-output flush-undo-stack 2604,108027
(defparameter *current-acl2-world-key-ordering*2924,124198
(defun-one-output key-lesseqp 2948,124927
(defun-one-output merge-into-alist 2957,125203
(defun-one-output destructive-push-assoc 2969,125774
(defun-one-output destructive-pop-assoc 2986,126644
(defun-one-output remove-current-acl2-world-key 2992,126839
(defun hcomp-init 3788,171977
(defabbrev reclassifying-value-p 3848,174628
(defmacro make-reclassifying-value 3855,174781
(defmacro unmake-reclassifying-value 3861,174911
(defun hcomp-transfer-to-hash-tables 3867,175023
(defvar *saved-hcomp-restore-hts* 3911,176843
(defun hcomp-restore-defs 3913,176883
(defun missing-compiled-book 3958,178858
(defun load-compiled-book 4020,181839
(defun include-book-raw 4146,187440
(defun include-book-raw-top 4381,199851
(defmacro hcomp-ht-from-type 4413,201360
(defmacro hcomp-build-p 4422,201648
(defun install-for-add-trip-hcomp-build 4427,201835
(defun install-for-add-trip-include-book 4464,203397
(defun install-for-add-trip 4519,205966
(defun install-defs-for-add-trip 4535,206605
(defun hcomp-build-from-portcullis-raw 4604,209712
(defun hcomp-alists-from-hts 4679,213088
(defun-one-output add-trip 4724,214947
(defun-one-output undo-trip 5264,241400
(defun-one-output flush-trip 5304,243079
(defvar *bad-wrld*)5334,244266
(defun check-acl2-world-invariant 5336,244287
(defparameter *known-worlds* 5354,245085
(defun-one-output extend-world1 5356,245120
(defun-one-output retract-world1 5469,250134
(defun-one-output recover-world1 5576,254793
(defun-one-output recover-world 5591,255433
(defun-one-output virginp 5715,261718
(defun-one-output chk-virgin2 5726,262104
(defun-one-output chk-package-reincarnation-import-restrictions25793,265326
(defvar user::*acl2-keep-tmp-files* 5849,267119
(defun set-mswindows-drive 5852,267173
(defun-one-output enter-boot-strap-mode 5864,267554
(defun-one-output move-current-acl2-world-key-to-front 5962,272039
(defun chk-live-state-p 6002,274536
(defparameter *built-in-defun-overrides*6007,274689
(defun-one-output exit-boot-strap-mode 6034,275887
(defun-one-output ld-alist-raw 6059,276932
(defun enter-boot-strap-pass-2 6082,277754
(defconst *acl2-pass-2-files*6102,278470
(defun note-fns-in-form 6112,278778
(defun note-fns-in-file 6126,279233
(defun note-fns-in-files 6136,279510
(defun raw-source-name-p 6143,279801
(defun fns-different-wrt-acl2-loop-only 6149,280020
(defun check-built-in-constants 6180,281402
(defun-one-output check-none-ideal 6294,287164
(defun check-state-globals-initialized 6333,288716
(defun-one-output check-acl2-initialization 6350,289329
(defun initialize-acl2 6356,289538
(defun our-abort 6654,302798
(defun initial-customization-filename 6728,306054
(defun lp 6799,308941
(defmacro lp! 7004,318968
(defun convert-book-name-to-compiled-name 7010,319135
(defun acl2-compile-file 7019,319487
(defun-one-output delete-auxiliary-book-files 7060,321159
(defun delete-expansion-file 7093,322824
(defun compile-uncompiled-defuns 7101,323117
(defun compile-uncompiled-*1*-defuns 7267,330688
(defun compile-certified-file 7493,341289
(defun compile-for-include-book 7507,341889
(defun-one-output enabled-structurep 7572,345264
(defun-one-output rcnstp 7595,346251
(defvar *trace-alist*7611,346665
(defun-one-output assoc-eq-trace-alist 7614,346732
(defun-one-output stobj-print-symbol 7622,346957
(defun-one-output trace-hide-world-and-state 7635,347536
(defun-one-output saved-build-date-string 7690,349777
(defun-one-output get-stobjs-out-for-declare-form 7701,350073
(defun fix-trace-untrace 7719,350711
(defun fix-trace 7731,351151

defpkgs.lisp,121
(defun member-eq-t 51,2441
(defun filter-topics55,2512
(defconst *acl2-exports*165,6893
(defpkg "ACL2-USER"438,24669

hons-raw.lisp,3811
(defconstant *hl-mht-default-rehash-size* 98,4623
(defconstant *hl-mht-default-rehash-threshold* 99,4670
(defun hl-mht 101,4723
(defconstant hl-cache-table-size246,11850
(defconstant hl-cache-table-cutoff251,11937
(defstruct hl-cache255,12072
(defabbrev hl-machine-hash 269,12441
(defun hl-cache-set 293,13506
(defun hl-cache-get 318,14443
(defun hl-cache-clear 345,15198
(defparameter *hl-hspace-str-ht-default-size* 569,25392
(defparameter *hl-ctables-nil-ht-default-size* 570,25449
(defparameter *hl-ctables-cdr-ht-default-size* 571,25506
(defparameter *hl-ctables-cdr-ht-eql-default-size* 572,25565
(defparameter *hl-hspace-addr-ht-default-size* 573,25622
(defparameter *hl-hspace-sbits-default-size* 574,25681
(defparameter *hl-hspace-other-ht-default-size* 575,25742
(defparameter *hl-hspace-fal-ht-default-size* 576,25799
(defparameter *hl-hspace-persist-ht-default-size* 577,25856
(defstruct hl-ctables582,25929
(defstruct (hl-hspace 599,26495
(defun hl-hspace-init 647,27855
(defabbrev hl-flex-alist-too-long 728,31667
(defabbrev hl-flex-assoc 744,32269
(defabbrev hl-flex-acons 754,32565
(defabbrev hl-hspace-truly-static-honsp 793,34007
(defabbrev hl-hspace-find-alist-for-cdr 809,34557
(defabbrev hl-hspace-honsp 828,35248
(defun hl-hspace-hons-equal-lite 854,35921
(defun hl-hspace-hons-equal 874,36492
(defconstant hl-minimum-static-int950,39477
(defconstant hl-maximum-static-int955,39617
(defconstant hl-num-static-ints960,39753
(defconstant hl-dynamic-base-addr965,39936
(defconstant hl-static-int-shift974,40225
(ccl::defstatic *hl-symbol-addr-lock*982,40614
(defabbrev hl-symbol-addr 987,40779
(defun hl-addr-of-unusual-atom 1035,42990
(defmacro hl-addr-of 1078,44694
(defun hl-nat-combine* 1101,45603
(defabbrev hl-addr-combine* 1115,46146
(defun hl-hspace-grow-sbits 1142,47176
(defun hl-hspace-norm-atom 1184,49350
(defun hl-hspace-hons-normed 1222,50674
(defun hl-hspace-norm-aux 1357,57268
(defun hl-hspace-norm-expensive 1381,58104
(defabbrev hl-hspace-norm 1392,58537
(defun hl-hspace-persistent-norm 1401,58763
(defabbrev hl-hspace-hons 1424,59699
(defun hl-slow-alist-warning 1474,61573
(defun hl-hspace-hons-acons 1528,64113
(defun hl-shrink-alist-aux-really-slow 1591,66594
(defun hl-shrink-alist-aux-slow 1613,67590
(defun hl-shrink-alist-aux-fast 1640,68798
(defun hl-hspace-shrink-alist 1669,70021
(defun hl-hspace-hons-get 1713,72245
(defun hl-hspace-fast-alist-free 1728,72768
(defun hl-hspace-fast-alist-len 1734,72920
(defun hl-hspace-number-subtrees-aux 1753,73641
(defun hl-hspace-number-subtrees 1765,73975
(defun hl-system-gc 1780,74404
(defun hl-hspace-classic-restore 1798,74883
(defun hl-hspace-hons-clear 1855,77302
(defun hl-hspace-static-restore 1933,80530
(defun hl-hspace-hons-clear 1970,82097
(defun hl-hspace-hons-wash 2037,84798
(defun hl-maybe-resize-ht 2142,89386
(defun hl-hspace-resize 2170,90553
(defun hl-get-final-cdr 2241,93229
(defun hl-hspace-fast-alist-summary 2246,93330
(defun hl-hspace-hons-summary 2285,95013
(defparameter *default-hs*2369,98155
(defmacro hl-maybe-initialize-default-hs 2397,99251
(defun hons 2405,99395
(defun hons-copy 2410,99531
(defun hons-copy-persistent 2415,99668
(defun hons-equal 2421,99835
(defun hons-equal-lite 2427,100040
(defun hons-summary 2432,100225
(defun hons-clear 2437,100348
(defun hons-wash 2442,100472
(defun hons-resize-fn 2447,100589
(defun hons-acons 2459,101010
(defun hons-acons! 2465,101231
(defun hons-shrink-alist 2470,101420
(defun hons-shrink-alist! 2475,101571
(defun hons-get 2481,101749
(defun fast-alist-free 2487,101956
(defun fast-alist-len 2493,102175
(defun number-subtrees 2499,102392
(defun fast-alist-summary 2504,102573
(defun clear-hash-tables 2512,102776
(defun wash-memory 2517,102890

memoize-raw.lisp,15979
(defparameter *faking-batch-flag* 52,1926
(defun live-terminal-p 54,1966
(defmacro defg 94,3287
(defmacro defv 109,3782
(defg *form-ht* 129,4398
(defg *ignore-form-ht* 131,4444
(defmacro profiler-if 135,4548
(defmacro profiler-cond 148,5097
(defmacro profiler-and 154,5281
(defmacro profiler-or 161,5478
(defmacro profiler-when 170,5772
(defmacro profiler-unless 173,5848
(defmacro prinl 178,5941
(defv *number-of-arguments-and-values-ht*229,8232
(defun make-list-t 272,9769
(defmacro defn1 274,9827
(defmacro defn1-one-output 286,10307
(defmacro defn2 298,10834
(defmacro globlet 310,11321
(defconstant most-positive-mfixnum 344,12591
(deftype mfixnum 346,12645
(defg *float-ticks/second* 355,12821
(defg *float-internal-time-units-per-second*357,12854
(defabbrev internal-real-time 363,13037
(defn1 float-ticks/second-init 371,13362
(defmacro very-unsafe-incf 387,13813
(defmacro very-very-unsafe-aref-incf 400,14150
(defg *watch-file* 408,14372
(defg *watch-string*412,14505
(defmacro safe-incf 425,14851
(defn1 safe-incf-aux-error 463,16503
(defmacro safe-incf-aux 467,16634
(defmacro unwind-mch-lock 512,18340
(defmacro our-lock-unlock-ht1 550,19545
(defmacro our-lock-unlock-hons1 558,19763
(defmacro our-lock-unlock-compile1 562,19873
(defmacro our-lock-unlock-memoize1 566,19998
(defmacro our-lock-unlock-htmv1 570,20123
(defmacro our-lock-unlock-honsmv1 578,20377
(defmacro our-lock-unlock-compilemv1 582,20491
(defmacro our-lock-unlock-memoizemv1 586,20622
(defg *print-pprint-dispatch-orig* 593,20769
(defmacro our-syntax 595,20830
(defmacro our-syntax-nice 617,21603
(defmacro our-syntax-brief 629,21962
(defmacro ofd 639,22185
(defv *hons-verbose* 642,22301
(defg *ofv-note-printed* 643,22325
(defg *ofv-msg-list* 644,22355
(defg *ofe-msg-list* 645,22381
(defg *ofb-msg-list* 646,22407
(defun ofe 648,22434
(defun ofv 667,23089
(defun ofvv 686,23833
(defmacro ofg 703,24599
(defun ofw 708,24739
(defun ofb 714,24932
(defmacro ofn 727,25467
(defn1 ofnum 730,25549
(defmacro ofni 741,25863
(defmacro ofnm 744,25986
(defmacro oft 747,26094
(defmacro ofto 750,26215
(defmacro oftr 754,26350
(defn1 suffix 757,26479
(defn looking-at 764,26674
(defn1 meminfo 792,27702
(defn1 physical-memory 814,28473
(defn1 input-output-number-warning 819,28560
(defn1 input-output-number-error 826,28859
(defn1 number-of-arguments 830,28987
(defg fns-and-macros-that-return-last856,29797
(defn1 number-of-return-values 921,32147
(defn1 event-number 941,32862
(defconstant *empty-ht* 950,33187
(defconstant *start-car-ht-size* 963,33597
(defv *mht-default-size* 970,33901
(defv *mht-default-rehash-size* 972,33931
(defv *mht-default-rehash-threshold* 974,33981
(defv *mht-default-shared* 976,34031
(defn mht 981,34203
(defparameter *count-pons-calls* 997,34882
(defparameter *hons-report-discipline-failure* 1007,35309
(defg *hons-call-counter* 1012,35480
(defg *hons-misses-counter* 1013,35509
(defun hons-report-discipline-failure-message 1021,35690
(defmacro maybe-report-discipline-failure 1041,36441
(defg *if-counter* 1058,36957
(defg *if-true-array* 1062,37045
(defg *if-false-array* 1067,37257
(defn1 assoc-no-error-at-end 1091,38183
(defn1 too-long 1109,38715
(defn1 mis-ordered-commutative-args 1125,39307
(defn1 integer-pair 1144,40154
(defn1 our-gc 1150,40235
(defv *never-profile-ht*1175,40997
(defparameter *record-bytes*1545,50276
(defparameter *record-calls* 1552,50554
(defparameter *record-hits* 1556,50676
(defparameter *record-hons-calls* 1561,50851
(defparameter *record-mht-calls* 1565,50977
(defparameter *record-pons-calls* 1570,51178
(defparameter *record-time* 1574,51316
(defv *report-bytes* 1581,51503
(defv *report-calls* 1585,51659
(defv *report-calls-from* 1589,51764
(defv *report-calls-to* 1594,51936
(defv *report-hits* 1599,52116
(defv *report-hons-calls* 1603,52264
(defv *report-mht-calls* 1607,52405
(defv *report-pons-calls* 1615,52824
(defv *report-time* 1619,52947
(defv *report-on-memo-tables* 1623,53081
(defv *report-on-pons-tables* 1627,53214
(defv *report-ifs* 1631,53347
(defg *pons-call-counter* 1637,53515
(defg *pons-misses-counter* 1639,53545
(defmacro maybe-count-pons-calls 1641,53577
(defmacro maybe-count-pons-misses 1645,53707
(defg *memoize-info-ht* 1651,53866
(defg *memoize-call-array*1653,53898
(defg *compute-array* 1685,55589
(defv *initial-max-memoize-fns* 1702,56109
(defg *2max-memoize-fns* 1704,56147
(defconstant *ma-bytes-index* 1706,56206
(defconstant *ma-hits-index* 1708,56246
(defconstant *ma-mht-index* 1710,56286
(defconstant *ma-hons-index* 1712,56326
(defconstant *ma-pons-index* 1714,56366
(defconstant *ma-initial-max-symbol-to-fixnum* 1716,56406
(defg *max-symbol-to-fixnum* 1718,56457
(defg *memoize-init-done* 1728,56732
(defconstant *mo-f* 1733,56810
(defconstant *mo-h* 1735,56850
(defconstant *mo-o* 1737,56890
(defconstant *mf-old-caller* 1742,56983
(defconstant *mf-start-hons* 1744,57041
(defconstant *mf-start-pons* 1746,57099
(defconstant *mf-start-bytes* 1748,57157
(defconstant *mf-ans* 1750,57217
(defconstant *mf-ans-p* 1752,57261
(defconstant *mf-ma* 1754,57309
(defconstant *mf-args* 1756,57351
(defconstant *mf-2mmf* 1758,57397
(defconstant *mf-2mmf-fnn* 1760,57446
(defconstant *mf-count-loc* 1762,57503
(defconstant *mf-cl-error-msg*1764,57562
(defg *caller* 1768,57671
(defv *profile-reject-ht*1783,58344
(defn1 dubious-to-profile 2857,88551
(defmacro memoize-flush 2903,90522
(defmacro pist 2914,90944
(defmacro pist* 2919,91078
(defrec memoize-info-ht-entry2964,93179
(defmacro heap-bytes-allocated 2999,93685
(defn sync-memoize-call-array 3002,93767
(defun memoize-call-array-grow3027,94687
(defn1 symbol-to-fixnum-create 3059,96076
(defn1 symbol-to-fixnum 3083,97029
(defn1 fixnum-to-symbol 3090,97243
(defn1 coerce-index 3096,97400
(defn1 integer-pair 3110,97675
(defconstant atom-case-fudge 3114,97754
(defconstant most-positive-fudge 3115,97804
(defconstant most-negative-fudge 3116,97855
(defconstant -most-negative-fudge 3117,97905
(defn1 atom-case 3119,97965
(defmacro sqmpf 3138,98706
(defmacro hmnf 3141,98758
(defmacro static-hons-shift 3147,98848
(defn1 addr-for 3150,98937
(defn1 pons 3214,101422
(defvar *unsmashed-if* 3299,104059
(defvar *unsmashed-or* 3301,104114
(defg *smashed-if* 3303,104169
(defg *smashed-or* 3305,104194
(defn1 memoize-eval-compile 3307,104219
(defn1 memoizedp-raw 3333,105236
(defg *hons-gentemp-counter* 3338,105363
(defn1-one-output hons-gentemp 3340,105442
(defn1 st-lst 3349,105772
(defn1 dcls 3364,106247
(defn1 timer-error 3374,106615
(defg *assoc-eq-hack-ht* 3379,106692
(defn assoc-eq-hack 3382,106778
(defun abbrev 3395,107334
(defun prine 3419,108381
(defun prine-alist 3424,108512
(defn1 mf-trace-exit 3456,109557
(defmacro defnmem 3466,109864
(defn fle 3500,111175
(defg *memoize-fn-signature-error*3525,112204
(defg *sort-to-from-by-calls* 3534,112583
(defconstant *attached-fn-temp* 3536,112619
(defvar *memoize-use-attachment-warning-p* 3538,112686
(defun memoize-use-attachment-warning 3540,112733
(defun memoize-fn 3552,113369
(defn1 unmemoize-fn 4131,141448
(defn1 maybe-unmemoize 4180,143322
(defn1 memoized-functions 4192,143833
(defn1 length-memoized-functions 4200,144040
(defn1 unmemoize-all 4209,144313
(defn1 memoize-info 4221,144729
(defn1 rememoize-all 4269,146825
(defn1 uses-state 4293,147614
(defn memoize-here-come 4301,147964
(defun profile 4310,148332
(defn1 profiled-functions 4337,149384
(defn1 unmemoize-profiled 4354,149880
(defun profile-acl2 4363,150155
(defun profile-all 4428,152885
(defn functions-defined-in-form 4484,155098
(defn functions-defined-in-file 4498,155681
(defun profile-file 4519,156406
(defn1 not-memoized-error 4538,157180
(defmacro memoize-let 4541,157265
(defmacro memoize-on 4587,159230
(defmacro memoize-off 4598,159714
(defn1 memoize-condition 4609,160210
(defn global-suppress-condition-nil-memoization 4615,160360
(defn global-restore-memoize 4624,160623
(defg *memoize-summary-order-list*4634,160901
(defg *memoize-summary-limit* 4665,161757
(defg *shorten-ht* 4671,161965
(defn shorten 4673,162003
(defg *memoize-summary-order-reversed* 4702,163311
(defg *print-alist-width* 4708,163518
(defn1 print-alist 4710,163549
(defn1 pons-summary 4738,164590
(defun memoized-values 4779,166161
(defvar *acl2--*)4799,166994
(defn print-call-stack 4801,167013
(defn1 hons-calls 4835,168220
(defn1 pons-calls 4848,168578
(defn1 bytes-allocated 4861,168934
(defn1 number-of-hits 4873,169318
(defn1 number-of-memoized-entries 4885,169699
(defn1 number-of-mht-calls 4900,170182
(defn1 time-for-non-hits/call 4912,170572
(defn1 time/call 4917,170735
(defn1 hits/calls 4922,170862
(defn1 bytes-allocated/call 4928,171012
(defn char-list-fraction 4935,171169
(defn symbol-name-order 4941,171300
(defn1 execution-order 4949,171525
(defg *current-compiler-function* 4958,171816
(defg *trace-if-compiler-macro* 4961,171871
(defg *watch-if-branches-ht* 4964,171919
(defg *watch-if-branches-taken-ht* 4967,171988
(defn compute-calls-and-times 4972,172150
(defn1 number-of-calls 5032,174739
(defn1 print-not-called 5041,174971
(defn1 total-time 5060,175587
(defn lex-> 5071,175846
(defn1 memoize-summary-sort 5079,176038
(defn1 memoize-summary 5098,176650
(defg *short-symbol-name-width* 5182,180031
(defn short-symbol-name 5184,180068
(defn1 outside-p 5193,180379
(defn1 memoize-summary-after-compute-calls-and-times 5197,180493
(defn1 empty-ht-p 5503,194442
(defn clear-one-memo-and-pons-hash 5507,194544
(defn1 clear-memoize-table 5534,195654
(defn1 clear-memoize-tables 5542,195826
(defn clear-memoize-call-array 5557,196227
(defg *close-paren-obj* 5595,197672
(defg *dot-obj* 5597,197705
(defg *hons-readtable* 5599,197738
(defg *hacked-acl2-readtable* 5601,197797
(defparameter *compact-print-file-ht* 5603,197863
(defparameter *hons-read-ht* 5605,197907
(defmacro hons-read-ar-len 5607,197960
(defparameter *hons-read-ar*5609,198004
(defparameter *hons-read-ar-max* 5612,198088
(defparameter *compact-print-file-n* 5614,198126
(defg *space-owed* 5618,198215
(defg *hons-readtable-init-done* 5620,198240
(defn1 hread-nonsense 5622,198279
(defn1 check-hread-nonsense 5625,198356
(defun hread-error 5629,198492
(defn1 illegal-error1 5639,198873
(defn1 illegal-error2 5642,198964
(defn1 close-paren-read-macro 5645,199033
(defn1 dot-read-macro 5650,199176
(defn1 hons-read-list 5665,199800
(defn1 hons-read-list-top 5687,200457
(defn1 hons-read-reader 5697,200676
(defg *use-hons-in-read-object* 5709,200956
(defun clear-hons-read-ar 5711,200992
(defvar *inside-hons-read*5717,201177
(defun hons-read 5721,201278
(defn1 hons-read-file 5774,203737
(defmacro space-if-necessary 5788,204187
(defn1 compact-print-file-scan 5796,204329
(defn1 compact-print-file-help 5823,205362
(defun compact-print-stream 5885,207839
(defun compact-print-file5983,212427
(defun ns-=6060,215041
(defn1 ns-ns-reader 6118,217476
(defn1 compact-read-file 6158,219062
(defn1 hons-readtable-init 6185,219890
(defn1 memoize-init 6213,220780
(defg *max-mem-usage* 6245,221821
(defg *gc-min-threshold* 6250,221987
(defn1 set-and-reset-gc-thresholds 6253,222036
(defvar *sol-gc-installed* 6270,222788
(defn1 start-sol-gc 6273,222831
(defn1 set-gc-threshold 6306,223964
(defun maybe-set-gc-threshold 6316,224260
(defun number-procs-running 6324,224504
(defn1 load-average 6332,224676
(defun rwx-size 6338,224854
(defg *gnu-linux-proc-stat-fields*6409,227995
(defn pid-owner 6452,229739
(defn print-ancestry 6485,231011
(defn print-fds 6503,231651
(defn print-proc-stat 6514,232067
(defn proc-stat 6531,232704
(defn rss 6540,232950
(defg *hons-init-hook*6565,233874
(defn hons-init-hook-set 6716,238748
(defg *emod-trace-and-compile-function-symbols*6785,241589
(defn1 hons-init 6802,242194
(defn all-module-names 6816,242736
(defn all-modules 6821,242878
(defg *current-module-names-ht* 6825,242971
(defn1 current-module-name-p 6827,243033
(defun memsum 6845,243765
(defun memstat 6848,243821
(defmacro memo-on 6851,243878
(defmacro memo-off 6854,243928
(defun clear-memo-tables 6857,243980
(defg *compiled-module-ht* 6862,244116
(defg *watch-forms*6873,244537
(defg *watch-items*6901,245413
(defg *watch-last-real-time* 6946,246440
(defg *watch-last-run-time* 6948,246473
(defg *watch-start-real-time* 6950,246505
(defg *watch-start-run-time* 6952,246539
(defg *watch-start-gc-count* 6954,246572
(defg *watch-start-gc-time* 6956,246606
(defg *watch-start-heap-bytes-allocated* 6958,246638
(defg *watch-file-form*6964,246877
(defv *watch-dog-process* 6974,247134
(defv *watch-startup-process* 6984,247420
(defparameter *with-space-timer-raw-limit* 6991,247630
(defparameter *with-run-timer-raw-limit* 6994,247691
(defparameter *with-real-timer-raw-limit* 7004,248115
(defg *watch-lock-ht* 7014,248543
(defg *watch-real-seconds-between-dumps* 7022,248769
(defn watch-condition 7031,248985
(defmacro with-watch-lock 7057,250142
(define-condition with-timer-raw-condition-type 7102,251982
(defg *with-space-timer-raw-condition-instance*7110,252300
(defg *with-real-timer-raw-condition-instance*7114,252410
(defg *with-run-timer-raw-condition-instance*7118,252519
(defv *space-timer-raw-bytes* 7122,252627
(defv *space-timer-raw-value* 7125,252671
(defv *real-timer-raw-seconds* 7128,252728
(defv *real-timer-raw-value* 7131,252773
(defv *run-timer-raw-seconds* 7134,252828
(defv *run-timer-raw-value* 7137,252872
(defmacro with-space-timer-raw 7140,252926
(defmacro with-real-timer-raw 7162,253823
(defmacro with-run-timer-raw 7204,255672
(defn1 watch-dump 7245,257517
(defn1 maybe-watch-dump 7279,258622
(defn1 watch-kill 7355,261853
(defg *watch-count-ht* 7373,262392
(defn1 watch-count 7375,262435
(defn1 incf-watch-count 7378,262504
(defn1 set-watch-count 7381,262578
(defv *watch-sleep-seconds* 7384,262652
(defn1 swap-total 7389,262791
(defun watch 7392,262839
(defn1 first-string 7518,268208
(defg *undocumented-symbols* 7521,268285
(defn1 print-some-documentation 7523,268320
(defmacro print-documentation 7605,271226
(defn1 watch-help 7621,271662
(defun bytes-used 7713,273209
(defmacro defw 7751,274480
(defmacro oft-wrm 7756,274595
(defn1 date-string 7759,274676
(defw time-of-last-watch-update7770,274999
(defun watch-real-time 7773,275076
(defun watch-run-time 7777,275207
(defw hons-calls/sec-run-time7781,275335
(defw pons-calls/sec-run-time7789,275624
(defw pons-hits/calls7797,275913
(defw hons-hits/calls7805,276172
(defw gc-count 7818,276614
(defun functions-that-may-be-too-fast-to-sensibly-profile 7832,277121
(defw number-of-cpus-on-this-machine7840,277440
(defw physical-memory-on-this-machine7844,277560
(defun watch-shell-command 7849,277699
(defw time-since-watch-start 7854,277841
(defw timer-function-name7867,278395
(defun make-watchdog 7873,278547
(defun call-with-timeout 7887,278930
(defun if-report 7916,279835
(defun dump-if-report 8008,283419
(define-compiler-macro if 8021,283729
(defun setup-smashed-if 8036,284291
(define-compiler-macro if8060,285193
(define-compiler-macro or 8191,290707
(defun copy-hash-table8217,291559
(defun open-gzipped-file 8313,295577
(defv *csh-process* 8327,296103
(defv *csh-temporary-file-name* 8332,296236
(defn1 csh-stop 8339,296434
(defv *csh-start-string*8354,296881
(defn1 csh-start 8358,296976
(defn1 args-spaced 8383,297754
(defun csh 8395,298121
(defv *sh-process* 8505,302838
(defv *sh-temporary-file-name* 8510,302968
(defn1 sh-stop 8517,303162
(defv *sh-start-string*8532,303599
(defn1 sh-start 8536,303688
(defun sh 8561,304414
(defmacro case 8670,308701
(defmacro fixnum-case 8694,309576
(defun splitable-case 8708,310195
(defmacro with-lower-overhead 8725,310813
(defn lower-overhead 8737,311188
(defun our-gctime 8752,311597

multi-threading-raw.lisp,1401
(defmacro without-interrupts 56,2284
(defmacro unwind-protect-disable-interrupts-during-cleanup71,2834
(defstruct (atomically-modifiable-counter107,4337
(defun make-atomically-modifiable-counter 111,4504
(defmacro define-atomically-modifiable-counter 119,4703
(defmacro atomically-modifiable-counter-read 122,4843
(defmacro atomic-incf 130,5013
(defmacro atomic-incf-multiple 145,5545
(defmacro atomic-decf 161,6184
(defun lockp 176,6720
(defun make-lock 187,7061
(defmacro deflock 213,8182
(defmacro reset-lock 225,8597
(defmacro with-lock 235,8954
(defun run-thread 256,9641
(defun interrupt-thread 289,10889
(defun kill-thread 307,11497
(defun all-threads 317,11695
(defun current-thread 325,11877
(defun thread-wait 333,12008
(defstruct sbcl-semaphore346,12459
(defmacro with-potential-sbcl-timeout 352,12598
(defmacro with-potential-sbcl-timeout 372,13173
(defun make-semaphore 398,13975
(defun semaphorep 453,16590
(defun signal-semaphore 475,17353
(defun wait-on-semaphore 500,18184
(defun make-semaphore-notification 567,21139
(defun semaphore-notification-status 580,21486
(defun clear-semaphore-notification-status 593,21957
(defun set-semaphore-notification-status 607,22495
(defun make-condition-variable 650,24905
(defmacro signal-condition-variable 674,25589
(defmacro broadcast-condition-variable 694,26132
(defun wait-on-condition-variable 707,26374

parallel-raw.lisp,2068
(defun core-count-raw 216,10160
(defconstant *core-count*239,10917
(defconstant *unassigned-and-active-work-count-limit*243,11013
(defconstant *total-work-limit* 261,11980
(defconstant *max-idle-thread-count* 298,13662
(defvar *initial-threads* 306,14075
(defstruct parallelism-piece 316,14296
(defun throw-all-threads-in-list 463,21363
(defun kill-all-threads-in-list 482,22083
(defun all-threads-except-initial-threads-are-dead 494,22454
(defun send-die-to-all-except-initial-threads 501,22619
(defun kill-all-except-initial-threads 510,22947
(defun reset-parallelism-variables 519,23267
(defun eval-and-save-result 573,25140
(defun pop-work-and-set-thread 591,25874
(defun consume-work-on-work-queue-when-there 622,27281
(defun spawn-worker-threads-if-needed 768,34332
(defun add-work-list-to-queue 812,36494
(defun combine-array-results-into-list 836,37604
(defun remove-thread-array-from-work-queue-rec846,37928
(defun remove-thread-array-from-work-queue 880,39196
(defun terminate-siblings 889,39519
(defun generate-work-list-from-closure-list-rec902,40157
(defun generate-work-list-from-closure-list922,41018
(defun parallelism-resources-available 950,42178
(defun throw-threads-in-array 970,43215
(defun decrement-children-left 999,44674
(defun wait-for-children-to-finish1007,44993
(defun wait-for-resumptive-parallelism-resources 1025,45744
(defun early-terminate-children-and-rewait1045,46684
(defun prepare-to-wait-for-children 1078,47962
(defun parallelize-closure-list 1097,48703
(defun parallelize-fn 1207,53558
(defmacro closure-for-expression 1223,54265
(defmacro closure-list-for-expression-list 1226,54333
(defun parallelism-condition 1235,54616
(defmacro pargs 1246,54946
(defun plet-doublets 1266,55649
(defun make-closures 1273,55858
(defun identity-list 1286,56355
(defun make-list-until-non-declare 1288,56394
(defun parse-additional-declare-forms-for-let 1294,56659
(defmacro plet 1305,57066
(defun and-list 1329,58031
(defmacro pand 1337,58176
(defun or-list 1358,58962
(defmacro por 1367,59115

init.lisp,0

acl2-check.lisp,0
